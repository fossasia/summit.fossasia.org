%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: SCS logo_new branding (Nov 2015).eps
%%Creator: Adobe Illustrator(R) 14.0
%%For: User 3
%%CreationDate: 11/5/16
%%BoundingBox: 0 0 455 768
%%HiResBoundingBox: 0 0 454.8359 767.9990
%%CropBox: 0 0 454.8359 767.9990
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 14.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 14.0.0 x367 R agm 4.4890 ct 5.1541%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                                   
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.2-c063 53.352624, 2008/07/30-18:05:41        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">logo_branding</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:MetadataDate>2016-05-11T08:57:51+07:00</xmp:MetadataDate>
         <xmp:ModifyDate>2016-05-11T08:57:51+07:00</xmp:ModifyDate>
         <xmp:CreateDate>2016-05-11T08:57:50+07:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CS4</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>152</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAACYAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYqw&#xA;lvy7vv0ldXcOtNbxzz3VzFBFE6+lNdQyReop9Y8pB6vIuwrsAvAZr/yJ4iRKrJPxIPn5/wBjvR2x&#xA;DgjE47IEY2SNxGQNfTy2quW9niLv8B+Zfq8sR82XbNJ6HGQiYFPRgeJqcbhTV2cSHf7Sjlyx/J5K&#xA;rxD9vd71/lbBxA+BHbi7usgf5vSq9x2pUuPIeryNZyx+YJY7u3gt7ea+9Im4kFu8jsBJ6oKpL6nx&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:InstanceID>xmp.iid:F77F117407206811871FD1ED336D0E0F</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:F77F117407206811871FD1ED336D0E0F</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5B20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:818daed4-715a-5d41-bed1-d0ec62df8c46</stRef:instanceID>
            <stRef:documentID>xmp.did:F97F117407206811AE43DADAB48D1F90</stRef:documentID>
            <stRef:originalDocumentID>uuid:5B20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:CF7F11740720681191099C3B601C4548</stEvt:instanceID>
                  <stEvt:when>2008-04-17T14:19:07+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0080117407206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T12:18:29-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F87F117407206811B628E3BF27C8C41B</stEvt:instanceID>
                  <stEvt:when>2008-05-22T12:59:33-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0BC3BD25102DDD1181B594070CEB88D9</stEvt:instanceID>
                  <stEvt:when>2008-05-28T17:02:32-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F87F117407206811BB1DBF8F242B6F84</stEvt:instanceID>
                  <stEvt:when>2008-06-09T15:05:10-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F97F117407206811BB1DBF8F242B6F84</stEvt:instanceID>
                  <stEvt:when>2008-06-09T15:05:47-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F77F117407206811ACAFB8DA80854E76</stEvt:instanceID>
                  <stEvt:when>2008-06-11T14:30:01-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FEE440664A3DDD11BD33D3EB8D3A1068</stEvt:instanceID>
                  <stEvt:when>2008-06-18T22:22:44+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:2F85BBCD703EDD11A8D1DFE8FDCD79D1</stEvt:instanceID>
                  <stEvt:when>2008-06-19T19:30:09-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:676AE2A5723EDD11A6F1BABF7C5A7A51</stEvt:instanceID>
                  <stEvt:when>2008-06-19T19:43:22-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:81784906200A11689FE8CB9EA85C5459</stEvt:instanceID>
                  <stEvt:when>2008-06-26T06:08:19-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F87F11740720681192B0EF0EA0D2C70B</stEvt:instanceID>
                  <stEvt:when>2015-07-28T10:29:57+08:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0380117407206811871F8CC6BF6F2F0F</stEvt:instanceID>
                  <stEvt:when>2015-11-12T08:55:34+08:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0480117407206811871F8CC6BF6F2F0F</stEvt:instanceID>
                  <stEvt:when>2015-11-12T08:57:42+08:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FE7F117407206811994CF2ACA4D33D76</stEvt:instanceID>
                  <stEvt:when>2015-11-17T11:31:23+08:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:70609A4B352068118F62C5177DF43485</stEvt:instanceID>
                  <stEvt:when>2015-12-07T16:17:35+08:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:72609A4B352068118F62C5177DF43485</stEvt:instanceID>
                  <stEvt:when>2015-12-07T16:44:42+08:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F97F117407206811AE43DADAB48D1F90</stEvt:instanceID>
                  <stEvt:when>2016-02-17T14:25:13+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F77F117407206811871FD1ED336D0E0F</stEvt:instanceID>
                  <stEvt:when>2016-05-11T08:57:51+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Basic CMYK</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>20.999993</stDim:w>
            <stDim:h>29.699996</stDim:h>
            <stDim:unit>Centimeters</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>FagoNoBoldLf-Roman</stFnt:fontName>
                  <stFnt:fontFamily>FagoNoBoldLf</stFnt:fontFamily>
                  <stFnt:fontFace>Roman</stFnt:fontFace>
                  <stFnt:fontType>Type 1</stFnt:fontType>
                  <stFnt:versionString>001.000</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>FagoNoBolLfRom; FF FagoNoBoldLf</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>MyriadPro-Regular</stFnt:fontName>
                  <stFnt:fontFamily>Myriad Pro</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 2.037;PS 2.000;hotconv 1.0.51;makeotf.lib2.0.18671</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>MyriadPro-Regular.otf</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>100.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Red</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Yellow</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Green</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Cyan</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Blue</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Magenta</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=15 M=100 Y=90 K=10</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>14.999998</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>90.000000</xmpG:yellow>
                           <xmpG:black>10.000002</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=90 Y=85 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>90.000000</xmpG:magenta>
                           <xmpG:yellow>85.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=80 Y=95 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>80.000000</xmpG:magenta>
                           <xmpG:yellow>95.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=50 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>50.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=35 Y=85 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>35.000004</xmpG:magenta>
                           <xmpG:yellow>85.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=5 M=0 Y=90 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>5.000001</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>90.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=20 M=0 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>19.999998</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=0 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>50.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=75 M=0 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>75.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=85 M=10 Y=100 K=10</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>85.000000</xmpG:cyan>
                           <xmpG:magenta>10.000002</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>10.000002</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=90 M=30 Y=95 K=30</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>90.000000</xmpG:cyan>
                           <xmpG:magenta>30.000002</xmpG:magenta>
                           <xmpG:yellow>95.000000</xmpG:yellow>
                           <xmpG:black>30.000002</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=75 M=0 Y=75 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>75.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>75.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=80 M=10 Y=45 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>80.000000</xmpG:cyan>
                           <xmpG:magenta>10.000002</xmpG:magenta>
                           <xmpG:yellow>45.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=70 M=15 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>70.000000</xmpG:cyan>
                           <xmpG:magenta>14.999998</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=85 M=50 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>85.000000</xmpG:cyan>
                           <xmpG:magenta>50.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=100 M=95 Y=5 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>95.000000</xmpG:magenta>
                           <xmpG:yellow>5.000001</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=100 M=100 Y=25 K=25</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>25.000000</xmpG:yellow>
                           <xmpG:black>25.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=75 M=100 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>75.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=100 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>50.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=35 M=100 Y=35 K=10</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>35.000004</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>35.000004</xmpG:yellow>
                           <xmpG:black>10.000002</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=10 M=100 Y=50 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>10.000002</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>50.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=95 Y=20 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>95.000000</xmpG:magenta>
                           <xmpG:yellow>19.999998</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=25 M=25 Y=40 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>25.000000</xmpG:cyan>
                           <xmpG:magenta>25.000000</xmpG:magenta>
                           <xmpG:yellow>39.999996</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=40 M=45 Y=50 K=5</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>39.999996</xmpG:cyan>
                           <xmpG:magenta>45.000000</xmpG:magenta>
                           <xmpG:yellow>50.000000</xmpG:yellow>
                           <xmpG:black>5.000001</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=50 Y=60 K=25</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>50.000000</xmpG:cyan>
                           <xmpG:magenta>50.000000</xmpG:magenta>
                           <xmpG:yellow>60.000004</xmpG:yellow>
                           <xmpG:black>25.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=55 M=60 Y=65 K=40</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>55.000000</xmpG:cyan>
                           <xmpG:magenta>60.000004</xmpG:magenta>
                           <xmpG:yellow>65.000000</xmpG:yellow>
                           <xmpG:black>39.999996</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=25 M=40 Y=65 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>25.000000</xmpG:cyan>
                           <xmpG:magenta>39.999996</xmpG:magenta>
                           <xmpG:yellow>65.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=30 M=50 Y=75 K=10</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>30.000002</xmpG:cyan>
                           <xmpG:magenta>50.000000</xmpG:magenta>
                           <xmpG:yellow>75.000000</xmpG:yellow>
                           <xmpG:black>10.000002</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=35 M=60 Y=80 K=25</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>35.000004</xmpG:cyan>
                           <xmpG:magenta>60.000004</xmpG:magenta>
                           <xmpG:yellow>80.000000</xmpG:yellow>
                           <xmpG:black>25.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=40 M=65 Y=90 K=35</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>39.999996</xmpG:cyan>
                           <xmpG:magenta>65.000000</xmpG:magenta>
                           <xmpG:yellow>90.000000</xmpG:yellow>
                           <xmpG:black>35.000004</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=40 M=70 Y=100 K=50</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>39.999996</xmpG:cyan>
                           <xmpG:magenta>70.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>50.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=70 Y=80 K=70</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>50.000000</xmpG:cyan>
                           <xmpG:magenta>70.000000</xmpG:magenta>
                           <xmpG:yellow>80.000000</xmpG:yellow>
                           <xmpG:black>70.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE 172 C</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>65.882401</xmpG:magenta>
                           <xmpG:yellow>87.843102</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE 2757 C</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>81.960800</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>30.196100</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE 1788 C</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>83.921600</xmpG:magenta>
                           <xmpG:yellow>87.843102</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE Bright Orange C</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>LAB</xmpG:mode>
                           <xmpG:L>63.529400</xmpG:L>
                           <xmpG:A>62</xmpG:A>
                           <xmpG:B>82</xmpG:B>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE 534 C</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>80.000000</xmpG:magenta>
                           <xmpG:yellow>30.000002</xmpG:yellow>
                           <xmpG:black>5.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE 637 C</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>55.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>9.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE 803 C</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>70.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>100.000000</xmpG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=100</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>100.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=90</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>89.999405</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=80</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>79.998795</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=70</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>69.999702</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=60</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>59.999104</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=50</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>50.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=40</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>39.999401</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=30</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>29.998802</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=20</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>19.999701</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=10</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>9.999103</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=5</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>4.998803</xmpG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Crosses Color Group</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=10 M=70 Y=80 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>10.000002</xmpG:cyan>
                           <xmpG:magenta>70.000000</xmpG:magenta>
                           <xmpG:yellow>80.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=10 M=50 Y=80 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>10.000002</xmpG:cyan>
                           <xmpG:magenta>50.000000</xmpG:magenta>
                           <xmpG:yellow>80.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=65 M=10 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>65.000000</xmpG:cyan>
                           <xmpG:magenta>10.000002</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=90 Y=10 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>50.000000</xmpG:cyan>
                           <xmpG:magenta>90.000000</xmpG:magenta>
                           <xmpG:yellow>10.000002</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=25 M=85 Y=60 K=10</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>25.000000</xmpG:cyan>
                           <xmpG:magenta>85.000000</xmpG:magenta>
                           <xmpG:yellow>60.000004</xmpG:yellow>
                           <xmpG:black>10.000002</xmpG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 9.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -767.999 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 767.999 li
454.836 767.999 li
454.836 0 li
cp
clp
[1 0 0 1 0 0 ]ct
232.53 159.921 mo
239.339 175.704 250.488 194.502 250.488 194.502 cv
250.285 194.673 231.983 175.963 223.9 164.95 cv
220.983 160.97 215.118 162.593 217.072 168.399 cv
222.485 184.587 230.32 199.52 242.148 210.59 cv
246.776 214.938 248.942 214.554 252.396 213.098 cv
254.438 212.229 251.769 211.671 249.329 209.271 cv
242.612 202.639 237.821 196.697 234.438 189.025 cv
239.564 195.276 246.928 202.519 253.397 206.853 cv
255.534 208.274 260.168 211.184 262.818 209.948 cv
266.267 208.339 265.739 205.388 263.104 200.763 cv
251.492 180.301 246.18 168.659 240.78 157.862 cv
238.142 152.606 230.882 156.117 232.53 159.921 cv
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 .86 1 0 cmyk
f
246.014 151.083 mo
244.001 152.274 242.146 154.459 243.579 157.378 cv
245.01 160.292 245.956 163.421 250.074 161.56 cv
254.196 159.701 253.65 159.288 254.624 161.985 cv
259.529 174.037 263.926 187.351 267.677 198.899 cv
268.286 201.343 269.55 206.81 271.316 206.506 cv
272.972 206.229 275.81 204.257 276.433 203.028 cv
277.996 198.802 268.496 174.541 265.552 166.759 cv
264.148 162.056 260.414 156.79 262.833 154.757 cv
264.935 153.005 266.875 152.225 266.53 149.527 cv
264.718 141.41 260.929 144.297 258.964 145.212 cv
257.565 145.926 247.44 150.251 246.014 151.083 cv
cp
f
235.572 209.551 mo
232.704 208.989 231.523 210.973 227.579 209.205 cv
223.61 207.446 222.595 205.354 221.188 202.337 cv
221.411 198.98 228.483 201.196 226.267 196.318 cv
224.676 193.453 223.396 191.511 220.042 191.922 cv
216.018 192.753 214.843 194.062 212.848 192.111 cv
210.835 190.165 208.411 185.879 206.853 182.532 cv
206.199 180.792 205.522 178.855 208.521 178.047 cv
210.5 177.521 213.202 176.697 212.667 174.188 cv
212.343 172.635 211.405 169.957 210.13 168.808 cv
208.622 167.458 206.011 168.768 204.691 169.5 cv
203.896 169.934 202.4 170.756 201.618 171.251 cv
195.604 174.767 198.239 182.403 201.178 186.992 cv
207.059 196.264 216.514 207.877 221.836 212.319 cv
227.169 216.758 232.873 217.876 238.655 216.223 cv
240.387 215.651 240.677 215.017 240.481 213.639 cv
240.336 212.538 237.438 209.905 235.572 209.551 cv
cp
f
211.56 208.67 mo
203.638 205.837 195.903 199.85 191.009 191.866 cv
189.881 190.028 188.309 186.035 191.048 186.218 cv
193.433 186.376 194.163 186.903 195.325 185.59 cv
196.812 183.958 197.096 181.532 195.191 179.834 cv
192.55 177.457 187.988 176.711 183.659 178.745 cv
179.345 180.764 180.843 187.735 184.616 193.753 cv
191.858 205.334 199.82 209.736 206.244 212.813 cv
209.482 214.347 216.747 217.301 217.493 215.229 cv
218.456 212.569 217.282 210.334 211.56 208.67 cv
cp
f
296.854 126.029 mo
294.33 127.803 288.427 131.038 287.429 133.261 cv
286.441 135.486 295.951 160.714 296.526 175.933 cv
296.951 178.337 298.447 177.724 299.311 177.16 cv
301.429 175.755 303.75 168.2 304.579 163.138 cv
304.763 161.987 305.065 160.435 305.149 159.659 cv
305.416 157.344 304.564 155.935 303.812 156.203 cv
302.561 156.652 300.593 161.701 300.4 160.859 cv
299.976 158.923 298.987 154.759 298.826 153.144 cv
298.543 150.455 302.84 149.409 303.371 146.742 cv
304.196 142.519 303.026 139.809 300.964 141.106 cv
299.281 142.148 297.094 144.557 296.577 144.431 cv
295.855 143.698 294.767 138.663 294.796 137.744 cv
294.253 133.895 299.06 134.471 299.856 131.489 cv
300.29 130.091 299.251 124.328 296.854 126.029 cv
cp
f
283.788 157.422 mo
284.235 160.171 283.257 162.255 283.257 162.255 cv
283.257 162.255 282.102 165.551 281.413 164.012 cv
280.466 159.737 279.354 156.007 277.044 149.38 cv
276.456 146.463 277.736 146.054 279.235 146.052 cv
281.601 146.067 283.216 153.931 283.788 157.422 cv
cp
277.347 136.336 mo
274.494 137.405 271.661 138.667 270.313 139.588 cv
268.954 140.533 266.323 142.245 268.651 147.975 cv
274.94 166.321 281.683 192.967 282.171 198.252 cv
282.37 200.406 285.162 197.519 286.431 196.244 cv
287.685 194.973 288.498 194.196 288.213 192.55 cv
287.493 188.429 286.251 183.577 284.56 178.533 cv
284.56 178.533 283.713 175.625 285.088 176.992 cv
288.181 181.342 290.063 186.097 291.317 190.414 cv
291.317 190.414 291.669 191.17 292.401 190.104 cv
293.458 189.142 295.532 184.698 295.532 184.698 cv
295.532 184.698 296.433 182.126 295.679 180.932 cv
293.467 176.569 290.483 172.321 286.603 168.583 cv
286.603 168.583 289.24 164.576 289.348 157.725 cv
289.424 153.538 287.929 148.436 286.729 143.976 cv
285.833 140.649 282.233 134.09 277.347 136.336 cv
cp
f
226.821 153.092 mo
230.609 153.907 234.242 150.188 235.245 146.447 cv
235.901 140.948 232.839 139.204 228.407 141.061 cv
224.175 142.827 217.722 129.822 216.77 126.943 cv
215.55 123.345 214.896 121.412 216.974 119.734 cv
220.44 117.241 222.061 116.098 219.95 112.386 cv
218.716 110.702 216.25 111.623 214.644 112.33 cv
210.958 113.951 210.997 108.084 210.604 104.867 cv
210.206 101.619 211.191 99.4839 212.174 98.4497 cv
213.05 97.4976 212.403 91.9097 210.296 92.8926 cv
207.781 93.7813 206.164 95.8613 205.28 98.5278 cv
203.824 103.301 204.341 111.502 205.882 117.375 cv
208.707 127.121 210.305 132.794 216.563 143.442 cv
218.043 145.736 219.443 147.851 221.499 149.791 cv
223.186 151.389 224.607 152.681 226.821 153.092 cv
cp
f
177.26 125.035 mo
175.581 125.127 173.884 126.999 172.886 128.151 cv
171.755 129.48 169.945 132.983 169.468 135.176 cv
168.211 140.908 168.167 145.522 174.815 155.35 cv
176.216 157.417 179.78 161.576 180.467 162.522 cv
183.262 166.373 182.008 169.028 179.323 167.925 cv
177.979 167.382 176.976 165.422 176.486 164.838 cv
175.207 163.369 172.147 164.795 173.823 168.477 cv
175.317 172.954 179.698 175.439 183.871 175.059 cv
188.026 174.685 193.972 169.207 187.43 159.676 cv
184.979 156.119 181.591 153.128 178.437 148.697 cv
175.233 144.189 173.753 140.408 175.29 135.563 cv
176.098 133.023 177.1 132.445 178.368 132.04 cv
179.451 131.668 179.71 129.892 179.725 129.26 cv
179.742 126.854 178.701 124.96 177.26 125.035 cv
cp
f
188.565 109.285 mo
178.323 114.672 180.237 136.405 186.432 152.027 cv
189.204 159.05 196.338 170.328 203.878 165.375 cv
207.651 162.892 207.934 159.181 206.134 156.101 cv
203.836 152.167 200.856 153.708 199.68 155.125 cv
198.957 156.005 197.183 155.893 195.467 153.669 cv
189.185 145.478 188.13 133.796 187.827 126.777 cv
187.53 120.093 189.78 119.959 190.297 117.218 cv
192.828 111.257 190.576 108.243 188.565 109.285 cv
cp
f
229.754 109.476 mo
229.896 109.348 245.001 125.293 254.812 135.57 cv
261.112 142.194 265.896 136.43 263.869 132.085 cv
257.251 117.891 241.997 93.6299 233.114 88.0083 cv
231.253 86.8193 227.178 86.605 225.927 87.6484 cv
225.017 88.4058 225.528 89.459 226.722 90.4761 cv
235.252 99.6963 243.464 112.29 243.464 112.29 cv
243.423 112.311 226.34 95.9512 217.425 91.0708 cv
215.466 90.002 213.005 91.9214 213.849 93.5728 cv
225.673 116.387 231.268 129.048 235.12 138.598 cv
236.771 142.67 238.818 147.124 241.988 146.813 cv
244.386 146.587 247.07 143.568 244.6 138.275 cv
234.58 116.782 229.754 109.476 229.754 109.476 cv
cp
f
277.561 119.099 mo
274.139 117.963 273.929 124.654 269.471 118.459 cv
265.949 113.584 263.545 110.095 253.699 95.4961 cv
249.937 89.9272 255.642 94.8062 256.659 94.5381 cv
258.554 94.0469 256.119 87.3984 252.399 86.5557 cv
238.587 83.439 240.013 87.3027 245.058 94.2041 cv
259.981 114.601 265.001 129.589 271.336 132.335 cv
274.72 133.819 278.766 130.68 279.827 128.376 cv
281.413 125.01 280.359 120.028 277.561 119.099 cv
cp
f
293.974 117.128 mo
292.261 115.106 290.021 118.298 289.223 118.386 cv
288.132 118.51 288.005 119.363 285.318 115.178 cv
282.03 110.03 280.776 109.759 280.681 108.886 cv
280.425 106.591 286.848 107.343 284.087 103.98 cv
280.371 99.4551 279.662 105.354 273.367 99.9043 cv
271.901 98.625 269.585 95.834 269.719 94.9722 cv
269.849 94.1045 273.657 96.0142 274.414 95.2227 cv
274.765 94.8369 274.738 93.5713 273.554 92.7471 cv
271.072 91.0225 267.154 89.4517 263.629 88.1533 cv
259.599 86.6743 257.262 89.0635 259.797 92.4639 cv
266.538 101.439 275.554 107.666 284.806 126.475 cv
286.771 130.472 292.831 124.607 293.82 123.848 cv
296.076 122.108 295.244 118.621 293.974 117.128 cv
cp
f
201.644 104.063 mo
201.744 100.008 199.89 99.4761 198.827 99.7627 cv
197.141 100.222 195.612 102.849 195.122 104.078 cv
190.273 116.295 199.546 137.249 206.081 151.848 cv
207.64 154.945 209.968 160.181 213.769 159.972 cv
217.817 159.752 219.194 156.568 217.273 153.263 cv
213.444 146.996 199.688 121.787 201.644 104.063 cv
cp
f
198.219 243.827 mo
196.755 243.827 195.36 243.333 195.36 243.333 cv
195.36 240.731 li
195.36 240.731 197.145 241.225 197.791 241.225 cv
198.587 241.225 199.062 240.99 199.062 240.259 cv
199.062 239.635 198.604 239.418 198.047 239.14 cv
197.401 238.817 li
196.586 238.409 195.229 237.656 195.229 235.612 cv
195.229 232.815 197.316 231.998 199.274 231.998 cv
200.78 231.998 201.94 232.515 201.94 232.515 cv
201.94 235.009 li
201.94 235.009 200.67 234.56 199.554 234.56 cv
198.931 234.56 198.521 234.839 198.521 235.396 cv
198.521 236.063 199.038 236.215 199.638 236.538 cv
200.284 236.883 li
201.189 237.354 202.371 238.106 202.371 240.086 cv
202.371 243.292 200.089 243.827 198.219 243.827 cv
cp
f
204.003 243.613 mo
204.003 232.214 li
207.425 232.214 li
207.425 243.613 li
204.003 243.613 li
cp
205.704 230.707 mo
204.691 230.707 203.92 229.869 203.92 228.88 cv
203.92 227.892 204.691 227.074 205.704 227.074 cv
206.716 227.074 207.514 227.892 207.514 228.88 cv
207.514 229.869 206.716 230.707 205.704 230.707 cv
cp
f
215.404 243.613 mo
215.404 235.827 li
215.404 235.139 215.275 234.925 214.693 234.925 cv
213.964 234.925 213.015 235.44 213.015 235.44 cv
213.015 243.613 li
209.593 243.613 li
209.593 232.214 li
212.305 232.214 li
212.949 233.116 li
212.949 233.116 214.2 231.998 215.981 231.998 cv
217.832 231.998 218.822 232.966 218.822 235.076 cv
218.822 243.613 li
215.404 243.613 li
cp
f
224.952 233.957 mo
224.31 233.957 223.942 234.279 223.942 235.869 cv
223.942 237.719 224.202 238.043 224.952 238.043 cv
225.771 238.043 225.964 237.698 225.964 235.869 cv
225.964 234.234 225.685 233.957 224.952 233.957 cv
cp
225.663 243.613 mo
223.923 243.44 li
223.688 243.85 223.491 244.345 223.491 244.797 cv
223.491 245.655 224.05 245.959 224.803 245.959 cv
226.095 245.959 226.89 245.722 226.89 244.669 cv
226.89 243.827 226.396 243.678 225.663 243.613 cv
cp
228.805 234.364 mo
229.128 234.859 229.342 235.462 229.342 235.999 cv
229.342 239.226 227.448 240 224.952 240 cv
224.286 240 223.641 239.872 223.641 239.872 cv
223.641 239.872 223.403 240.148 223.403 240.388 cv
223.403 240.796 223.664 240.945 224.245 240.99 cv
226.741 241.205 li
228.936 241.397 230.247 241.936 230.247 244.345 cv
230.247 247.142 228.374 247.96 224.696 247.96 cv
221.878 247.96 220.179 247.444 220.179 245.292 cv
220.179 244.238 220.909 243.378 221.64 242.904 cv
220.995 242.536 220.609 241.958 220.609 241.076 cv
220.609 240.128 221.319 239.463 221.962 239.119 cv
221.147 238.473 220.565 237.484 220.565 235.869 cv
220.565 232.771 222.696 231.998 224.952 231.998 cv
225.706 231.998 226.201 232.214 226.741 232.214 cv
230.461 232.214 li
230.461 234.407 li
228.805 234.364 li
cp
f
235.966 238.106 mo
235.278 238.128 li
234.396 238.15 234.097 238.538 234.097 240 cv
234.097 241.225 234.44 241.549 234.976 241.549 cv
235.492 241.549 235.966 241.205 235.966 241.205 cv
235.966 238.106 li
cp
236.548 243.613 mo
236.032 242.753 li
236.032 242.753 235.278 243.827 233.879 243.827 cv
232.634 243.827 230.739 243.464 230.739 240.148 cv
230.739 236.71 233.407 236.299 234.847 236.299 cv
235.966 236.299 li
235.966 235.525 li
235.966 234.903 235.707 234.602 234.762 234.602 cv
233.666 234.602 231.749 235.182 231.749 235.182 cv
231.749 232.644 li
231.749 232.644 233.58 231.998 235.516 231.998 cv
237.732 231.998 239.365 232.644 239.365 235.376 cv
239.365 243.613 li
236.548 243.613 li
cp
f
246.293 234.58 mo
245.624 234.58 245.001 235.097 245.001 235.097 cv
245.001 241.225 li
245.001 241.225 245.582 241.377 245.969 241.377 cv
246.722 241.377 247.433 240.86 247.433 237.808 cv
247.433 234.903 247.066 234.58 246.293 234.58 cv
cp
246.485 243.827 mo
245.778 243.827 245.001 243.57 245.001 243.57 cv
245.001 247.702 li
241.583 247.702 li
241.583 232.214 li
244.336 232.214 li
244.829 232.988 li
244.829 232.988 245.755 231.998 247.261 231.998 cv
248.897 231.998 250.851 232.472 250.851 237.808 cv
250.851 243.57 248.034 243.827 246.485 243.827 cv
cp
f
256.96 234.364 mo
255.971 234.364 255.499 234.967 255.499 237.912 cv
255.499 240.816 256.123 241.441 256.96 241.441 cv
257.778 241.441 258.426 240.926 258.426 237.912 cv
258.426 234.903 258.016 234.364 256.96 234.364 cv
cp
256.96 243.827 mo
254.403 243.827 252.101 242.775 252.101 237.912 cv
252.101 233.074 254.403 231.998 256.96 231.998 cv
259.456 231.998 261.824 233.032 261.824 237.912 cv
261.824 242.817 259.479 243.827 256.96 243.827 cv
cp
f
268.449 234.967 mo
267.523 234.967 266.985 235.482 266.985 235.482 cv
266.985 243.613 li
263.566 243.613 li
263.566 232.214 li
266.297 232.214 li
266.771 233.377 li
266.771 233.377 267.223 231.998 268.687 231.998 cv
269.439 231.998 269.845 232.214 269.845 232.214 cv
269.845 235.204 li
269.845 235.204 269.202 234.967 268.449 234.967 cv
cp
f
274.839 234.15 mo
273.806 234.15 273.61 235.031 273.587 237.075 cv
275.783 237.075 li
275.783 235.376 275.763 234.15 274.839 234.15 cv
cp
279.009 239.053 mo
273.568 239.053 li
273.568 240.926 274.341 241.184 275.355 241.184 cv
276.448 241.184 278.428 240.731 278.428 240.731 cv
278.428 243.313 li
278.428 243.313 276.944 243.827 275.355 243.827 cv
272.942 243.827 270.17 243.398 270.17 237.936 cv
270.17 233.14 272.427 231.998 274.839 231.998 cv
277.718 231.998 279.14 233.848 279.032 238.15 cv
279.009 239.053 li
cp
f
454.836 503.901 mo
263.909 503.901 li
263.909 306.923 li
454.836 306.923 li
454.836 503.901 li
cp
0 0 0 1 cmyk
f
0 .86 1 0 cmyk
%ADOBeginSubsetFont: FagoNoBoldLf-Roman Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.13 dict dup begin/FontType 1 def/FontName /FagoNoBoldLf-Roman def/FontInfo 6 dict dup begin/Notice (< info@fontfont.de > Copyright Ole Schaefer, 1999. Published by FontShop International for  FontFont Release 25, Fago is a trademark of FSI Fonts and Software GmbH.) def/Weight (Roman) def/ItalicAngle 0 defend def/PaintType 0 def/FontMatrix [0.000999999 0 0 0.000999999 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 32 /space putdup 67 /C putdup 76 /L putdup 83 /S putdup 99 /c putdup 101 /e putdup 103 /g putdup 105 /i putdup 110 /n putdup 111 /o putdup 114 /r putdup 116 /t putdef/UniqueID 4003050 def/FontBBox {-120 -210 1238 936} defendsystemdict begindup /Private13 dict dup begin/|- {def} def/| {put} def/BlueValues [-10 0 530 540 700 710] def/OtherBlues [-200 -190] def/BlueScale 0.363636 def/StdHW [76.4059] def/StdVW [89.5179] def/StemSnapH [67.9719 76.4059] def/StemSnapV [75.9299 89.5179] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings13 dict dup begin/space <1C60D8A8C9B83E2D40> |-/C <1C60D8A8C9B74F3628D42F4AE61C801BBF0E11823467601FF7EC796400E04B5E48454A821F07F6017BDB95E0D922DEE0086A451B1EBE400D0E65D43844AB49162A520B3D9E235463C640D624CEC88474> |-/L <1C60D8A8C9B760FD974398E016DA74E8456842D28CD22A026E267E9E32E6289711DA7512BEA0CAF0995B> |-/S <1C60D8A8C9B74F363CB44C1FB02D533B06210107387C7E0D33E85AC260CC2838C6E1D103CF320BA8BC89C4F539BCC106FBA9A224A5EF88E7D7AEA60081AE5AC44F4073192A70006F57C8C4F445533754488E5E5BE5CBDCBB10F45FFF26468D1B889E8A9322FE4330CBEFE8F722E70F16467A4910198E> |-/c <1C60D8A8C9B76D61E43F4588B727BCF96C4465F2DD7EC75685730F6EB2F4C7CB312D9F53D036BD42D65AED1EDCA6B107B4042DB685D751BFE231E87285ECC479063B3D3CAF67AAE7A30E7672909F> |-/e <1C60D8A8C9B784FA2576222177086E5FAF7772915BA9E9030A9CCEE9A6607DDECC3DF26B2563F1629017C88079208B07C627214A0A4940946B975DCE9F4725AF4E119CF7D83F930F99A6B8BD396390FC7B27D62A83E2E8B3646558D5C004C0F76FD6E1D793> |-/g <1C60D8A8C9B7FE5AD2D9FCB92096FED67FE1DC38639128C7426D3D87C793F259207ED9A52A4D29EB9039CCF9A813FC0889C3D2A4C864F947875F5E9AC37C56C8D8EEE26E6D5BAF0FC1AC196AAE5E77A0943A29D51D52AE8C8244E879CEEB8F55F5FFACE181CFFC6930316004A0DE5191E3D45EA6234BF7A43D5821430788A63FD12F303298C1F78DA2CD1D81E71797189E1B6174A7C4E31F6F7CC1295F4CD18A6EE2F64B631174F1819DE36DA6C26FB2CC6082BDB23C18CFBEEE574D699180E1CC665D88F6A429ACEF> |-/i <1C60D8A8C9B83E2D80D6CC8A7F33D91B4C1D74D6E0DC9E7678949CFDDA8B52D57917E893C6A4C1AF43D47038BE0C32B314C076D97A174BE242116118CC> |-/n <1C60D8A8C9B7D47417AA887E7182FB49BBFBC34F1F9BCDC1F9D0A2FEE933CC79354F6B4BB2BD91044A2EC0760909C9D10588277E1C59460D425EEA94FAC233A57446164BFC687DA5> |-/o <1C60D8A8C9B7E7C1A068389E328C99E44B70B802EDB5C7416C071CA6DDE2CA4C674491B4DD8BE8018D1B145205FE69795811C2354E6FA2F88EA34AA7170E758DFFF40F0C8F5BF6A7B16B74377A0568BB1F7A736D407E7ED0AC> |-/r <1C60D8A8C9B7212EB9A4366A54DFAABADA9E53EAF2AE0EFE937BCE78270F29CB902C987A547F4599EB6A0AA3BACD2B4F12C5B875EA085983CD8DF32C5FEF432704> |-/t <1C60D8A8C9B73F59C88F693FAA3659C5C55A92DC0DC9DB9794546979AB160239B8E2830E023E416E5A5101F246F1F02A194B21DEA1CB02A0EA8D7B6E7734B357FC661D72F1DF3E096F378FC85E8C05BA> |-/.notdef <1C60D8A8C9B83E2D40> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/XOLOUR+FagoNoBoldLf-Roman /FagoNoBoldLf-Roman findfont ct_VMDictPut/XOLOUR+FagoNoBoldLf-Roman*1 [32{/.notdef}rp /space 34{/.notdef}rp /C 8{/.notdef}rp /L 6{/.notdef}rp /S 15{/.notdef}rp /c /.notdef /e /.notdef /g /.notdef /i 4{/.notdef}rp /n /o 2{/.notdef}rp /r /.notdef /t 139{/.notdef}rp]XOLOUR+FagoNoBoldLf-Roman nfXOLOUR+FagoNoBoldLf-Roman*1 [15 0 0 -15 0 0 ]msf170.475 12.75 mo(Science Centre Logo)[6.89941 6.4502 4.5 8.02441 9.22461 6.2998 8.02441 4.5 6.67285 8.02441 8.99707 5.7002 5.44336 8.02441 4.5 6.56738 8.2334 8.51758 0 ]xsh0 0 0 1 cmyk
%ADOBeginSubsetFont: MyriadPro-Regular Initial
%ADOt1write: (1.0.24)12 dict dup begin/FontType 1 def/FontName /MyriadPro-Regular def/FontInfo 7 dict dup begin/Notice (Copyright 1992, 1994, 1997, 2000, 2004 Adobe Systems Incorporated. All rights reserved. Protected by U.S. Patents D454,582. Myriad is either a registered trademark or a trademark of Adobe Systems Incorporated in the United States and/or other countries.) def/Weight (Regular) def/ItalicAngle 0 def/FSType 8 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 32 /space putdup 40 /parenleft putdup 41 /parenright putdup 70 /F putdup 97 /a putdup 98 /b putdup 99 /c putdup 100 /d putdup 101 /e putdup 103 /g putdup 104 /h putdup 105 /i putdup 107 /k putdup 108 /l putdup 110 /n putdup 111 /o putdup 114 /r putdup 116 /t putdup 117 /u putdup 119 /w putdup 121 /y putdef/FontBBox {-157 -250 1126 952} defendsystemdict begindup /Private12 dict dup begin/|- {def} def/| {put} def/BlueValues [-11 -0 674 686 484 495 650 661 710 721 241 248] def/OtherBlues [438 444 260 266 -209 -198 -153 -147 -118 -112] def/BlueScale 0.0604582 def/StdHW [67] def/StdVW [88] def/StemSnapV [88 92] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings22 dict dup begin/space <1C60D8A8C9B896187A> |-/parenleft <1C60D8A8C9B84E0A47D7FED6098F93D599A35099EC3AF2C571CF0E48D8A711D412E34AAB2732DF92ADCDC95C7C6D97E8C44CE2751654BC55BD12CD842E> |-/parenright <1C60D8A8C9B84E0A47D7FED609B3683507871E5C5015E3549BF91653A329EF8D5BF37DF948A5A8471707D087A577F9EE79FD91DC92667BCDE588EC87D3> |-/F <1C60D8A8C9B7544E530E823999841DA2F8EC66E9CFE2CD6B50437205F942FF37E122B69D17C7AA691A603207160811AFB791> |-/a <1C60D8A8C9B75946039FC5B56ED6A50878B478B1780B40C4125CE8039A261528F027CE6FDEC5783823498623E2545F156FE1817CCA8E4CEF932EAF146EA4E45F8E44AF7B3429BDE6EAD3417E01676A62E7E41175148C72742B2C6CC241FF06B9AE6A99EACBD61DC0A967A1A9EA490A3B86CCCCBA356FE0C46F09ED4CCD9D7FD84EFCB667453A166D73A23A48C3A48DCEEFA9A85E6DA8EDA33C7A566D88393EC5B1BCAE7CEACDFA7D9A043D> |-/b <1C60D8A8C9B7E2CE503F0CE2BC5634A8F8728B9E7DF78E9EB37EA1AAF5A6E14429B2FFC30BA7B2B7F7056F226E2401F24ABDAD5426247AC27BE4FA97CE94C91E5B97490DDD42E9AC1499720E52A641A6B5FD3039B53C33A6C3FB59A9FDC5809A26029808C985DEBED644B28F1427AE3990CDC08FE3F67389E1C6D971D03C58C4203806687562D626FE9888BA19E8E374C457B0F0CAD2096A35C2A25CA9F88F3E7B91EC8C23BC> |-/c <1C60D8A8C9B77BBBDD6F2DE36836EA750B0DCDA2C66B70D3B3E9B799935A114CCF88968CB157B7DEA63450CA5D1B4BBF8E61AF225B205D414E242FC06624097F1B5D47BF4F384727F53BA1763156DBDB0266> |-/d <1C60D8A8C9B7E7C1D82219353B31AE497773900CFE039E7C34F7CEBE101056958EFFC2C789CCBD8768CC683564B6074DAAAE648B50C88AD4C58AC712C8476BA68C74E592EF7E71792F9E5367AB3C80F9D183D28DD5E961AA14DCB5D9206768FB9E099DA642A8BAA73D52C56C9913DC619FDF3F90996DC8D242E6BF94BEBE752CB2F5D6196384CDD6E5AC10AFB49712810FFD82A2782B9B182DA37A23E6043872EFC1C407DD53136E> |-/e <1C60D8A8C9B7A66F85F3DBE5AE1E76F6A9740420B265CA4AC9DE99AD8AEDC4233110D7344BA8969F49ACBE3164296BAF8D8824063AB5A81F8F9142D2C0492C8D085FBBDD29052840FCC873C574581FB314AC3521D9DA4AE8E6D987C45E9E8106797186054DABC39E6B> |-/g <1C60D8A8C9B7ECD94DE1A189191AD5F29F43B727FC67DAAB0A1AC346364003E4FEF79FBAC399EF60BAB44182D20FA0C6402BF1E27F05398DCDDDA14D79F5733F11E560A813FF9D16C42617DFDA23021803BAB86086244EE74B29A5E1F99E79BC6C6C8880FE4C572C55E990D88B7521BD46854B97930948AAC94E7DFE2FF69F2221950186414A7427A5E80E1B04B219E3300404246D87351FD05C6F3EA0B95C636083B47E4D5C2DAA8BBB8D343439CEC8A6CCD7C3BA57C2332F2A02343DC56BF6AA691E1A081F9D254D> |-/h <1C60D8A8C9B790A816BA887E1DA4852044FABD5C80CA3A9E2E9C1F200BD200369E1A531F52CE66B5B19C492F0751A1C2858510B2E2690FB789B214E0E0C6537C1C71B0F5B79BE42FC591254AEEEA9BA5BA2F0A43A49AB11B4C> |-/i <1C60D8A8C9B88055FF27B3934D040E8DA53B043AB8CFF68E8D519FEAB9D5A4874DC9B90E63751BC12355D9D8276E2A66CDDB9CE6DD75534C5A54C45E2D6E21C6C79BBDA40B7772F2DEC85ADAD3476B> |-/k <1C60D8A8C9B746F4FCFA28E242EA979943B301877051CD8A73D26CF9327FF61FDBFBD8D5E47777F54E7AF76DDD4C35288F1FDE6342A197F7E1746F9F08E1E2F6A013F2F56A027205F5576546> |-/l <1C60D8A8C9B87EB6C12D27FEBAAD9108B57B5CEF2AA76DC2FD884A8623> |-/n <1C60D8A8C9B790A816BA887E1EEC2C6B98EC99098FC021FEBA148F884875E3B03D8F5BA9B51A6918EFA4195D8FABF82DC961545110C1672CA0A5B167A36646DBDC6B2B1EB2CCFFCB412605A41F5E921E35125025B68561FC08FF5F5A87F0318D13C761F9DF> |-/o <1C60D8A8C9B7967683396363C4C5A9E451FFBD75248EC3A8EC4B566E5BD4E7BBB72EB29C672F7BE91209F1171F84980F7DA08B43C90BC9E3BDC65B190F81C7A4B1ED6D074E407F8CF228B147D6A94BC016CC67> |-/r <1C60D8A8C9B825FA276057E430FDF01407E8A25201058EF45B5C185214AB1116383552C8A26ACD44FF0BE1E00A052AF17C7B552C44648BDA524B50952CB0AE525A4563499AD1C42D4D0C12A5AD458628362FB1B81E032637466F> |-/t <1C60D8A8C9B821B37F30E246C711EE3A9B1905ECA3B2281EC66105C6FB87D8A11F34421A86A4C8EB1634F07587A29F1959067E8F5C01D391C88E6402088837AF0D6E016A2B2057BCC898EDBE8C7509BAF139B3EFB89894D72C8915100CD3D16C57> |-/u <1C60D8A8C9B794D34CED683BC0F75FB25BE8ECA5D4F8D235649E81E6A62DD7B90AF6DE09B4373C71DC870DE9EFA0B94E7506F75EEE558DF81CD33372DAD0B84FB6B3C173C4DB8D5EA8C4F6D8C721F2FFE6909411B724C264F09293D8D8F89019F8CCCB6FE3AF5C57> |-/w <1C60D8A8C9B615D1D39C3ADF830FB08A1A35A87DCFD157E58FABDD21BA80846DED508D58D627D5468CDEA878B4EBB2BC39F9E17357A3B538845D213A53BE481E0D6B92FA11EAB84DAA099CD1E52DEE6734C0A900F3A37F8B6CBD74174B2BAF5100CBE402299FC69ADD471E1494375657D0074EB17A39D5C9C17257D613AB99E3> |-/y <1C60D8A8C9B744514052D02E803EBAB86C11F12291D9D5A1504FC788087D686381D5B543506197B0A8ADF9BBF970FE769142A069FB8380E5823DCC497A6C0095124D4923B5CA9C6A958F4E90ADD7B82826865D1CD8932D873AEC8C248461B62B69DDE1FA42A8CFA455E382875F1E62FEF36E2B6CCC071B48DCAFB9B91BFAAE28D80C> |-/.notdef <1C60D8A8C9B7A73DC56ED86B010528A4AE924D9B6A4AEB6B57364CBBC1FC7743E3F5B16223C8BD8911534CBC6ED69BD6AA5A2C449B7A6EF268B5A0D64C6C74FC81FE7341B7ED82094E8390BB44FFD88AB4DB74763338FA8306E917B17192> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/XOLOUS+MyriadPro-Regular /MyriadPro-Regular findfont ct_VMDictPut/XOLOUS+MyriadPro-Regular*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 28{/.notdef}rp /F 26{/.notdef}rp /a /b /c /d /e /.notdef /g /h /i /.notdef /k /l /.notdef /n /o 2{/.notdef}rp /r /.notdef /t /u /.notdef /w /.notdef /y 134{/.notdef}rp]XOLOUS+MyriadPro-Regular nfXOLOUS+MyriadPro-Regular*1 [12 0 0 -12 0 0 ]msf144.104 55.0806 mo(Full colour \(only on white background\))[5.42383 6.6123 2.83203 2.83203 2.54395 5.30371 6.58789 2.83203 6.58789 6.6123 3.92383 2.54395 3.4082 6.58789 6.66016 2.83203 5.65234 2.54395 6.58789 6.66016 2.54395 8.83203 6.66016 2.80762 3.90039 6.01172 2.54395 6.82813 5.78418 5.37598 5.62793 6.63574 3.80371 6.58789 6.6123 6.66016 6.76758 0 ]xsh%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)systemdict beginXOLOUS+MyriadPro-Regular dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/P <1C60D8A8C9B7876E235FC614E63EC6DDBF5153E7285DD594B4A59D9CFED19B0A38B3CB0F4F897304E6BAD66C826BEE7E4169B0E7C80E2CF9471E5F92DE30A72B04AC0EEA14B3B5B59AE75C5D253EAF073DA7CF16B6D745CDF6FBBE2E5B43C2B5E88E6AFB64C1CBC51F> |-/s <1C60D8A8C9B70FAD6F31E6985338EEEA1793890FC3B3DC4027B9CC9488D5A6B4D4C4E3E08CED307B2C798C1699A9DD310011666D86920512F1C3EB9CEE4F24B897BB1E950EE111237B9A2BC5BBB8732A07D9407EA3C86D8241785B5209F0AEBA9DE73147EEE82D829B87C7> |-/v <1C60D8A8C9B75A17982D11DC3FC677436DFDC6EA949B3A8A476902498B78CD729866CE567C88B5C4105F11006EA75E6774682E91A2E1F257423C8BD0B940F1B9F1BCB8B413DFC78AF75D4027> |-systemdict /gcheck known {setglobal} if end {end} ifendXOLOUS+MyriadPro-Regular /Encoding getdup 80 /P putdup 115 /s putdup 118 /v putpop%ADOEndSubsetFont
/XOLOUS+MyriadPro-Regular*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 28{/.notdef}rp /F 9{/.notdef}rp /P 16{/.notdef}rp /a /b /c /d /e /.notdef /g /h /i /.notdef /k /l /.notdef /n /o 2{/.notdef}rp /r /s /t /u /v /w /.notdef /y 134{/.notdef}rp]XOLOUS+MyriadPro-Regular nfXOLOUS+MyriadPro-Regular*1 [12 0 0 -12 0 0 ]msf77.7002 281.797 mo(Positive)[6.08398 6.58789 4.75195 2.80762 3.97168 2.80762 5.65137 0 ]xsh%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)systemdict beginXOLOUS+MyriadPro-Regular dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/N <1C60D8A8C9B647206730D8F66F8AC61925B6B1318E1FB010B62374917FD833E1AD6BC7D55692C9AE2F77E568D5881F8457D1A44289B0DB31B4E1DC1F3487A85D6C086A5A13FB7D7B66A3F61EF4969C1AE080F7AF6D145220EBF9A7BF4151121C2FA015E52FB7E43B5305D938D71B0B61429953BBCCA81012B7A0E4> |-systemdict /gcheck known {setglobal} if end {end} ifendXOLOUS+MyriadPro-Regular /Encoding getdup 78 /N putpop%ADOEndSubsetFont
/XOLOUS+MyriadPro-Regular*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 28{/.notdef}rp /F 7{/.notdef}rp /N /.notdef /P 16{/.notdef}rp /a /b /c /d /e /.notdef /g /h /i /.notdef /k /l /.notdef /n /o 2{/.notdef}rp /r /s /t /u /v /w /.notdef /y 134{/.notdef}rp]XOLOUS+MyriadPro-Regular nfXOLOUS+MyriadPro-Regular*1 [12 0 0 -12 0 0 ]msf335.034 281.797 mo(Negative)[7.89551 6.01172 6.70801 5.73633 3.97168 2.80762 5.65137 0 ]xsh88.9844 395.294 mo
95.793 411.077 106.943 429.875 106.943 429.875 cv
106.74 430.046 88.4375 411.337 80.3555 400.323 cv
77.4375 396.343 71.5723 397.966 73.5273 403.772 cv
78.9395 419.96 86.7754 434.893 98.6035 445.963 cv
103.23 450.312 105.396 449.927 108.85 448.471 cv
110.893 447.603 108.223 447.044 105.783 444.644 cv
99.0664 438.012 94.2754 432.07 90.8926 424.397 cv
96.0195 430.649 103.383 437.892 109.852 442.226 cv
111.988 443.647 116.623 446.557 119.273 445.321 cv
122.721 443.712 122.193 440.761 119.559 436.136 cv
107.947 415.675 102.635 404.032 97.2344 393.235 cv
94.5957 387.979 87.3359 391.489 88.9844 395.294 cv
cp
f
102.469 386.456 mo
100.455 387.647 98.5996 389.832 100.033 392.751 cv
101.465 395.665 102.41 398.794 106.529 396.933 cv
110.65 395.073 110.105 394.661 111.078 397.358 cv
115.984 409.409 120.381 422.724 124.131 434.272 cv
124.74 436.716 126.004 442.183 127.771 441.879 cv
129.426 441.602 132.264 439.63 132.887 438.401 cv
134.451 434.175 124.951 409.914 122.006 402.132 cv
120.604 397.429 116.869 392.163 119.287 390.13 cv
121.389 388.378 123.33 387.598 122.984 384.9 cv
121.172 376.783 117.383 379.67 115.418 380.585 cv
114.02 381.299 103.895 385.624 102.469 386.456 cv
cp
f
92.0273 444.924 mo
89.1582 444.362 87.9785 446.346 84.0332 444.578 cv
80.0645 442.819 79.0488 440.727 77.6426 437.71 cv
77.8652 434.354 84.9375 436.569 82.7207 431.691 cv
81.1309 428.826 79.8496 426.884 76.4961 427.295 cv
72.4727 428.126 71.2969 429.435 69.3027 427.484 cv
67.2891 425.538 64.8652 421.252 63.3066 417.905 cv
62.6543 416.165 61.9766 414.229 64.9746 413.42 cv
66.9551 412.895 69.6563 412.07 69.1211 409.561 cv
68.7969 408.009 67.8594 405.33 66.584 404.181 cv
65.0762 402.831 62.4648 404.141 61.1465 404.872 cv
60.3516 405.308 58.8555 406.129 58.0723 406.624 cv
52.0586 410.14 54.6934 417.776 57.6328 422.364 cv
63.5137 431.637 72.9688 443.25 78.291 447.692 cv
83.623 452.131 89.3281 453.249 95.1094 451.596 cv
96.8418 451.024 97.1309 450.39 96.9355 449.012 cv
96.791 447.911 93.8926 445.278 92.0273 444.924 cv
cp
f
68.0137 444.043 mo
60.0918 441.21 52.3574 435.223 47.4629 427.239 cv
46.3359 425.401 44.7637 421.407 47.502 421.591 cv
49.8867 421.749 50.6172 422.276 51.7793 420.963 cv
53.2656 419.331 53.5508 416.905 51.6465 415.208 cv
49.0039 412.829 44.4434 412.084 40.1133 414.118 cv
35.7988 416.137 37.2969 423.108 41.0703 429.126 cv
48.3125 440.707 56.2754 445.109 62.6992 448.186 cv
65.9375 449.72 73.2012 452.674 73.9473 450.602 cv
74.9102 447.942 73.7363 445.707 68.0137 444.043 cv
cp
f
153.309 361.402 mo
150.785 363.176 144.881 366.411 143.883 368.634 cv
142.896 370.858 152.406 396.087 152.98 411.306 cv
153.406 413.71 154.902 413.097 155.766 412.533 cv
157.883 411.128 160.205 403.573 161.033 398.511 cv
161.217 397.36 161.52 395.808 161.604 395.032 cv
161.871 392.718 161.02 391.308 160.266 391.575 cv
159.016 392.024 157.047 397.073 156.855 396.232 cv
156.43 394.296 155.441 390.132 155.281 388.517 cv
154.998 385.827 159.295 384.782 159.826 382.115 cv
160.65 377.892 159.48 375.182 157.418 376.479 cv
155.736 377.521 153.549 379.93 153.031 379.804 cv
152.311 379.071 151.221 374.036 151.25 373.116 cv
150.707 369.269 155.514 369.844 156.311 366.862 cv
156.744 365.464 155.705 359.7 153.309 361.402 cv
cp
f
140.242 392.796 mo
140.689 395.544 139.711 397.628 139.711 397.628 cv
139.711 397.628 138.557 400.924 137.867 399.385 cv
136.92 395.11 135.809 391.38 133.498 384.753 cv
132.91 381.836 134.191 381.427 135.689 381.425 cv
138.055 381.44 139.67 389.304 140.242 392.796 cv
cp
133.801 371.71 mo
130.949 372.778 128.115 374.04 126.768 374.962 cv
125.408 375.905 122.777 377.618 125.105 383.349 cv
131.395 401.694 138.137 428.34 138.625 433.625 cv
138.824 435.779 141.617 432.892 142.885 431.617 cv
144.139 430.346 144.953 429.569 144.668 427.923 cv
143.947 423.802 142.705 418.95 141.014 413.905 cv
141.014 413.905 140.168 410.998 141.543 412.364 cv
144.635 416.716 146.518 421.47 147.771 425.787 cv
147.771 425.787 148.123 426.543 148.855 425.477 cv
149.912 424.515 151.986 420.071 151.986 420.071 cv
151.986 420.071 152.887 417.499 152.133 416.305 cv
149.922 411.942 146.938 407.694 143.057 403.956 cv
143.057 403.956 145.695 399.948 145.803 393.098 cv
145.879 388.911 144.383 383.809 143.184 379.349 cv
142.287 376.022 138.688 369.464 133.801 371.71 cv
cp
f
83.2754 388.466 mo
87.0645 389.28 90.6973 385.562 91.6992 381.82 cv
92.3555 376.321 89.293 374.577 84.8613 376.434 cv
80.6289 378.2 74.1758 365.194 73.2246 362.315 cv
72.0039 358.718 71.3496 356.785 73.4277 355.107 cv
76.8945 352.614 78.5156 351.472 76.4043 347.759 cv
75.1699 346.075 72.7051 346.996 71.0977 347.703 cv
67.4121 349.324 67.4512 343.457 67.0586 340.24 cv
66.6602 336.992 67.6465 334.856 68.6289 333.823 cv
69.5039 332.87 68.8574 327.282 66.75 328.266 cv
64.2363 329.154 62.6191 331.234 61.7344 333.901 cv
60.2793 338.675 60.7949 346.875 62.3359 352.748 cv
65.1621 362.493 66.7598 368.167 73.0176 378.815 cv
74.498 381.109 75.8984 383.224 77.9531 385.164 cv
79.6406 386.763 81.0625 388.054 83.2754 388.466 cv
cp
f
33.7148 360.408 mo
32.0352 360.5 30.3379 362.372 29.3398 363.524 cv
28.209 364.853 26.4004 368.356 25.9219 370.55 cv
24.666 376.28 24.6211 380.896 31.2695 390.724 cv
32.6699 392.79 36.2344 396.949 36.9219 397.896 cv
39.7168 401.745 38.4629 404.401 35.7773 403.298 cv
34.4336 402.755 33.4297 400.796 32.9414 400.211 cv
31.6621 398.742 28.6016 400.169 30.2773 403.851 cv
31.7715 408.327 36.1523 410.813 40.3262 410.432 cv
44.4805 410.058 50.4258 404.58 43.8848 395.05 cv
41.4336 391.491 38.0449 388.501 34.8906 384.07 cv
31.6875 379.563 30.207 375.781 31.7441 370.936 cv
32.5527 368.396 33.5547 367.817 34.8223 367.413 cv
35.9063 367.042 36.1641 365.265 36.1797 364.633 cv
36.1973 362.228 35.1563 360.333 33.7148 360.408 cv
cp
f
45.0195 344.658 mo
34.7773 350.045 36.6914 371.778 42.8867 387.4 cv
45.6582 394.423 52.793 405.7 60.332 400.747 cv
64.1055 398.265 64.3887 394.554 62.5879 391.474 cv
60.291 387.54 57.3105 389.081 56.1348 390.497 cv
55.4121 391.378 53.6367 391.266 51.9219 389.042 cv
45.6387 380.851 44.584 369.169 44.2813 362.149 cv
43.9844 355.466 46.2344 355.333 46.752 352.591 cv
49.2832 346.63 47.0313 343.616 45.0195 344.658 cv
cp
f
86.209 344.849 mo
86.3496 344.722 101.455 360.666 111.266 370.943 cv
117.566 377.567 122.35 371.804 120.324 367.458 cv
113.705 353.265 98.4512 329.003 89.5684 323.382 cv
87.707 322.192 83.6328 321.978 82.3809 323.021 cv
81.4707 323.778 81.9824 324.832 83.1758 325.849 cv
91.707 335.069 99.918 347.663 99.918 347.663 cv
99.877 347.684 82.7949 331.324 73.8789 326.444 cv
71.9199 325.375 69.459 327.294 70.3027 328.946 cv
82.127 351.76 87.7227 364.421 91.5742 373.972 cv
93.2246 378.043 95.2734 382.497 98.4434 382.186 cv
100.84 381.96 103.525 378.941 101.055 373.648 cv
91.0352 352.155 86.209 344.849 86.209 344.849 cv
cp
f
134.016 354.472 mo
130.594 353.337 130.383 360.027 125.926 353.832 cv
122.404 348.957 120 345.468 110.154 330.869 cv
106.391 325.3 112.096 330.179 113.113 329.911 cv
115.008 329.42 112.574 322.771 108.854 321.929 cv
95.041 318.812 96.4668 322.676 101.512 329.577 cv
116.436 349.974 121.455 364.962 127.791 367.708 cv
131.174 369.192 135.221 366.054 136.281 363.749 cv
137.867 360.383 136.814 355.401 134.016 354.472 cv
cp
f
150.428 352.501 mo
148.715 350.479 146.475 353.671 145.678 353.759 cv
144.586 353.884 144.459 354.736 141.773 350.552 cv
138.484 345.403 137.23 345.132 137.135 344.259 cv
136.879 341.964 143.303 342.716 140.541 339.353 cv
136.826 334.828 136.117 340.728 129.822 335.277 cv
128.355 333.998 126.039 331.207 126.174 330.345 cv
126.303 329.478 130.111 331.388 130.869 330.596 cv
131.219 330.21 131.193 328.944 130.008 328.12 cv
127.527 326.396 123.609 324.825 120.084 323.526 cv
116.053 322.048 113.717 324.437 116.252 327.837 cv
122.992 336.813 132.008 343.039 141.26 361.848 cv
143.225 365.845 149.285 359.979 150.275 359.221 cv
152.531 357.481 151.699 353.994 150.428 352.501 cv
cp
f
58.0977 339.436 mo
58.1992 335.381 56.3438 334.849 55.2813 335.136 cv
53.5957 335.595 52.0664 338.222 51.5762 339.45 cv
46.7285 351.668 56 372.622 62.5352 387.221 cv
64.0938 390.317 66.4219 395.554 70.2227 395.345 cv
74.2715 395.126 75.6484 391.94 73.7285 388.636 cv
69.8984 382.368 56.1426 357.16 58.0977 339.436 cv
cp
f
54.6738 479.2 mo
53.209 479.2 51.8145 478.706 51.8145 478.706 cv
51.8145 476.104 li
51.8145 476.104 53.5996 476.598 54.2461 476.598 cv
55.041 476.598 55.5156 476.363 55.5156 475.632 cv
55.5156 475.008 55.0586 474.791 54.502 474.513 cv
53.8555 474.19 li
53.041 473.782 51.6836 473.029 51.6836 470.985 cv
51.6836 468.188 53.7715 467.371 55.7285 467.371 cv
57.2344 467.371 58.3945 467.888 58.3945 467.888 cv
58.3945 470.382 li
58.3945 470.382 57.125 469.933 56.0078 469.933 cv
55.3848 469.933 54.9766 470.212 54.9766 470.77 cv
54.9766 471.437 55.4922 471.588 56.0918 471.911 cv
56.7383 472.256 li
57.6445 472.727 58.8262 473.479 58.8262 475.459 cv
58.8262 478.665 56.543 479.2 54.6738 479.2 cv
cp
f
60.457 478.986 mo
60.457 467.587 li
63.8789 467.587 li
63.8789 478.986 li
60.457 478.986 li
cp
62.1582 466.08 mo
61.1465 466.08 60.375 465.242 60.375 464.253 cv
60.375 463.265 61.1465 462.447 62.1582 462.447 cv
63.1699 462.447 63.9688 463.265 63.9688 464.253 cv
63.9688 465.242 63.1699 466.08 62.1582 466.08 cv
cp
f
71.8594 478.986 mo
71.8594 471.2 li
71.8594 470.512 71.7305 470.298 71.1484 470.298 cv
70.418 470.298 69.4688 470.813 69.4688 470.813 cv
69.4688 478.986 li
66.0469 478.986 li
66.0469 467.587 li
68.7598 467.587 li
69.4043 468.489 li
69.4043 468.489 70.6543 467.371 72.4355 467.371 cv
74.2871 467.371 75.2773 468.339 75.2773 470.449 cv
75.2773 478.986 li
71.8594 478.986 li
cp
f
81.4063 469.33 mo
80.7637 469.33 80.3965 469.652 80.3965 471.242 cv
80.3965 473.092 80.6563 473.416 81.4063 473.416 cv
82.2246 473.416 82.418 473.071 82.418 471.242 cv
82.418 469.607 82.1387 469.33 81.4063 469.33 cv
cp
82.1172 478.986 mo
80.377 478.813 li
80.1426 479.223 79.9453 479.718 79.9453 480.17 cv
79.9453 481.028 80.5039 481.332 81.2578 481.332 cv
82.5488 481.332 83.3438 481.095 83.3438 480.042 cv
83.3438 479.2 82.8516 479.051 82.1172 478.986 cv
cp
85.2598 469.737 mo
85.582 470.232 85.7969 470.835 85.7969 471.372 cv
85.7969 474.599 83.9023 475.373 81.4063 475.373 cv
80.7402 475.373 80.0957 475.245 80.0957 475.245 cv
80.0957 475.245 79.8574 475.521 79.8574 475.761 cv
79.8574 476.169 80.1191 476.318 80.6992 476.363 cv
83.1953 476.578 li
85.3906 476.771 86.7012 477.309 86.7012 479.718 cv
86.7012 482.515 84.8281 483.333 81.1504 483.333 cv
78.332 483.333 76.6328 482.817 76.6328 480.665 cv
76.6328 479.611 77.3633 478.751 78.0938 478.277 cv
77.4492 477.909 77.0645 477.331 77.0645 476.449 cv
77.0645 475.501 77.7734 474.836 78.416 474.492 cv
77.6016 473.846 77.0195 472.857 77.0195 471.242 cv
77.0195 468.145 79.1504 467.371 81.4063 467.371 cv
82.1602 467.371 82.6563 467.587 83.1953 467.587 cv
86.916 467.587 li
86.916 469.78 li
85.2598 469.737 li
cp
f
92.4199 473.479 mo
91.7324 473.501 li
90.8496 473.523 90.5508 473.911 90.5508 475.373 cv
90.5508 476.598 90.8945 476.922 91.4297 476.922 cv
91.9473 476.922 92.4199 476.578 92.4199 476.578 cv
92.4199 473.479 li
cp
93.002 478.986 mo
92.4863 478.126 li
92.4863 478.126 91.7324 479.2 90.334 479.2 cv
89.0879 479.2 87.1934 478.837 87.1934 475.521 cv
87.1934 472.083 89.8613 471.672 91.3008 471.672 cv
92.4199 471.672 li
92.4199 470.898 li
92.4199 470.276 92.1621 469.975 91.2168 469.975 cv
90.1211 469.975 88.2031 470.555 88.2031 470.555 cv
88.2031 468.017 li
88.2031 468.017 90.0352 467.371 91.9707 467.371 cv
94.1875 467.371 95.8203 468.017 95.8203 470.749 cv
95.8203 478.986 li
93.002 478.986 li
cp
f
102.748 469.953 mo
102.078 469.953 101.455 470.47 101.455 470.47 cv
101.455 476.598 li
101.455 476.598 102.037 476.75 102.424 476.75 cv
103.176 476.75 103.887 476.233 103.887 473.181 cv
103.887 470.276 103.521 469.953 102.748 469.953 cv
cp
102.939 479.2 mo
102.232 479.2 101.455 478.943 101.455 478.943 cv
101.455 483.075 li
98.0371 483.075 li
98.0371 467.587 li
100.791 467.587 li
101.283 468.361 li
101.283 468.361 102.209 467.371 103.715 467.371 cv
105.352 467.371 107.305 467.845 107.305 473.181 cv
107.305 478.943 104.488 479.2 102.939 479.2 cv
cp
f
113.414 469.737 mo
112.426 469.737 111.953 470.34 111.953 473.285 cv
111.953 476.189 112.578 476.814 113.414 476.814 cv
114.232 476.814 114.881 476.299 114.881 473.285 cv
114.881 470.276 114.471 469.737 113.414 469.737 cv
cp
113.414 479.2 mo
110.857 479.2 108.555 478.148 108.555 473.285 cv
108.555 468.447 110.857 467.371 113.414 467.371 cv
115.91 467.371 118.279 468.405 118.279 473.285 cv
118.279 478.19 115.934 479.2 113.414 479.2 cv
cp
f
124.904 470.34 mo
123.979 470.34 123.439 470.855 123.439 470.855 cv
123.439 478.986 li
120.021 478.986 li
120.021 467.587 li
122.752 467.587 li
123.227 468.75 li
123.227 468.75 123.678 467.371 125.141 467.371 cv
125.895 467.371 126.299 467.587 126.299 467.587 cv
126.299 470.577 li
126.299 470.577 125.656 470.34 124.904 470.34 cv
cp
f
131.293 469.523 mo
130.26 469.523 130.064 470.404 130.041 472.448 cv
132.238 472.448 li
132.238 470.749 132.217 469.523 131.293 469.523 cv
cp
135.463 474.426 mo
130.023 474.426 li
130.023 476.299 130.795 476.557 131.811 476.557 cv
132.902 476.557 134.883 476.104 134.883 476.104 cv
134.883 478.686 li
134.883 478.686 133.398 479.2 131.811 479.2 cv
129.396 479.2 126.625 478.771 126.625 473.309 cv
126.625 468.513 128.881 467.371 131.293 467.371 cv
134.172 467.371 135.594 469.221 135.486 473.523 cv
135.463 474.426 li
cp
f
354.368 395.294 mo
361.177 411.077 372.327 429.875 372.327 429.875 cv
372.124 430.046 353.82 411.337 345.739 400.323 cv
342.82 396.343 336.956 397.966 338.911 403.772 cv
344.323 419.96 352.159 434.893 363.987 445.963 cv
368.614 450.312 370.78 449.927 374.233 448.471 cv
376.276 447.603 373.606 447.044 371.167 444.644 cv
364.45 438.012 359.659 432.07 356.276 424.397 cv
361.403 430.649 368.767 437.892 375.235 442.226 cv
377.372 443.647 382.007 446.557 384.656 445.321 cv
388.104 443.712 387.577 440.761 384.942 436.136 cv
373.331 415.675 368.019 404.032 362.618 393.235 cv
359.979 387.979 352.72 391.489 354.368 395.294 cv
cp
0 0 0 0 cmyk
f
367.853 386.456 mo
365.839 387.647 363.983 389.832 365.417 392.751 cv
366.849 395.665 367.794 398.794 371.913 396.933 cv
376.034 395.073 375.488 394.661 376.462 397.358 cv
381.368 409.409 385.765 422.724 389.515 434.272 cv
390.124 436.716 391.387 442.183 393.155 441.879 cv
394.81 441.602 397.647 439.63 398.271 438.401 cv
399.835 434.175 390.335 409.914 387.39 402.132 cv
385.987 397.429 382.253 392.163 384.671 390.13 cv
386.771 388.378 388.714 387.598 388.368 384.9 cv
386.555 376.783 382.767 379.67 380.802 380.585 cv
379.403 381.299 369.278 385.624 367.853 386.456 cv
cp
f
357.411 444.924 mo
354.542 444.362 353.362 446.346 349.417 444.578 cv
345.448 442.819 344.433 440.727 343.026 437.71 cv
343.249 434.354 350.32 436.569 348.104 431.691 cv
346.515 428.826 345.233 426.884 341.88 427.295 cv
337.855 428.126 336.681 429.435 334.687 427.484 cv
332.673 425.538 330.249 421.252 328.69 417.905 cv
328.037 416.165 327.36 414.229 330.358 413.42 cv
332.339 412.895 335.04 412.07 334.505 409.561 cv
334.181 408.009 333.243 405.33 331.968 404.181 cv
330.46 402.831 327.849 404.141 326.53 404.872 cv
325.735 405.308 324.239 406.129 323.456 406.624 cv
317.442 410.14 320.077 417.776 323.017 422.364 cv
328.897 431.637 338.353 443.25 343.674 447.692 cv
349.007 452.131 354.712 453.249 360.493 451.596 cv
362.226 451.024 362.515 450.39 362.319 449.012 cv
362.174 447.911 359.276 445.278 357.411 444.924 cv
cp
f
333.397 444.043 mo
325.476 441.21 317.74 435.223 312.847 427.239 cv
311.72 425.401 310.147 421.407 312.886 421.591 cv
315.271 421.749 316.001 422.276 317.163 420.963 cv
318.649 419.331 318.935 416.905 317.03 415.208 cv
314.388 412.829 309.827 412.084 305.497 414.118 cv
301.183 416.137 302.681 423.108 306.454 429.126 cv
313.696 440.707 321.659 445.109 328.083 448.186 cv
331.32 449.72 338.585 452.674 339.331 450.602 cv
340.294 447.942 339.12 445.707 333.397 444.043 cv
cp
f
418.692 361.402 mo
416.169 363.176 410.265 366.411 409.267 368.634 cv
408.28 370.858 417.789 396.087 418.364 411.306 cv
418.789 413.71 420.286 413.097 421.149 412.533 cv
423.267 411.128 425.589 403.573 426.417 398.511 cv
426.601 397.36 426.903 395.808 426.987 395.032 cv
427.255 392.718 426.403 391.308 425.649 391.575 cv
424.399 392.024 422.431 397.073 422.239 396.232 cv
421.813 394.296 420.825 390.132 420.665 388.517 cv
420.382 385.827 424.679 384.782 425.21 382.115 cv
426.034 377.892 424.864 375.182 422.802 376.479 cv
421.12 377.521 418.933 379.93 418.415 379.804 cv
417.694 379.071 416.604 374.036 416.634 373.116 cv
416.091 369.269 420.897 369.844 421.694 366.862 cv
422.128 365.464 421.089 359.7 418.692 361.402 cv
cp
f
405.626 392.796 mo
406.072 395.544 405.095 397.628 405.095 397.628 cv
405.095 397.628 403.939 400.924 403.251 399.385 cv
402.304 395.11 401.192 391.38 398.882 384.753 cv
398.294 381.836 399.575 381.427 401.072 381.425 cv
403.438 381.44 405.054 389.304 405.626 392.796 cv
cp
399.185 371.71 mo
396.333 372.778 393.499 374.04 392.151 374.962 cv
390.792 375.905 388.161 377.618 390.488 383.349 cv
396.778 401.694 403.52 428.34 404.009 433.625 cv
404.207 435.779 407.001 432.892 408.269 431.617 cv
409.522 430.346 410.337 429.569 410.052 427.923 cv
409.331 423.802 408.089 418.95 406.397 413.905 cv
406.397 413.905 405.552 410.998 406.927 412.364 cv
410.019 416.716 411.901 421.47 413.155 425.787 cv
413.155 425.787 413.507 426.543 414.239 425.477 cv
415.296 424.515 417.37 420.071 417.37 420.071 cv
417.37 420.071 418.271 417.499 417.517 416.305 cv
415.306 411.942 412.32 407.694 408.439 403.956 cv
408.439 403.956 411.079 399.948 411.187 393.098 cv
411.263 388.911 409.767 383.809 408.567 379.349 cv
407.671 376.022 404.071 369.464 399.185 371.71 cv
cp
f
348.659 388.466 mo
352.448 389.28 356.081 385.562 357.083 381.82 cv
357.739 376.321 354.677 374.577 350.245 376.434 cv
346.013 378.2 339.56 365.194 338.608 362.315 cv
337.387 358.718 336.733 356.785 338.812 355.107 cv
342.278 352.614 343.899 351.472 341.788 347.759 cv
340.554 346.075 338.089 346.996 336.481 347.703 cv
332.796 349.324 332.835 343.457 332.442 340.24 cv
332.044 336.992 333.03 334.856 334.013 333.823 cv
334.887 332.87 334.24 327.282 332.134 328.266 cv
329.62 329.154 328.003 331.234 327.118 333.901 cv
325.663 338.675 326.179 346.875 327.72 352.748 cv
330.546 362.493 332.144 368.167 338.401 378.815 cv
339.882 381.109 341.282 383.224 343.337 385.164 cv
345.023 386.763 346.446 388.054 348.659 388.466 cv
cp
f
299.099 360.408 mo
297.419 360.5 295.722 362.372 294.724 363.524 cv
293.593 364.853 291.784 368.356 291.306 370.55 cv
290.05 376.28 290.005 380.896 296.653 390.724 cv
298.054 392.79 301.618 396.949 302.306 397.896 cv
305.101 401.745 303.847 404.401 301.161 403.298 cv
299.817 402.755 298.813 400.796 298.325 400.211 cv
297.046 398.742 293.985 400.169 295.661 403.851 cv
297.155 408.327 301.536 410.813 305.71 410.432 cv
309.864 410.058 315.81 404.58 309.269 395.05 cv
306.817 391.491 303.429 388.501 300.274 384.07 cv
297.071 379.563 295.591 375.781 297.128 370.936 cv
297.937 368.396 298.938 367.817 300.206 367.413 cv
301.29 367.042 301.548 365.265 301.563 364.633 cv
301.581 362.228 300.54 360.333 299.099 360.408 cv
cp
f
310.403 344.658 mo
300.161 350.045 302.075 371.778 308.271 387.4 cv
311.042 394.423 318.177 405.7 325.716 400.747 cv
329.488 398.265 329.771 394.554 327.971 391.474 cv
325.674 387.54 322.694 389.081 321.519 390.497 cv
320.796 391.378 319.02 391.266 317.306 389.042 cv
311.022 380.851 309.968 369.169 309.665 362.149 cv
309.368 355.466 311.618 355.333 312.136 352.591 cv
314.667 346.63 312.415 343.616 310.403 344.658 cv
cp
f
351.593 344.849 mo
351.733 344.722 366.839 360.666 376.649 370.943 cv
382.95 377.567 387.733 371.804 385.707 367.458 cv
379.089 353.265 363.835 329.003 354.952 323.382 cv
353.091 322.192 349.017 321.978 347.765 323.021 cv
346.854 323.778 347.366 324.832 348.56 325.849 cv
357.091 335.069 365.302 347.663 365.302 347.663 cv
365.261 347.684 348.179 331.324 339.263 326.444 cv
337.304 325.375 334.843 327.294 335.687 328.946 cv
347.511 351.76 353.106 364.421 356.957 373.972 cv
358.608 378.043 360.656 382.497 363.827 382.186 cv
366.223 381.96 368.909 378.941 366.438 373.648 cv
356.419 352.155 351.593 344.849 351.593 344.849 cv
cp
f
399.399 354.472 mo
395.978 353.337 395.767 360.027 391.31 353.832 cv
387.788 348.957 385.384 345.468 375.537 330.869 cv
371.774 325.3 377.479 330.179 378.497 329.911 cv
380.391 329.42 377.957 322.771 374.236 321.929 cv
360.424 318.812 361.851 322.676 366.896 329.577 cv
381.819 349.974 386.839 364.962 393.174 367.708 cv
396.558 369.192 400.604 366.054 401.665 363.749 cv
403.251 360.383 402.198 355.401 399.399 354.472 cv
cp
f
415.812 352.501 mo
414.099 350.479 411.857 353.671 411.062 353.759 cv
409.97 353.884 409.843 354.736 407.156 350.552 cv
403.868 345.403 402.614 345.132 402.519 344.259 cv
402.263 341.964 408.687 342.716 405.924 339.353 cv
402.21 334.828 401.501 340.728 395.205 335.277 cv
393.739 333.998 391.423 331.207 391.558 330.345 cv
391.687 329.478 395.495 331.388 396.253 330.596 cv
396.603 330.21 396.577 328.944 395.391 328.12 cv
392.911 326.396 388.993 324.825 385.468 323.526 cv
381.437 322.048 379.101 324.437 381.636 327.837 cv
388.376 336.813 397.391 343.039 406.644 361.848 cv
408.607 365.845 414.669 359.979 415.659 359.221 cv
417.915 357.481 417.083 353.994 415.812 352.501 cv
cp
f
323.481 339.436 mo
323.583 335.381 321.728 334.849 320.665 335.136 cv
318.979 335.595 317.45 338.222 316.96 339.45 cv
312.112 351.668 321.384 372.622 327.919 387.221 cv
329.478 390.317 331.806 395.554 335.606 395.345 cv
339.655 395.126 341.032 391.94 339.112 388.636 cv
335.282 382.368 321.526 357.16 323.481 339.436 cv
cp
f
320.058 479.2 mo
318.593 479.2 317.198 478.706 317.198 478.706 cv
317.198 476.104 li
317.198 476.104 318.983 476.598 319.63 476.598 cv
320.424 476.598 320.899 476.363 320.899 475.632 cv
320.899 475.008 320.442 474.791 319.886 474.513 cv
319.239 474.19 li
318.424 473.782 317.067 473.029 317.067 470.985 cv
317.067 468.188 319.155 467.371 321.112 467.371 cv
322.618 467.371 323.778 467.888 323.778 467.888 cv
323.778 470.382 li
323.778 470.382 322.509 469.933 321.391 469.933 cv
320.769 469.933 320.36 470.212 320.36 470.77 cv
320.36 471.437 320.876 471.588 321.476 471.911 cv
322.121 472.256 li
323.028 472.727 324.21 473.479 324.21 475.459 cv
324.21 478.665 321.927 479.2 320.058 479.2 cv
cp
f
325.841 478.986 mo
325.841 467.587 li
329.263 467.587 li
329.263 478.986 li
325.841 478.986 li
cp
327.542 466.08 mo
326.53 466.08 325.759 465.242 325.759 464.253 cv
325.759 463.265 326.53 462.447 327.542 462.447 cv
328.554 462.447 329.353 463.265 329.353 464.253 cv
329.353 465.242 328.554 466.08 327.542 466.08 cv
cp
f
337.243 478.986 mo
337.243 471.2 li
337.243 470.512 337.114 470.298 336.532 470.298 cv
335.802 470.298 334.853 470.813 334.853 470.813 cv
334.853 478.986 li
331.431 478.986 li
331.431 467.587 li
334.144 467.587 li
334.788 468.489 li
334.788 468.489 336.037 467.371 337.819 467.371 cv
339.671 467.371 340.661 468.339 340.661 470.449 cv
340.661 478.986 li
337.243 478.986 li
cp
f
346.789 469.33 mo
346.147 469.33 345.78 469.652 345.78 471.242 cv
345.78 473.092 346.04 473.416 346.789 473.416 cv
347.608 473.416 347.802 473.071 347.802 471.242 cv
347.802 469.607 347.522 469.33 346.789 469.33 cv
cp
347.501 478.986 mo
345.761 478.813 li
345.526 479.223 345.329 479.718 345.329 480.17 cv
345.329 481.028 345.887 481.332 346.641 481.332 cv
347.933 481.332 348.728 481.095 348.728 480.042 cv
348.728 479.2 348.235 479.051 347.501 478.986 cv
cp
350.644 469.737 mo
350.966 470.232 351.181 470.835 351.181 471.372 cv
351.181 474.599 349.286 475.373 346.789 475.373 cv
346.124 475.373 345.479 475.245 345.479 475.245 cv
345.479 475.245 345.24 475.521 345.24 475.761 cv
345.24 476.169 345.503 476.318 346.083 476.363 cv
348.579 476.578 li
350.774 476.771 352.085 477.309 352.085 479.718 cv
352.085 482.515 350.212 483.333 346.534 483.333 cv
343.716 483.333 342.017 482.817 342.017 480.665 cv
342.017 479.611 342.747 478.751 343.478 478.277 cv
342.833 477.909 342.448 477.331 342.448 476.449 cv
342.448 475.501 343.156 474.836 343.8 474.492 cv
342.985 473.846 342.403 472.857 342.403 471.242 cv
342.403 468.145 344.534 467.371 346.789 467.371 cv
347.544 467.371 348.04 467.587 348.579 467.587 cv
352.3 467.587 li
352.3 469.78 li
350.644 469.737 li
cp
f
357.804 473.479 mo
357.116 473.501 li
356.233 473.523 355.935 473.911 355.935 475.373 cv
355.935 476.598 356.278 476.922 356.813 476.922 cv
357.331 476.922 357.804 476.578 357.804 476.578 cv
357.804 473.479 li
cp
358.386 478.986 mo
357.87 478.126 li
357.87 478.126 357.116 479.2 355.718 479.2 cv
354.471 479.2 352.577 478.837 352.577 475.521 cv
352.577 472.083 355.245 471.672 356.685 471.672 cv
357.804 471.672 li
357.804 470.898 li
357.804 470.276 357.546 469.975 356.601 469.975 cv
355.505 469.975 353.587 470.555 353.587 470.555 cv
353.587 468.017 li
353.587 468.017 355.419 467.371 357.354 467.371 cv
359.571 467.371 361.204 468.017 361.204 470.749 cv
361.204 478.986 li
358.386 478.986 li
cp
f
368.132 469.953 mo
367.462 469.953 366.839 470.47 366.839 470.47 cv
366.839 476.598 li
366.839 476.598 367.421 476.75 367.807 476.75 cv
368.56 476.75 369.271 476.233 369.271 473.181 cv
369.271 470.276 368.904 469.953 368.132 469.953 cv
cp
368.323 479.2 mo
367.616 479.2 366.839 478.943 366.839 478.943 cv
366.839 483.075 li
363.421 483.075 li
363.421 467.587 li
366.174 467.587 li
366.667 468.361 li
366.667 468.361 367.593 467.371 369.099 467.371 cv
370.735 467.371 372.688 467.845 372.688 473.181 cv
372.688 478.943 369.872 479.2 368.323 479.2 cv
cp
f
378.798 469.737 mo
377.81 469.737 377.337 470.34 377.337 473.285 cv
377.337 476.189 377.962 476.814 378.798 476.814 cv
379.616 476.814 380.265 476.299 380.265 473.285 cv
380.265 470.276 379.854 469.737 378.798 469.737 cv
cp
378.798 479.2 mo
376.24 479.2 373.938 478.148 373.938 473.285 cv
373.938 468.447 376.24 467.371 378.798 467.371 cv
381.294 467.371 383.663 468.405 383.663 473.285 cv
383.663 478.19 381.317 479.2 378.798 479.2 cv
cp
f
390.288 470.34 mo
389.362 470.34 388.823 470.855 388.823 470.855 cv
388.823 478.986 li
385.404 478.986 li
385.404 467.587 li
388.136 467.587 li
388.61 468.75 li
388.61 468.75 389.062 467.371 390.523 467.371 cv
391.278 467.371 391.683 467.587 391.683 467.587 cv
391.683 470.577 li
391.683 470.577 391.04 470.34 390.288 470.34 cv
cp
f
396.677 469.523 mo
395.644 469.523 395.448 470.404 395.424 472.448 cv
397.621 472.448 li
397.621 470.749 397.601 469.523 396.677 469.523 cv
cp
400.847 474.426 mo
395.407 474.426 li
395.407 476.299 396.179 476.557 397.194 476.557 cv
398.286 476.557 400.267 476.104 400.267 476.104 cv
400.267 478.686 li
400.267 478.686 398.782 479.2 397.194 479.2 cv
394.78 479.2 392.009 478.771 392.009 473.309 cv
392.009 468.513 394.265 467.371 396.677 467.371 cv
399.555 467.371 400.978 469.221 400.87 473.523 cv
400.847 474.426 li
cp
f
454.836 767.999 mo
263.909 767.999 li
263.909 571.021 li
454.836 571.021 li
454.836 767.999 li
cp
0 .86 1 0 cmyk
f
190.927 767.999 mo
0 767.999 li
0 571.021 li
190.927 571.021 li
190.927 767.999 li
cp
0 0 .25 0 cmyk
f
0 0 0 1 cmyk
%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)systemdict beginXOLOUS+MyriadPro-Regular dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/W <1C60D8A8C9B683825E2D044740A889FBE934ECCE78E1156C56B6149D738CA6C7B4AECC7FA154428E6DD464F11C7D97D1FA9A6F6B9A75D5C94F0DB87ED3BDE4384A0C5BEF384B64AB6AB82F0CAD9F523DB7B169A9EFE68886BAAEBDCCF81A77828FB78CC41F51C2F02BE854F0FC98D5C093F2F1B7BFBBE0B76D7E8A41F57E61D5D8AA27543AC483B2961CB710> |-/p <1C60D8A8C9B7E2CE2B5D9AEC775B38F2FDCA5DD8FB0C9C7D76709EB2E3CEF7455DFF330D234D9132A6F52698D79064F174F1D99AEB0CF9139A6469F8D4BE826FAC77DD18B951C7429F3A77A1434C1A624632AE9545E6FD8A1CFF86A978EB2F9D9C8D213E3AEF1293A1DF353A70DA5E24E2AC4CE8D2656D24B8166AAA778D66777269CA00CCD283376A690AE85A4058A8C9155FC3FA3A08F87D3A4F002FFBBE8C69D79181> |-systemdict /gcheck known {setglobal} if end {end} ifendXOLOUS+MyriadPro-Regular /Encoding getdup 87 /W putdup 112 /p putpop%ADOEndSubsetFont
/XOLOUS+MyriadPro-Regular*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 28{/.notdef}rp /F 7{/.notdef}rp /N /.notdef /P 6{/.notdef}rp /W 9{/.notdef}rp /a /b /c /d /e /.notdef /g /h /i /.notdef /k /l /.notdef /n /o /p /.notdef /r /s /t /u /v /w /.notdef /y 134{/.notdef}rp]XOLOUS+MyriadPro-Regular nfXOLOUS+MyriadPro-Regular*1 [12 0 0 -12 0 0 ]msf6.75781 549.895 mo(When applying on light background)[10.0928 6.66016 6.01172 6.66016 2.54395 5.78418 6.82813 6.82813 2.83203 5.65234 2.80762 6.66016 6.70801 2.54395 6.58789 6.66016 2.54395 2.83203 2.80762 6.70801 6.6123 3.97168 2.54395 6.82813 5.78418 5.37598 5.62793 6.63574 3.80371 6.58789 6.6123 6.66016 0 ]xshXOLOUS+MyriadPro-Regular*1 [12 0 0 -12 0 0 ]msf310.23 549.895 mo(When applying on )[10.0928 6.66016 6.01172 6.66016 2.54395 5.78418 6.82813 6.82813 2.83203 5.65234 2.80762 6.66016 6.70801 2.54395 6.58789 6.66016 0 ]xsh%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)systemdict beginXOLOUS+MyriadPro-Regular dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/slash <1C60D8A8C9B8151C27268C28135E46A906DDC9504EC2C635F21A9AA1DC0B003BE7> |-/C <1C60D8A8C9B7F7BFE242671C9E817400744FCB1930C8B6D982C0603B0F56B2079EC8B4534AB9C74A497574D9EF71E8F51BC97EB8824D6E23EF8EFAA3DEBE8D568C2956BA1E496299B0678E1779132A604465EA4ECC38726918FAF069884E38826C83426FA3C94ADFC9002199C86D8D> |-/S <1C60D8A8C9B7AED8035FF9728E9C78ACC28F20CC9666D445523C20D6BC6D45C854A0BE693CA04DDB35CE9C6FCC12699F3ECF3D1B67F9F5777A6EECDAF3C0F3F32C0B6BC38F752623DB2A9617BDB514ED25F1A310A0C42BE659A27D8F2C06C4BFA42A6084F73A353D30020A89B386DABBAAA17119B17F011D1BF8067CBFE17C2D6AE10C51C95BF00F09A50ED067AF> |-/m <1C60D8A8C9B6B770778B71072C32D83B2DE18F9EFFEDDA9C73816E98D1CE691983731B7222B167A6D2F63D304D344E93EA069603D18629A4320C5F1BC8DCC049DE26F978CA9BC88005768D4CD278F658DBD0215EC4C428D90DCB1C70291E674313AFD07F4ACB4C5152C73088F1801AB89447326D19BFA79413EE5F810BDD4269F23365D24789FC23A7E37320B3F849B7FB9F5D52128289A6456940F89EBCF3> |-systemdict /gcheck known {setglobal} if end {end} ifendXOLOUS+MyriadPro-Regular /Encoding getdup 47 /slash putdup 67 /C putdup 83 /S putdup 109 /m putpop%ADOEndSubsetFont
/XOLOUS+MyriadPro-Regular*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 5{/.notdef}rp /slash 19{/.notdef}rp /C 2{/.notdef}rp /F 7{/.notdef}rp /N /.notdef /P 2{/.notdef}rp /S 3{/.notdef}rp /W 9{/.notdef}rp /a /b /c /d /e /.notdef /g /h /i /.notdef /k /l /m /n /o /p /.notdef /r /s /t /u /v /w /.notdef /y 134{/.notdef}rp]XOLOUS+MyriadPro-Regular nfXOLOUS+MyriadPro-Regular*1 [12 0 0 -12 0 0 ]msf262.639 564.295 mo(SCS p)sh290.803 564.295 mo(rimary colour / dark background)[3.97168 2.80762 10.0078 5.78418 4.22363 5.65234 2.54395 5.30469 6.58789 2.83203 6.58789 6.6123 3.92383 2.54395 4.11621 2.54395 6.76758 5.78418 3.97168 5.62793 2.54395 6.82813 5.78418 5.37598 5.62793 6.63574 3.80371 6.58789 6.6123 6.66016 0 ]xsh88.9844 659.392 mo
95.793 675.175 106.943 693.973 106.943 693.973 cv
106.74 694.144 88.4375 675.435 80.3555 664.421 cv
77.4375 660.44 71.5723 662.063 73.5273 667.87 cv
78.9395 684.058 86.7754 698.99 98.6035 710.061 cv
103.23 714.409 105.396 714.024 108.85 712.568 cv
110.893 711.7 108.223 711.142 105.783 708.741 cv
99.0664 702.109 94.2754 696.168 90.8926 688.495 cv
96.0195 694.747 103.383 701.989 109.852 706.323 cv
111.988 707.745 116.623 710.654 119.273 709.419 cv
122.721 707.81 122.193 704.858 119.559 700.233 cv
107.947 679.772 102.635 668.13 97.2344 657.333 cv
94.5957 652.077 87.3359 655.587 88.9844 659.392 cv
cp
f
102.469 650.554 mo
100.455 651.745 98.5996 653.93 100.033 656.849 cv
101.465 659.763 102.41 662.892 106.529 661.03 cv
110.65 659.171 110.105 658.759 111.078 661.456 cv
115.984 673.507 120.381 686.821 124.131 698.37 cv
124.74 700.813 126.004 706.28 127.771 705.977 cv
129.426 705.699 132.264 703.728 132.887 702.499 cv
134.451 698.272 124.951 674.012 122.006 666.229 cv
120.604 661.526 116.869 656.261 119.287 654.228 cv
121.389 652.476 123.33 651.695 122.984 648.998 cv
121.172 640.881 117.383 643.768 115.418 644.683 cv
114.02 645.396 103.895 649.722 102.469 650.554 cv
cp
f
92.0273 709.021 mo
89.1582 708.46 87.9785 710.443 84.0332 708.676 cv
80.0645 706.917 79.0488 704.824 77.6426 701.808 cv
77.8652 698.451 84.9375 700.667 82.7207 695.789 cv
81.1309 692.924 79.8496 690.981 76.4961 691.393 cv
72.4727 692.224 71.2969 693.532 69.3027 691.582 cv
67.2891 689.636 64.8652 685.35 63.3066 682.003 cv
62.6543 680.263 61.9766 678.326 64.9746 677.518 cv
66.9551 676.992 69.6563 676.168 69.1211 673.658 cv
68.7969 672.106 67.8594 669.428 66.584 668.278 cv
65.0762 666.929 62.4648 668.238 61.1465 668.97 cv
60.3516 669.405 58.8555 670.227 58.0723 670.722 cv
52.0586 674.237 54.6934 681.874 57.6328 686.462 cv
63.5137 695.734 72.9688 707.348 78.291 711.79 cv
83.623 716.229 89.3281 717.347 95.1094 715.693 cv
96.8418 715.122 97.1309 714.487 96.9355 713.109 cv
96.791 712.009 93.8926 709.376 92.0273 709.021 cv
cp
f
68.0137 708.141 mo
60.0918 705.308 52.3574 699.32 47.4629 691.337 cv
46.3359 689.499 44.7637 685.505 47.502 685.688 cv
49.8867 685.847 50.6172 686.374 51.7793 685.061 cv
53.2656 683.429 53.5508 681.003 51.6465 679.306 cv
49.0039 676.927 44.4434 676.182 40.1133 678.216 cv
35.7988 680.234 37.2969 687.206 41.0703 693.224 cv
48.3125 704.805 56.2754 709.207 62.6992 712.283 cv
65.9375 713.817 73.2012 716.771 73.9473 714.699 cv
74.9102 712.04 73.7363 709.805 68.0137 708.141 cv
cp
f
153.309 625.5 mo
150.785 627.273 144.881 630.509 143.883 632.731 cv
142.896 634.956 152.406 660.185 152.98 675.403 cv
153.406 677.808 154.902 677.194 155.766 676.631 cv
157.883 675.226 160.205 667.671 161.033 662.608 cv
161.217 661.458 161.52 659.905 161.604 659.13 cv
161.871 656.815 161.02 655.405 160.266 655.673 cv
159.016 656.122 157.047 661.171 156.855 660.33 cv
156.43 658.394 155.441 654.229 155.281 652.614 cv
154.998 649.925 159.295 648.88 159.826 646.213 cv
160.65 641.989 159.48 639.279 157.418 640.577 cv
155.736 641.618 153.549 644.027 153.031 643.901 cv
152.311 643.169 151.221 638.134 151.25 637.214 cv
150.707 633.366 155.514 633.941 156.311 630.96 cv
156.744 629.562 155.705 623.798 153.309 625.5 cv
cp
f
140.242 656.894 mo
140.689 659.642 139.711 661.726 139.711 661.726 cv
139.711 661.726 138.557 665.021 137.867 663.482 cv
136.92 659.208 135.809 655.478 133.498 648.851 cv
132.91 645.934 134.191 645.524 135.689 645.522 cv
138.055 645.538 139.67 653.401 140.242 656.894 cv
cp
133.801 635.808 mo
130.949 636.876 128.115 638.138 126.768 639.06 cv
125.408 640.003 122.777 641.716 125.105 647.446 cv
131.395 665.792 138.137 692.438 138.625 697.723 cv
138.824 699.877 141.617 696.989 142.885 695.715 cv
144.139 694.443 144.953 693.667 144.668 692.021 cv
143.947 687.899 142.705 683.048 141.014 678.003 cv
141.014 678.003 140.168 675.096 141.543 676.462 cv
144.635 680.813 146.518 685.567 147.771 689.885 cv
147.771 689.885 148.123 690.641 148.855 689.574 cv
149.912 688.612 151.986 684.169 151.986 684.169 cv
151.986 684.169 152.887 681.597 152.133 680.402 cv
149.922 676.04 146.938 671.792 143.057 668.054 cv
143.057 668.054 145.695 664.046 145.803 657.195 cv
145.879 653.009 144.383 647.906 143.184 643.446 cv
142.287 640.12 138.688 633.562 133.801 635.808 cv
cp
f
83.2754 652.563 mo
87.0645 653.378 90.6973 649.659 91.6992 645.918 cv
92.3555 640.419 89.293 638.675 84.8613 640.531 cv
80.6289 642.298 74.1758 629.292 73.2246 626.413 cv
72.0039 622.815 71.3496 620.883 73.4277 619.205 cv
76.8945 616.712 78.5156 615.569 76.4043 611.856 cv
75.1699 610.173 72.7051 611.094 71.0977 611.801 cv
67.4121 613.422 67.4512 607.555 67.0586 604.338 cv
66.6602 601.09 67.6465 598.954 68.6289 597.921 cv
69.5039 596.968 68.8574 591.38 66.75 592.363 cv
64.2363 593.252 62.6191 595.332 61.7344 597.999 cv
60.2793 602.772 60.7949 610.973 62.3359 616.846 cv
65.1621 626.591 66.7598 632.265 73.0176 642.913 cv
74.498 645.207 75.8984 647.321 77.9531 649.262 cv
79.6406 650.86 81.0625 652.151 83.2754 652.563 cv
cp
f
33.7148 624.506 mo
32.0352 624.598 30.3379 626.47 29.3398 627.622 cv
28.209 628.95 26.4004 632.454 25.9219 634.647 cv
24.666 640.378 24.6211 644.993 31.2695 654.821 cv
32.6699 656.888 36.2344 661.047 36.9219 661.993 cv
39.7168 665.843 38.4629 668.499 35.7773 667.396 cv
34.4336 666.853 33.4297 664.894 32.9414 664.309 cv
31.6621 662.84 28.6016 664.267 30.2773 667.948 cv
31.7715 672.425 36.1523 674.91 40.3262 674.529 cv
44.4805 674.155 50.4258 668.678 43.8848 659.147 cv
41.4336 655.589 38.0449 652.599 34.8906 648.168 cv
31.6875 643.66 30.207 639.879 31.7441 635.033 cv
32.5527 632.494 33.5547 631.915 34.8223 631.511 cv
35.9063 631.14 36.1641 629.362 36.1797 628.73 cv
36.1973 626.325 35.1563 624.431 33.7148 624.506 cv
cp
f
45.0195 608.756 mo
34.7773 614.143 36.6914 635.876 42.8867 651.498 cv
45.6582 658.521 52.793 669.798 60.332 664.845 cv
64.1055 662.362 64.3887 658.651 62.5879 655.571 cv
60.291 651.638 57.3105 653.179 56.1348 654.595 cv
55.4121 655.476 53.6367 655.363 51.9219 653.14 cv
45.6387 644.948 44.584 633.267 44.2813 626.247 cv
43.9844 619.563 46.2344 619.431 46.752 616.688 cv
49.2832 610.728 47.0313 607.714 45.0195 608.756 cv
cp
f
86.209 608.946 mo
86.3496 608.819 101.455 624.764 111.266 635.041 cv
117.566 641.665 122.35 635.901 120.324 631.556 cv
113.705 617.362 98.4512 593.101 89.5684 587.479 cv
87.707 586.29 83.6328 586.075 82.3809 587.119 cv
81.4707 587.876 81.9824 588.93 83.1758 589.946 cv
91.707 599.167 99.918 611.761 99.918 611.761 cv
99.877 611.781 82.7949 595.422 73.8789 590.542 cv
71.9199 589.473 69.459 591.392 70.3027 593.044 cv
82.127 615.857 87.7227 628.519 91.5742 638.069 cv
93.2246 642.141 95.2734 646.595 98.4434 646.283 cv
100.84 646.058 103.525 643.039 101.055 637.746 cv
91.0352 616.253 86.209 608.946 86.209 608.946 cv
cp
f
134.016 618.569 mo
130.594 617.435 130.383 624.125 125.926 617.93 cv
122.404 613.055 120 609.565 110.154 594.967 cv
106.391 589.397 112.096 594.276 113.113 594.009 cv
115.008 593.518 112.574 586.869 108.854 586.026 cv
95.041 582.909 96.4668 586.773 101.512 593.675 cv
116.436 614.071 121.455 629.06 127.791 631.806 cv
131.174 633.29 135.221 630.151 136.281 627.847 cv
137.867 624.48 136.814 619.499 134.016 618.569 cv
cp
f
150.428 616.599 mo
148.715 614.577 146.475 617.769 145.678 617.856 cv
144.586 617.981 144.459 618.834 141.773 614.649 cv
138.484 609.501 137.23 609.229 137.135 608.356 cv
136.879 606.062 143.303 606.813 140.541 603.45 cv
136.826 598.926 136.117 604.825 129.822 599.375 cv
128.355 598.096 126.039 595.305 126.174 594.442 cv
126.303 593.575 130.111 595.485 130.869 594.693 cv
131.219 594.308 131.193 593.042 130.008 592.218 cv
127.527 590.493 123.609 588.923 120.084 587.624 cv
116.053 586.146 113.717 588.534 116.252 591.935 cv
122.992 600.91 132.008 607.137 141.26 625.945 cv
143.225 629.942 149.285 624.077 150.275 623.318 cv
152.531 621.579 151.699 618.092 150.428 616.599 cv
cp
f
58.0977 603.533 mo
58.1992 599.479 56.3438 598.946 55.2813 599.233 cv
53.5957 599.692 52.0664 602.319 51.5762 603.548 cv
46.7285 615.766 56 636.72 62.5352 651.318 cv
64.0938 654.415 66.4219 659.651 70.2227 659.442 cv
74.2715 659.224 75.6484 656.038 73.7285 652.733 cv
69.8984 646.466 56.1426 621.258 58.0977 603.533 cv
cp
f
54.6738 743.298 mo
53.209 743.298 51.8145 742.804 51.8145 742.804 cv
51.8145 740.202 li
51.8145 740.202 53.5996 740.695 54.2461 740.695 cv
55.041 740.695 55.5156 740.461 55.5156 739.729 cv
55.5156 739.105 55.0586 738.889 54.502 738.61 cv
53.8555 738.288 li
53.041 737.88 51.6836 737.127 51.6836 735.083 cv
51.6836 732.286 53.7715 731.469 55.7285 731.469 cv
57.2344 731.469 58.3945 731.985 58.3945 731.985 cv
58.3945 734.479 li
58.3945 734.479 57.125 734.03 56.0078 734.03 cv
55.3848 734.03 54.9766 734.31 54.9766 734.867 cv
54.9766 735.534 55.4922 735.686 56.0918 736.009 cv
56.7383 736.354 li
57.6445 736.824 58.8262 737.577 58.8262 739.557 cv
58.8262 742.763 56.543 743.298 54.6738 743.298 cv
cp
f
60.457 743.084 mo
60.457 731.685 li
63.8789 731.685 li
63.8789 743.084 li
60.457 743.084 li
cp
62.1582 730.178 mo
61.1465 730.178 60.375 729.34 60.375 728.351 cv
60.375 727.362 61.1465 726.545 62.1582 726.545 cv
63.1699 726.545 63.9688 727.362 63.9688 728.351 cv
63.9688 729.34 63.1699 730.178 62.1582 730.178 cv
cp
f
71.8594 743.084 mo
71.8594 735.298 li
71.8594 734.609 71.7305 734.396 71.1484 734.396 cv
70.418 734.396 69.4688 734.911 69.4688 734.911 cv
69.4688 743.084 li
66.0469 743.084 li
66.0469 731.685 li
68.7598 731.685 li
69.4043 732.587 li
69.4043 732.587 70.6543 731.469 72.4355 731.469 cv
74.2871 731.469 75.2773 732.437 75.2773 734.547 cv
75.2773 743.084 li
71.8594 743.084 li
cp
f
81.4063 733.428 mo
80.7637 733.428 80.3965 733.75 80.3965 735.34 cv
80.3965 737.189 80.6563 737.514 81.4063 737.514 cv
82.2246 737.514 82.418 737.169 82.418 735.34 cv
82.418 733.705 82.1387 733.428 81.4063 733.428 cv
cp
82.1172 743.084 mo
80.377 742.911 li
80.1426 743.32 79.9453 743.815 79.9453 744.268 cv
79.9453 745.126 80.5039 745.43 81.2578 745.43 cv
82.5488 745.43 83.3438 745.192 83.3438 744.14 cv
83.3438 743.298 82.8516 743.148 82.1172 743.084 cv
cp
85.2598 733.835 mo
85.582 734.33 85.7969 734.933 85.7969 735.47 cv
85.7969 738.696 83.9023 739.471 81.4063 739.471 cv
80.7402 739.471 80.0957 739.343 80.0957 739.343 cv
80.0957 739.343 79.8574 739.619 79.8574 739.858 cv
79.8574 740.267 80.1191 740.416 80.6992 740.461 cv
83.1953 740.676 li
85.3906 740.868 86.7012 741.406 86.7012 743.815 cv
86.7012 746.612 84.8281 747.431 81.1504 747.431 cv
78.332 747.431 76.6328 746.915 76.6328 744.763 cv
76.6328 743.709 77.3633 742.849 78.0938 742.375 cv
77.4492 742.007 77.0645 741.429 77.0645 740.547 cv
77.0645 739.599 77.7734 738.934 78.416 738.59 cv
77.6016 737.943 77.0195 736.955 77.0195 735.34 cv
77.0195 732.242 79.1504 731.469 81.4063 731.469 cv
82.1602 731.469 82.6563 731.685 83.1953 731.685 cv
86.916 731.685 li
86.916 733.878 li
85.2598 733.835 li
cp
f
92.4199 737.577 mo
91.7324 737.599 li
90.8496 737.621 90.5508 738.009 90.5508 739.471 cv
90.5508 740.695 90.8945 741.02 91.4297 741.02 cv
91.9473 741.02 92.4199 740.676 92.4199 740.676 cv
92.4199 737.577 li
cp
93.002 743.084 mo
92.4863 742.224 li
92.4863 742.224 91.7324 743.298 90.334 743.298 cv
89.0879 743.298 87.1934 742.935 87.1934 739.619 cv
87.1934 736.181 89.8613 735.77 91.3008 735.77 cv
92.4199 735.77 li
92.4199 734.996 li
92.4199 734.374 92.1621 734.072 91.2168 734.072 cv
90.1211 734.072 88.2031 734.652 88.2031 734.652 cv
88.2031 732.114 li
88.2031 732.114 90.0352 731.469 91.9707 731.469 cv
94.1875 731.469 95.8203 732.114 95.8203 734.847 cv
95.8203 743.084 li
93.002 743.084 li
cp
f
102.748 734.051 mo
102.078 734.051 101.455 734.567 101.455 734.567 cv
101.455 740.695 li
101.455 740.695 102.037 740.848 102.424 740.848 cv
103.176 740.848 103.887 740.331 103.887 737.278 cv
103.887 734.374 103.521 734.051 102.748 734.051 cv
cp
102.939 743.298 mo
102.232 743.298 101.455 743.041 101.455 743.041 cv
101.455 747.173 li
98.0371 747.173 li
98.0371 731.685 li
100.791 731.685 li
101.283 732.459 li
101.283 732.459 102.209 731.469 103.715 731.469 cv
105.352 731.469 107.305 731.942 107.305 737.278 cv
107.305 743.041 104.488 743.298 102.939 743.298 cv
cp
f
113.414 733.835 mo
112.426 733.835 111.953 734.438 111.953 737.383 cv
111.953 740.287 112.578 740.912 113.414 740.912 cv
114.232 740.912 114.881 740.396 114.881 737.383 cv
114.881 734.374 114.471 733.835 113.414 733.835 cv
cp
113.414 743.298 mo
110.857 743.298 108.555 742.246 108.555 737.383 cv
108.555 732.545 110.857 731.469 113.414 731.469 cv
115.91 731.469 118.279 732.503 118.279 737.383 cv
118.279 742.288 115.934 743.298 113.414 743.298 cv
cp
f
124.904 734.438 mo
123.979 734.438 123.439 734.953 123.439 734.953 cv
123.439 743.084 li
120.021 743.084 li
120.021 731.685 li
122.752 731.685 li
123.227 732.848 li
123.227 732.848 123.678 731.469 125.141 731.469 cv
125.895 731.469 126.299 731.685 126.299 731.685 cv
126.299 734.675 li
126.299 734.675 125.656 734.438 124.904 734.438 cv
cp
f
131.293 733.621 mo
130.26 733.621 130.064 734.502 130.041 736.546 cv
132.238 736.546 li
132.238 734.847 132.217 733.621 131.293 733.621 cv
cp
135.463 738.523 mo
130.023 738.523 li
130.023 740.396 130.795 740.654 131.811 740.654 cv
132.902 740.654 134.883 740.202 134.883 740.202 cv
134.883 742.783 li
134.883 742.783 133.398 743.298 131.811 743.298 cv
129.396 743.298 126.625 742.869 126.625 737.406 cv
126.625 732.61 128.881 731.469 131.293 731.469 cv
134.172 731.469 135.594 733.318 135.486 737.621 cv
135.463 738.523 li
cp
f
354.368 659.392 mo
361.177 675.175 372.327 693.973 372.327 693.973 cv
372.124 694.144 353.82 675.435 345.739 664.421 cv
342.82 660.44 336.956 662.063 338.911 667.87 cv
344.323 684.058 352.159 698.99 363.987 710.061 cv
368.614 714.409 370.78 714.024 374.233 712.568 cv
376.276 711.7 373.606 711.142 371.167 708.741 cv
364.45 702.109 359.659 696.168 356.276 688.495 cv
361.403 694.747 368.767 701.989 375.235 706.323 cv
377.372 707.745 382.007 710.654 384.656 709.419 cv
388.104 707.81 387.577 704.858 384.942 700.233 cv
373.331 679.772 368.019 668.13 362.618 657.333 cv
359.979 652.077 352.72 655.587 354.368 659.392 cv
cp
0 0 0 0 cmyk
f
367.853 650.554 mo
365.839 651.745 363.983 653.93 365.417 656.849 cv
366.849 659.763 367.794 662.892 371.913 661.03 cv
376.034 659.171 375.488 658.759 376.462 661.456 cv
381.368 673.507 385.765 686.821 389.515 698.37 cv
390.124 700.813 391.387 706.28 393.155 705.977 cv
394.81 705.699 397.647 703.728 398.271 702.499 cv
399.835 698.272 390.335 674.012 387.39 666.229 cv
385.987 661.526 382.253 656.261 384.671 654.228 cv
386.771 652.476 388.714 651.695 388.368 648.998 cv
386.555 640.881 382.767 643.768 380.802 644.683 cv
379.403 645.396 369.278 649.722 367.853 650.554 cv
cp
f
357.411 709.021 mo
354.542 708.46 353.362 710.443 349.417 708.676 cv
345.448 706.917 344.433 704.824 343.026 701.808 cv
343.249 698.451 350.32 700.667 348.104 695.789 cv
346.515 692.924 345.233 690.981 341.88 691.393 cv
337.855 692.224 336.681 693.532 334.687 691.582 cv
332.673 689.636 330.249 685.35 328.69 682.003 cv
328.037 680.263 327.36 678.326 330.358 677.518 cv
332.339 676.992 335.04 676.168 334.505 673.658 cv
334.181 672.106 333.243 669.428 331.968 668.278 cv
330.46 666.929 327.849 668.238 326.53 668.97 cv
325.735 669.405 324.239 670.227 323.456 670.722 cv
317.442 674.237 320.077 681.874 323.017 686.462 cv
328.897 695.734 338.353 707.348 343.674 711.79 cv
349.007 716.229 354.712 717.347 360.493 715.693 cv
362.226 715.122 362.515 714.487 362.319 713.109 cv
362.174 712.009 359.276 709.376 357.411 709.021 cv
cp
f
333.397 708.141 mo
325.476 705.308 317.74 699.32 312.847 691.337 cv
311.72 689.499 310.147 685.505 312.886 685.688 cv
315.271 685.847 316.001 686.374 317.163 685.061 cv
318.649 683.429 318.935 681.003 317.03 679.306 cv
314.388 676.927 309.827 676.182 305.497 678.216 cv
301.183 680.234 302.681 687.206 306.454 693.224 cv
313.696 704.805 321.659 709.207 328.083 712.283 cv
331.32 713.817 338.585 716.771 339.331 714.699 cv
340.294 712.04 339.12 709.805 333.397 708.141 cv
cp
f
418.692 625.5 mo
416.169 627.273 410.265 630.509 409.267 632.731 cv
408.28 634.956 417.789 660.185 418.364 675.403 cv
418.789 677.808 420.286 677.194 421.149 676.631 cv
423.267 675.226 425.589 667.671 426.417 662.608 cv
426.601 661.458 426.903 659.905 426.987 659.13 cv
427.255 656.815 426.403 655.405 425.649 655.673 cv
424.399 656.122 422.431 661.171 422.239 660.33 cv
421.813 658.394 420.825 654.229 420.665 652.614 cv
420.382 649.925 424.679 648.88 425.21 646.213 cv
426.034 641.989 424.864 639.279 422.802 640.577 cv
421.12 641.618 418.933 644.027 418.415 643.901 cv
417.694 643.169 416.604 638.134 416.634 637.214 cv
416.091 633.366 420.897 633.941 421.694 630.96 cv
422.128 629.562 421.089 623.798 418.692 625.5 cv
cp
f
405.626 656.894 mo
406.072 659.642 405.095 661.726 405.095 661.726 cv
405.095 661.726 403.939 665.021 403.251 663.482 cv
402.304 659.208 401.192 655.478 398.882 648.851 cv
398.294 645.934 399.575 645.524 401.072 645.522 cv
403.438 645.538 405.054 653.401 405.626 656.894 cv
cp
399.185 635.808 mo
396.333 636.876 393.499 638.138 392.151 639.06 cv
390.792 640.003 388.161 641.716 390.488 647.446 cv
396.778 665.792 403.52 692.438 404.009 697.723 cv
404.207 699.877 407.001 696.989 408.269 695.715 cv
409.522 694.443 410.337 693.667 410.052 692.021 cv
409.331 687.899 408.089 683.048 406.397 678.003 cv
406.397 678.003 405.552 675.096 406.927 676.462 cv
410.019 680.813 411.901 685.567 413.155 689.885 cv
413.155 689.885 413.507 690.641 414.239 689.574 cv
415.296 688.612 417.37 684.169 417.37 684.169 cv
417.37 684.169 418.271 681.597 417.517 680.402 cv
415.306 676.04 412.32 671.792 408.439 668.054 cv
408.439 668.054 411.079 664.046 411.187 657.195 cv
411.263 653.009 409.767 647.906 408.567 643.446 cv
407.671 640.12 404.071 633.562 399.185 635.808 cv
cp
f
348.659 652.563 mo
352.448 653.378 356.081 649.659 357.083 645.918 cv
357.739 640.419 354.677 638.675 350.245 640.531 cv
346.013 642.298 339.56 629.292 338.608 626.413 cv
337.387 622.815 336.733 620.883 338.812 619.205 cv
342.278 616.712 343.899 615.569 341.788 611.856 cv
340.554 610.173 338.089 611.094 336.481 611.801 cv
332.796 613.422 332.835 607.555 332.442 604.338 cv
332.044 601.09 333.03 598.954 334.013 597.921 cv
334.887 596.968 334.24 591.38 332.134 592.363 cv
329.62 593.252 328.003 595.332 327.118 597.999 cv
325.663 602.772 326.179 610.973 327.72 616.846 cv
330.546 626.591 332.144 632.265 338.401 642.913 cv
339.882 645.207 341.282 647.321 343.337 649.262 cv
345.023 650.86 346.446 652.151 348.659 652.563 cv
cp
f
299.099 624.506 mo
297.419 624.598 295.722 626.47 294.724 627.622 cv
293.593 628.95 291.784 632.454 291.306 634.647 cv
290.05 640.378 290.005 644.993 296.653 654.821 cv
298.054 656.888 301.618 661.047 302.306 661.993 cv
305.101 665.843 303.847 668.499 301.161 667.396 cv
299.817 666.853 298.813 664.894 298.325 664.309 cv
297.046 662.84 293.985 664.267 295.661 667.948 cv
297.155 672.425 301.536 674.91 305.71 674.529 cv
309.864 674.155 315.81 668.678 309.269 659.147 cv
306.817 655.589 303.429 652.599 300.274 648.168 cv
297.071 643.66 295.591 639.879 297.128 635.033 cv
297.937 632.494 298.938 631.915 300.206 631.511 cv
301.29 631.14 301.548 629.362 301.563 628.73 cv
301.581 626.325 300.54 624.431 299.099 624.506 cv
cp
f
310.403 608.756 mo
300.161 614.143 302.075 635.876 308.271 651.498 cv
311.042 658.521 318.177 669.798 325.716 664.845 cv
329.488 662.362 329.771 658.651 327.971 655.571 cv
325.674 651.638 322.694 653.179 321.519 654.595 cv
320.796 655.476 319.02 655.363 317.306 653.14 cv
311.022 644.948 309.968 633.267 309.665 626.247 cv
309.368 619.563 311.618 619.431 312.136 616.688 cv
314.667 610.728 312.415 607.714 310.403 608.756 cv
cp
f
351.593 608.946 mo
351.733 608.819 366.839 624.764 376.649 635.041 cv
382.95 641.665 387.733 635.901 385.707 631.556 cv
379.089 617.362 363.835 593.101 354.952 587.479 cv
353.091 586.29 349.017 586.075 347.765 587.119 cv
346.854 587.876 347.366 588.93 348.56 589.946 cv
357.091 599.167 365.302 611.761 365.302 611.761 cv
365.261 611.781 348.179 595.422 339.263 590.542 cv
337.304 589.473 334.843 591.392 335.687 593.044 cv
347.511 615.857 353.106 628.519 356.957 638.069 cv
358.608 642.141 360.656 646.595 363.827 646.283 cv
366.223 646.058 368.909 643.039 366.438 637.746 cv
356.419 616.253 351.593 608.946 351.593 608.946 cv
cp
f
399.399 618.569 mo
395.978 617.435 395.767 624.125 391.31 617.93 cv
387.788 613.055 385.384 609.565 375.537 594.967 cv
371.774 589.397 377.479 594.276 378.497 594.009 cv
380.391 593.518 377.957 586.869 374.236 586.026 cv
360.424 582.909 361.851 586.773 366.896 593.675 cv
381.819 614.071 386.839 629.06 393.174 631.806 cv
396.558 633.29 400.604 630.151 401.665 627.847 cv
403.251 624.48 402.198 619.499 399.399 618.569 cv
cp
f
415.812 616.599 mo
414.099 614.577 411.857 617.769 411.062 617.856 cv
409.97 617.981 409.843 618.834 407.156 614.649 cv
403.868 609.501 402.614 609.229 402.519 608.356 cv
402.263 606.062 408.687 606.813 405.924 603.45 cv
402.21 598.926 401.501 604.825 395.205 599.375 cv
393.739 598.096 391.423 595.305 391.558 594.442 cv
391.687 593.575 395.495 595.485 396.253 594.693 cv
396.603 594.308 396.577 593.042 395.391 592.218 cv
392.911 590.493 388.993 588.923 385.468 587.624 cv
381.437 586.146 379.101 588.534 381.636 591.935 cv
388.376 600.91 397.391 607.137 406.644 625.945 cv
408.607 629.942 414.669 624.077 415.659 623.318 cv
417.915 621.579 417.083 618.092 415.812 616.599 cv
cp
f
323.481 603.533 mo
323.583 599.479 321.728 598.946 320.665 599.233 cv
318.979 599.692 317.45 602.319 316.96 603.548 cv
312.112 615.766 321.384 636.72 327.919 651.318 cv
329.478 654.415 331.806 659.651 335.606 659.442 cv
339.655 659.224 341.032 656.038 339.112 652.733 cv
335.282 646.466 321.526 621.258 323.481 603.533 cv
cp
f
320.058 743.298 mo
318.593 743.298 317.198 742.804 317.198 742.804 cv
317.198 740.202 li
317.198 740.202 318.983 740.695 319.63 740.695 cv
320.424 740.695 320.899 740.461 320.899 739.729 cv
320.899 739.105 320.442 738.889 319.886 738.61 cv
319.239 738.288 li
318.424 737.88 317.067 737.127 317.067 735.083 cv
317.067 732.286 319.155 731.469 321.112 731.469 cv
322.618 731.469 323.778 731.985 323.778 731.985 cv
323.778 734.479 li
323.778 734.479 322.509 734.03 321.391 734.03 cv
320.769 734.03 320.36 734.31 320.36 734.867 cv
320.36 735.534 320.876 735.686 321.476 736.009 cv
322.121 736.354 li
323.028 736.824 324.21 737.577 324.21 739.557 cv
324.21 742.763 321.927 743.298 320.058 743.298 cv
cp
f
325.841 743.084 mo
325.841 731.685 li
329.263 731.685 li
329.263 743.084 li
325.841 743.084 li
cp
327.542 730.178 mo
326.53 730.178 325.759 729.34 325.759 728.351 cv
325.759 727.362 326.53 726.545 327.542 726.545 cv
328.554 726.545 329.353 727.362 329.353 728.351 cv
329.353 729.34 328.554 730.178 327.542 730.178 cv
cp
f
337.243 743.084 mo
337.243 735.298 li
337.243 734.609 337.114 734.396 336.532 734.396 cv
335.802 734.396 334.853 734.911 334.853 734.911 cv
334.853 743.084 li
331.431 743.084 li
331.431 731.685 li
334.144 731.685 li
334.788 732.587 li
334.788 732.587 336.037 731.469 337.819 731.469 cv
339.671 731.469 340.661 732.437 340.661 734.547 cv
340.661 743.084 li
337.243 743.084 li
cp
f
346.789 733.428 mo
346.147 733.428 345.78 733.75 345.78 735.34 cv
345.78 737.189 346.04 737.514 346.789 737.514 cv
347.608 737.514 347.802 737.169 347.802 735.34 cv
347.802 733.705 347.522 733.428 346.789 733.428 cv
cp
347.501 743.084 mo
345.761 742.911 li
345.526 743.32 345.329 743.815 345.329 744.268 cv
345.329 745.126 345.887 745.43 346.641 745.43 cv
347.933 745.43 348.728 745.192 348.728 744.14 cv
348.728 743.298 348.235 743.148 347.501 743.084 cv
cp
350.644 733.835 mo
350.966 734.33 351.181 734.933 351.181 735.47 cv
351.181 738.696 349.286 739.471 346.789 739.471 cv
346.124 739.471 345.479 739.343 345.479 739.343 cv
345.479 739.343 345.24 739.619 345.24 739.858 cv
345.24 740.267 345.503 740.416 346.083 740.461 cv
348.579 740.676 li
350.774 740.868 352.085 741.406 352.085 743.815 cv
352.085 746.612 350.212 747.431 346.534 747.431 cv
343.716 747.431 342.017 746.915 342.017 744.763 cv
342.017 743.709 342.747 742.849 343.478 742.375 cv
342.833 742.007 342.448 741.429 342.448 740.547 cv
342.448 739.599 343.156 738.934 343.8 738.59 cv
342.985 737.943 342.403 736.955 342.403 735.34 cv
342.403 732.242 344.534 731.469 346.789 731.469 cv
347.544 731.469 348.04 731.685 348.579 731.685 cv
352.3 731.685 li
352.3 733.878 li
350.644 733.835 li
cp
f
357.804 737.577 mo
357.116 737.599 li
356.233 737.621 355.935 738.009 355.935 739.471 cv
355.935 740.695 356.278 741.02 356.813 741.02 cv
357.331 741.02 357.804 740.676 357.804 740.676 cv
357.804 737.577 li
cp
358.386 743.084 mo
357.87 742.224 li
357.87 742.224 357.116 743.298 355.718 743.298 cv
354.471 743.298 352.577 742.935 352.577 739.619 cv
352.577 736.181 355.245 735.77 356.685 735.77 cv
357.804 735.77 li
357.804 734.996 li
357.804 734.374 357.546 734.072 356.601 734.072 cv
355.505 734.072 353.587 734.652 353.587 734.652 cv
353.587 732.114 li
353.587 732.114 355.419 731.469 357.354 731.469 cv
359.571 731.469 361.204 732.114 361.204 734.847 cv
361.204 743.084 li
358.386 743.084 li
cp
f
368.132 734.051 mo
367.462 734.051 366.839 734.567 366.839 734.567 cv
366.839 740.695 li
366.839 740.695 367.421 740.848 367.807 740.848 cv
368.56 740.848 369.271 740.331 369.271 737.278 cv
369.271 734.374 368.904 734.051 368.132 734.051 cv
cp
368.323 743.298 mo
367.616 743.298 366.839 743.041 366.839 743.041 cv
366.839 747.173 li
363.421 747.173 li
363.421 731.685 li
366.174 731.685 li
366.667 732.459 li
366.667 732.459 367.593 731.469 369.099 731.469 cv
370.735 731.469 372.688 731.942 372.688 737.278 cv
372.688 743.041 369.872 743.298 368.323 743.298 cv
cp
f
378.798 733.835 mo
377.81 733.835 377.337 734.438 377.337 737.383 cv
377.337 740.287 377.962 740.912 378.798 740.912 cv
379.616 740.912 380.265 740.396 380.265 737.383 cv
380.265 734.374 379.854 733.835 378.798 733.835 cv
cp
378.798 743.298 mo
376.24 743.298 373.938 742.246 373.938 737.383 cv
373.938 732.545 376.24 731.469 378.798 731.469 cv
381.294 731.469 383.663 732.503 383.663 737.383 cv
383.663 742.288 381.317 743.298 378.798 743.298 cv
cp
f
390.288 734.438 mo
389.362 734.438 388.823 734.953 388.823 734.953 cv
388.823 743.084 li
385.404 743.084 li
385.404 731.685 li
388.136 731.685 li
388.61 732.848 li
388.61 732.848 389.062 731.469 390.523 731.469 cv
391.278 731.469 391.683 731.685 391.683 731.685 cv
391.683 734.675 li
391.683 734.675 391.04 734.438 390.288 734.438 cv
cp
f
396.677 733.621 mo
395.644 733.621 395.448 734.502 395.424 736.546 cv
397.621 736.546 li
397.621 734.847 397.601 733.621 396.677 733.621 cv
cp
400.847 738.523 mo
395.407 738.523 li
395.407 740.396 396.179 740.654 397.194 740.654 cv
398.286 740.654 400.267 740.202 400.267 740.202 cv
400.267 742.783 li
400.267 742.783 398.782 743.298 397.194 743.298 cv
394.78 743.298 392.009 742.869 392.009 737.406 cv
392.009 732.61 394.265 731.469 396.677 731.469 cv
399.555 731.469 400.978 733.318 400.87 737.621 cv
400.847 738.523 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/XOLOUR+FagoNoBoldLf-Roman*1 uf/XOLOUR+FagoNoBoldLf-Roman uf/FagoNoBoldLf-Roman uf/XOLOUS+MyriadPro-Regular*1 uf/XOLOUS+MyriadPro-Regular uf/MyriadPro-Regular ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 14.0%%AI8_CreatorVersion: 14.0.0%%For: (User 3) ()%%Title: (SCS logo_new branding \(Nov 2015\).eps)%%CreationDate: 11/5/16 8:57 AM%%Canvassize: 16383%AI9_DataStream%Gb",Kq*O)`o'lAT]L117EJ*V940/7=]8d($)@_?+@HPf4j7hnIFa$jl&8('`ki&*pMOj&#Wp8<Mdj1,;ZdZ#?c0(VmcO.W_1/0>n%'#h2I8;R\C81&QQ1TfI8Q0&gQ!DkL&$`nm:Kf$it%!5t,$nht7ZX?fq%BX?:=CtQK\+?J*>4!'i:jn'fQ+G?O_u)g^%(5pIJ1d6a%)k]ggZ[$*D9VZc-?Tp7bC(jtjWPb?oY1@"!jYQ;7A#NG$kBWuU13BWVnd*oSiN]0t>04,iW_G3iRRW8Fqj?^57d[/'W+Zsn/P;t0%Hc2.R["45P$@aDI]?RA'WG*_FOB1+Q^uI>!+?e`1kF-5i#6?O`nAl^.m,pHIgMGdK<[aE2e"Ru./.Wh58`i#;g/9<OU[mqPO^]T%%b0OQ!&>[N!/0jk>P[tYq5nJu!dPC4ol_B8p&'@Lr'EU]Wn;e?4(kL_\M:7',a.\dVKH_cI:kQedn>T*&IX`:8LTjKG+qQ6`8Y%cC%6dF,P?Yo#[;ObuNl&(iC'VZ<t&TgfWl#A-ps/#-k@J.'GWO?\&+6K+OZclH;[GKV.IMjF`M_%@M1G#"2GmOV@@tZ\VJ`rka/C1Vt%>?PaK%+Wq5i%otL7^=Y^cbO/u&d69Q%o0!fAL8uP\p.8,0khsD^NfnFl\5%<f7"j%W9R+3CqgP'3mjur-F9"dY5]#cN8]&N-9oV9%Z]:_^(JPpl3?D0D>n>2KAunh1f=tjp8E=$)Gs;U#=gahY)t_lA3f$ohY[#Hu&GcM%VhPnO,nh9-ZtA"(`#(-`4@<$u07tOG)))&L%,`.`o-@q<L":Qj_^77,:j8L=!UTr0:mM$:I<q6C#j;:p)Dlu&:8rq_m?Lp#ZPX$Q[(nq4cIu=,a?jhYB[arCNL/g6`k`8*[l,.S0%Z.Q/>bm%>Zd*uS9`23i]Asgp*RJ.R`JaT(0i\&%rR;X+pf%MgDTi$]7H+)5k)TAq$-<nqV$_F^]=UQ9`nmDcG_b`-X[G%mnb`NA.%7*?R^@#<*]f0^i,.NU/D,%6%ie.(f;N9\<Br[Ju%l40uUSr&Cq\nZf!Rb(Oe_s7Fp&&@BM9G7r/aI!+],d:k\f(<?EJkCfKFpMd%%#>J_i*c+Q!Ib(So%1q$r9GR>nC"o(f+=c)K'o?7odP20TcEpOYEM2ufJKA4*CD?r]A7:IPd;#)Lg%pP"6j>K\VBMMU&0/@IdS82n%C%Y0.QoT%'CAT=9278B<]:h/F5*5[=Vq0'K3o/&;*]Wo'C";Je%&Gm?oXU[(WuV<@i<#t)m`b[4UU:\r2=j<oU]"+Ke->mXd\U#F%"$1\?lCc+BZPSU6n3i#^0Ps1Xg\tQ5'AuIT(8AIt!oK3`P/YL'_WLbGAkXHpbo37>d2Mcr(1^f-*n:.@N/@T*gIYmLs/mRInX/J/%r5SV5[oBZ-`K"M=9X1I>GiQR.E/@7o#D*udJ=/2FR)c9O!PrR=lWHYnCEA*&%fj"EbYB*F,a$1Q7'mg+S0a=qoT1R9f'JRnh4V:G%H9f(Fka2>j#KCiL4sggW"QCUbbQW8k6S$])l^:"VZ4IJQC*@j-l]8m3.TQhLdR9iDR?p\?=g^:"6g`O!LLsJ3b>_L*QREZT#o3.T%bAD2C/(>.n,`W%tWFE2KU/5]\HL-WAU4T,O9E\`MU+`e4j]aJXfLL-8.U+\Z>5;f(MiCn9'G_:I!Fe3ORGNsDd(3^T`\B^9WjiHg%U\:gb)XrNLd@58TA,BoS32!+c!+=P='aZ,],JhG0Z4UK>CgAo5HG,mN65qo2aL!M)eu=6)dpYW`fjYe)<\h])m9-7uN$;fJ?m0rr%(e)TG/a2\bK7tL^$CUu]1!B'HP(@WJT8#ZTQDY>!!G_@Rrj,HVNQ2J'm<D]!\j1N<#Wt<P=[J]4ER[<NjMqq/"-9lBZd[WFf$-Si%F+s`<Bk\9,3)?C?TC20TWjh*qp+C$$LmS).Up\kQXr1h%0W`k-RS$kb<bqKW&4/<aAT>=@npq9Gp-])4r3?4/iIdFJ'P9L,a-B_F%3RHGnn0ZdF@/WsTBNf+Xp^e->qZV!V0W/c+!:jb>446#,]CRM0="FW,47*iaCmp);D"s,O]$lUB&c?mtEIp8/O.1eg]e_YKh(q?u%3d.h0FT36:iAcmi=!8p+JWsK#RNUV#2\UHpMI9k6Uph;W49\n`OL_G2gA+MMi>R><6ehZG>Q[8Sn*%4B@r!u+W!#DW^Si^nO(l@n%0]]c'TR_uNd/GUM%krr)Q"pRFD^4!FIX&iR.>bHY!@5JM1c<gP:\8u6-CCWM2+S2-&uAL*==TR+V-GHR;G(t$.Z#IF`0[tH>@L3H%YuE7i$cRKJ=3MGFU0Nq?@SnQE7BX]IR3Gob'oI]3+^`;*Z3@'I-ONa;/-lEn^_PK';kW`YHnf!LkOZ632Qu3']Ta6(6CuMEGrF"0%l!,Z=bS>0o>V;Af.60C9ji![Nj)\IcbqV4>OY(.&fg7Thc"44a,qEW)XI'a.I$Vs]=XHcl-)IOSPe</XZAPBtMPQ&cT^W;dYR7/P%E_.n+"Z\7!jK,H(E^H(&;&3\Kk%%M)A6LHS7B%EkV4<d8'M4T523\6#QT0he(l9#$@Sn\4Gqg[Y77EG08JFTZj@)gS77O'd6:iR4%"X,P[KWLgPZ60IJ+:,Wq$*:oJ1gf7#I"BW83BkV:]Za$]a9t,VF$.W%4O'/$,$3^n>`R!J$7@2D,8W@kj#N-03JO<^&mJlSCnAnV%=]SsB<anKuJ>AfI=dEK1VSj1:!g@8;9U8Pkkt;RO#a"Ut%*L=5SY0C7Bika(7g$YBTU?R05`CH&Ba.K!N<Ds%+*/"2,lA(<TgVL<%WA/i+q<)8KZWu8L6i67V4[MpE5$.77hj*5HU4!5A<$O`:SHgjl7'n>94]&NGMeSNf1MI\h+.s,FJ5M!4Ut-[B1T=jN=Td%]r<^A_%7%e7\%Q[3`klJ@f8*F\QLP>`m/TgZY,M<iY1(*"'SJLddB&+e6Fm;kSDJB^g!>kSsKA#7j6ql&BX&+D47RGc5mk17ea_=U[=C(te%N_.D<bu'XeQ6[elYl:k4@k,?goa3i'`6_B@#=#>5@SKsT]OaFdfQO#c@!d)*-)\R[0_cI</`G+t-S"P&5eDYGB,pl\re^[1K9*4_%pk.S*6gF)jVJ<X>q@%h,7r7rPmbe>se2:+%c09N#1DX_>iebq^%,H]b6<Y##+5m\<R2kf^bqLn'88-1s@hkEN>8A3oi.=2G,Rt@&%ntZcAVI^UJ&SPT4par`f"oK7XLhais?mAJe)'u!\s#fM5&%/dV#ik,*#6l2(nh__Gm.qD&@#J_"i@ctE((`ncVM5[bM=_P21)P$B%"4WYRe)3F.&6<[QO<1lL<8/PnIu@\%BG#+Lgd+&sg4FabH0Om]B@7d'LqbJ]QsZ#0qn)I2D>is^U*GQP.)*3.TtZoS]e)N4gjW+;%?jgO@O[F@][0?GNo<V)lKC$O'JKfk.%jb970d@EgN>PMiL<4[Ia2!Ej9a?6H+A/g37(!3Glt&Ru`[FF^(*nKu-s,/N;FH>=6mNYW%"At0<ljtqf)q#=;iG$tL#h0I4'4,CN.Cc<oc_raGOa<7uX"Ds_8cbXhdHqn'(?CmA92o-"D`92!7Qb445mh98WtqcX&dSL^=:$i=%1bb?eZ\q\?5K,%s5.M@!1^pT-Y._VK_TG/18*GkE[nf=TBF!C^eJ6RV'g^f<@WBmq6nR(7)]0398!0P"K"/==UY5d,j.[16'^XLK%.!eV,&H-WM-YRK)$"aa(.(gbNG@p&Ul*5Uj4Dre$2u;1pGd.>/%kUFf+qQu?187*/WPjKQI))+=/S*@_7i5MZY$_te#SEs?$p%OB%Q:A_C1sJ@))-iOOWDV4iC9\uX4+`.l#9cBjKAf6u8CM>_d'OUGU:4"["NA+iHctIV/lK:@Ub8*1[@u,!L7*hh+:J4PIj@)E?RVY/%Ni-kR^!&j0Sn8Z?>b&a=Bgk>1ZcpmmOqnbQ5J5R"E%Bus.&au,JKakHHXelQm#Jbqjpd;#8SOXV,W#Khg)M[U,bQ%1-L3KE?jK?!%a@f:'LrLg%$ElDkLbaVgH"R+K!<FPM#X.!T!Q:Qdnd8oHcj70%$[0DSc7/lgRMelY**>[='Jb3UJcnRVOAFA7oeTao0'IP,=LETU%/'sL^\PkcZ`-EhRDPLK6.[A1gX49u*bd?okg,ubGJ?//M@j-KtGDQkkg0#S4Q?ed;R__6KD2Q@QQ?1ao?M<)dQSm-k!(TU:0,$Mt%!A[&7@bjLVE+u'n^VB..G<oYd=VRAqJPi@:r;RaTAD.@#nS1[j,<.G!5[!&ZQO_Ad#@h/*i%tenJ)NlX3s]tjG0;M>,k</@N!]Tu%gW6[",R/a;jV>!nOs?8$K*)n;bgO.VS0CS26O9]=3I!7WH7H(V5e9fe\;dlMkf>D\A!ue&lWn^^>"ip9MKS(_]C1>$MEI96S-"hB%ZOEr!@aDU_L6:6l]#amjXJHf+-d=1q]0\(V!bp[?M0BmV?6Y@kE2i-f,VjHE'HI^,2,35'0c=$f$a^5IJ/&QB@XZruObaHoU(qn6%^ij+RQGEuSN=&HT*29!fai]15M\;]nY_N>sb<H-5$s@/KhE9@=R74i[G8j!-)#s_C7W\irA4M3d?S\.(JSX=X%Urc]/VS95\W#@H%6j@%5"rf]Cae=Mr'aeKA7NSMegdVPVaTB:hMF^tb_ugA,:k/o-UlFLRc;eY:/39.-JJUH-AH\?T]I:B58WamV1sue,bcV5#J8lGW%668c(!4e2JoKtDZ8e*C(&?1:O`DJi#A[W'oTV?Z5\/52smJ&=H7"c@I,;49o8S4MONfeSD-$mJWK',&qRWbW@APSsD`TRhi-t4hS%3f:f43Z_uN=IF09MNNaPL4IO*!^uN"Yc'JtQ9bPX@n.6i0gmRc08NoF`dpqK**qT9f&[%U![BaP/OHu,$m=#^K7Q]0&VW\O&KM<]%7)g=!Q/$?o>3&os*<%-uAT%PSiuJP1fsRYM)Is>91Fs;/,T"Njq\Z+@3$UJDZm$n.,gEm:!"g"8=qQVS=9k/N,_o_hn*m!*iI>`"%7:].u//2VPh%3JI(^CQT>QI83'bj3$7bL/3%s>&LP!$]ONA;)gBS6ZJD3TkR6;m9`)Di>LHNPZK#*M55bH<he+qWBn,;70q!.oh?%1inO@\`C&TgIN;d0+\%iOM`6.m._Jji10iZm%,l1&o\T?/PpAR&R:0SLkSb/",I"l&@&+RZFMsT1l=,AKY&ug8=2FA6jc&2b9"J;%!1I3J&!KR?kJ6X4k:2!M<Yu_u'QA2SpA72ikk#[%M1@o"+h;>:87^8EOV_99(6I&j"+Ui"+u0;EZOX&b\Ea63-T[6M'-<"Oj!igb%P/+Vu@>Xm!NNU1=!NXZt\mcn)X@sT@1b6XB3W(5PU`b`X.[qt>*X7Y4E2;1+_"GjCmV#j\/s1>nJTZPq_uiSN$j.m!MMD56W!fZI%0#&M]FL6]5ICc.-!95B9AkX?nYb"K#Oae.:7M[PH.u9'E!"2iX[=^HW-B14,EW1n8OX4%5DCM_a6EmP,.7BRlgLsQ)aTINN0VCin%)O":W>m5qJV(P(#0*elF$CrBO"+]FoHR)I!gh9OB)%Qc!',d-<DCUAB6t.HmIXr/<:IMgG'f:j4>lrnHO@F1h?A(mj(hc=,pAn>b%A:TH_=P9C*+e#L*$B3">:*Jg/&3dUm%%ME@5Y/5U]7d76L^ks`\Wa9"#qMY\U-pY$js4jFBOLu&3fUdfG?>-`gd]?!3AIg(J3+W=%4!Y(C&$RYjU*@+,Jnt*_cBA8@R<V5.(r[(s=:NUL1BR*d$?ES^jMp&.9*/dla)DPnM'U,P@F7oI;=TGW75q&DA?R`g,k-i,a=rq>%8-X\r':01[cab7GZOH<<MMt2[+HuF`6$^31RR32EOrGlZO$ssI#8V-,PI;[B(s+KD]GJ70W&DLP-3D&4hP#ml4o$:I*+B`/43eR1%k8]nJ#)sJ+chr31NMJ%e"%n*M15UFP9ia5.!4pB1F>3Ds:n>Yo%q35B#Kt%cU-U*W^bCor7=CLFEk*A1[S$l1#Y^:uh'<11@\h*=%&T8IeRU]X7>iu86Ztj+^$f+^2/BT6GAS@H]k+$C['l]V]0OT)B\$X&0JqP(O%0[V.ngOJ]AI%ki)3/<KZcM+LLI&,-d3QNe;;@,^%Mj:u+*t0BO-1CmSK#OiC(gbDd(`_U*F?jE#E&0UI(<p:mJBNV)L\)BZiKlrbkfl:23J&O^f-!*h9q$&?@9lD,ifl7j\=C[:"Z!^.%i5uf[i!<Bi8g%j^rKpN*&kDlnS;>'`82:@*E(WCW)qrE?752?`&R:IB4"708nW>U-0TD?ggf\$(>fQ7?nVh\mr8o#76t*2kqTIf@%1%@A]G"ls?b[Uk].0<m&Tligu,cN>ILa*W(^gr\X&Cr'aZVEC1M/jGn-K,/[F\"i78":(8&qS$SZOBFBTp\8&+-mQ]m0,KJd>9K5%L`+Di48k^0O.fE/00!W*=YiEtLLp#0!s.UJ)K'*@X;;cWc2iS:>W6Aoh*;Qs7Ok0h"2*Pq5X_g1aLP.`1(h1Y1in\0jM:t^+p12)%h+ipH1X8TcP+.@0XPbrdDENFVU6:-0MlK%&;L>ooJfm#iTG?U[acPSqrf%&14PDB/]rpEqX\jVpp%VV-b=_jbS:_DYBkL+I[O=2(%o!7<].>m2P:3`1;]?nW]";KB]"Mp'<7>>?bW6E.PIZ1(A:@Uf88=9T!+U2oN1kLqO5pIW5^^Ek*Osqb7n.9Yn4PHh_Jh`Gl0Ak`"%V^BC"&pa9_/%S^j:*sto$j+V`aC9E?NUE_PZ4CgR%!aVIWJF*HiauH$i))#0DPJ=p%_!b0h,'2qcP.A;7$'#+QDJ;V017^0AAgoL%<*jR^//^nJDILd!EmOfF>LN'436@*BA@1o&J'k;car\0+'FAhUV+BT;o`lBq-TQiLjBAR?!O*027O-7bf1;nc3Ij#9gtJQ.g6[(%%^b(H6/.(u\A?'kZ&t]YRMi_iUO6UmVB5jX4=D_,$;5<@;9+(!M6+K7cN<X,;%!\4on,SA?*Pn!U7Ag`9nWNuu'Vm^P$)0A/)qfj/%Z'%2!]=B%-k9YI;E.`"4c#[:sVqrfsKik]$VC6?Kjr+=YR1kr\hSp<fZA]a5i2WtJ/E:bD&DUXpeRtF4$W0C*YdBVM^aaE0$C;7?%A_KSs#nhhi?O:St&)oP6eQX<&bQa%hk>o]8PRNaFek9uPk-$^oUUCdqkdMO3<4Vg7"WM":Gdh"8(96?#ihAF>m+_^IP#O**Js>)n%@";=&)j-P-%B/<)E0ePSH+&;7%?n<KWCVYEjoq)2*%\ZJS<8'*b,%)f*famGAZ+?]_\?)M%!+$6$C.'XY-6asI\C$QDH"HV>!hi]%Hr.KU?#8(Y]ALLa`EE$r2T87h#I+of$$cD.a@=t0*Okhegl)V.^ts]OZl%3QGAm1kKmPMp)hJ`A,Y1JIb5tJ6-^kcAkR29sm'X\X%:(l@ONOTUF%NN2;i.K+rV\B!U.%4,"+Q-$`Ml`#bEu0p:,dA<X3s$+A(m0&VB6$au&6E;q(lr&B@[]Y]4qWB82O*Co!</Wn6',(R%,2fc4)TFTVp-)J/m*@B]5&>aL0'r=#LoVR,62l5`p+-n-pVmfuOUlmp1jO1l\R!Vm(abC85(WuNXq)&'baO8ML/bMJK2jDo:W$k_%ULc^6dOQ>BCEji'mC(LsM!Bn9e1;'p0M>u#S$r>*rNLdGf@-#uWU0%_enDaqNslkWMl'g7LTWcGG5/3Y*R[<Y"\_As"K=&+!&P82%dbcC*U$6)m,$m+u@fKj"!'Mt0=OZn0YLtS68TLL(3^rT'q'S'Ps,8fU5@`14o,[$KnS@9<MmME+<QCsF?g\Ss^egZ"(_hsfRC#%V%,q`[YXkb_kgD1V'YHL'_WFKVdWYUpVdPW@WmQ>ue.Q/n6btd</C9-7"pu37Zo%+1`Rch+s=,0n&T>!4<7b<(--SX'5n!hf`/]=Iq%h5sUBf:@Hi`](,-^#E.e5(kTl#`0%P!gZb8#?>[rc3%*UN,>6E*285)?kL6SF^[?j4'#A9-9"T9-YijbhLVV6q"^/A/IgS[':U&X%_n0Ul^0RLnn(S\Z2#da]3-Z<%GG_%`WRW`Lp@q4f2p(d5.SH4@H]r8a>g28AbkCOKQ`>%9lKqB4n&>!2PC.<Ho"E[Ek=N6DejaVA%mS2-C8\-j@l!@-^Xr6CUC<c\H)7K>8:RLd65h!bEqNfg\P4jl%abYf2a2s'llbmq@cf-o77V@N-r-/NSlpRdhf*^5Uh)XL14&ZE.%HFK8L>OAfP]%YAj"oKdRFR6E7`O@&!pS]1Q-R?E7YJ#^&+2n;?]/;D1osSJqre=-o-ac1Y'Rh0Y2c)2b:'jtk(P2O0+_aVDqu"p!%?ZpL`-OTJb['X%@osceG+$O"!&Gn.M]49CAWch]K7hNC1Vn\i^`?l'1(OZ<[hJBW;[2FJMH98jYL>]"0(B8*::$iaqoK.Mtg]S6H%pg78Qr@^'1rq@JUVD&'#A"GV8UFaS1c^b$#)!&WbS+_D3;gOLNUiu1)l@BURI%Y`JQYHfd^8EYofJ&/6hB`MtCm'aH0o536hM.76%!_\)0a#=3NMf6bphSYMq-\RCR#kng^`##O!,R4Wa`nqVo^U*j&)t8T"j)=VgCd(e*FSho.g$r//5O1Bq:9H^*R<W98H`)Q[e?!9l%EUj286)0m/caXbj*WhNM6bb%8g"j]]Bc9!)e,C/1a's'qk\nnfI(Jo96>V7n]^.Y1\4tfnq=sE80^75.S"oH@m)3On$iWn8g8@!u%'q^RkHpZ]-S&H`8USO;8h,*.(Mti)Wk+QLs?;/7arqV+CP>>lC5)h:Ts%:S()m`?7K&sq<NMS@6r\S8+7sGtkb\c!G0-ZC^&W9B*%jM^H</B-8B8*oGTm+!>0*;Mmjr+E]3+nedlaXmk5"MXU^$F.!TEf7eAG=t<Kb6.rd[);Y,FR";Xh_b$S;Edsr&6m;s5%9=Ba[_1)%ZEZ?Anh4aaW>XlfTiFU^%.n`@lU7>`hS8qf,'uDcRia-Dm?XGH[>*8>&(T59E^hnIr^ZX/A3qBuXsa2_5>lO<a4RPR]r`CDlHXCX%os#tA.(6j`_GIMHb'tinHmbDM8$=Wh]&\8RHT-PZN4[Z]:=.$flXNla;7&OdS&g*Big"N251TG%rYuOiKN?i.Xc\p=^lNE9bVnLN%GOms'M7kmV@;!T4HXiW@a?\tAZrGD]ElB\\&a8aB.WrpN`'7skJ`!/950@U!\o&@[S/jHCJKdI"C23,0.&s:E4Z$sEUHQB0?`2,r%E,lna1ppB5D>eg/dejT)s.-aRr\m*748fa<+YJo9?LP,ad>YhlkW;!j_p>IgaU<39Vj'Sdl4*FBY(lnRpWtM8PJ](aQJ#8&c!d"7%PY;S)N6P7Z]m>'p__CU0q'^rXc[$ETriKt"dkFW&X3#QV:6*6a=e=:9kJoOl1P0fhqr9B&-t`62a'mt+nkikNa`3]iEL:`c7RPJ:%I,a0?,?W$,\+QBU3)"]l5)QJ7*/>CbHT-PZN4[YjRc?*l.JYAq5AnMM`d7[Jj.,6L601Qn*q-Ij+7[pt&^CDP<oICiKn&PLOUnZ%%ruM712#4&Z['>."+*ej.neEYtqD^)WI^/6lgfj>!n'%BYP;BIW,?Qem^MM;,'0ia8'8ncRBObr-MAA$B6F;S8)g?q3+[M[OZ\^i'%A'ZJ&g;KRWm+K=KI=-AWgsgThm9IIT1Ma7Prt"MU:"1MMg.;6T[>@WU6u=8cF/&]0)(118o5V,r!6=UDbBn\Dd,2PoK;O=Sk<TES%B-SB&%J9EdQLD0:otnY^=(H>Ab$SKqMHOM)M@nbo9u4SEp^Fo=i;rW)Nbhp'_]3jE`lGYX7;pba]&(rsDk1!692k5p#`9D]n^m#@%\'Q]]EG:ot&Mk2H`5M<#P7(h(PP:1lL`)Nrl4\X>@V(cW)^"[8qP2F.;9nH&$5VZ>%S#<3)>Db,7ktB\DVhC*ULgkWJ3E</;>-&`%)M[e]@rIarh3Ik&"sJ0?l#"N89jfC]kkMk8p(lPQ]tK1QMbhEUF&,(g\9B&@^1[s!3CjGI%YXaX$pF#2o2j_k7rk1#rk3l4],GSO%p.IcZj2Z$:=WdK[[Q&_-@OEf/Ne5&W48DZg-]`F\juAZ1-JQXpaI?unpP&j8mGrI^)Euht10-iNU!1rc,H9d8$[K%3r9qukq3mGf%(33ah-X4[lE`t<Q68m`9:c-il*q*:aA.*[1c,"&HCTZjoH7/^d9T6S4(m1>L@LZdR:Y5#:Fbp(C8%[nJeEO.MpJWjVo1*$m%K6+A%L?H`[FBNEr)S<V@n"us,_KiK@[aeu;iU#ef^*F=S)GNaiI3qCl0dsV-^?9Z!2=FOe,;s];g![7i.`<jkWnsiAcfXM:h)$s8e^A35%VPQ2CA%TlT2/Z<ORoJE;Q,QO'N>j/PS!;t\-+Q5]IE8\fOjsEqNK-0_bP?bUiPPV;5ndbWU`&[B80slnO*@Z!'Qfk6*$F#+?701h%,Y^==m+2ITq9N#`C:CQ"Qos[JT($AVFg3:mQajV"4E;U?\)THOTn@1OT,'g$^HeXQnK#Kq+k>@tU$=P8gJ$ljPIf#3>TZs[8DV97%io'CPUi'[;l8Fj;c(o55WS:,32Nt^HjEeICh8XC@)P?!p`M<e4mh_\CS`K5A<hV_=X2)JHNg`r"-?j/$/%/l,LBdF#GA+oBABaMh%Lel*Zhk:Y^16=6*6Y"W0[U\b_5NR*X(qP-ilGMo^+4"Rpm`q3pcEXY(A*uE+pJ6d<n,0$[Cu#!PW359X\B`40;u^.\q/Nk;8!_`J%SPu:+n4o0sME@`]?dtP?A+KRe(Vb%MeAng^s7+hI5"ZM#qu4(H)u4thKjoP:B'j7/")U9[6-/%!1;oI_$2J5X/\nl#1UCD+CGo&s%9<4%_VgmC.]p&:7@nQb?$,EaJl=\<D`ar0LcDJG`=HH*h2TD`La1i"LiTOfW,$qY8kM$(1\DVk/-9aUf5P3Y87gg@$^J<03,K-H-%IR*ZLn_bg[`/i=',=J.<2'tbOTsT33U4tWVC5d!X/:Wt[7XRNL7?%h>r_A=hj6Lk97?);ojHH=XUo6#n71EHAiG?]iQ8BqF=WB%o%s1JLfJ")VKWc2JGb%5rm5"]-a\(%F[)FpYGs,@933@8>*9OiGJ;7"_2"r;S.iU2\5QbQ9udlb*^]/l`7)Cu.:kd#)b5[^P:h`hR@%Nd[s,7;Zfd9Dd;fRaq2TF]Yc-j:slEAOgi'p(qGqApiWK^&ogVlIr-1W`ZaS7f91n"93La-?g8#mOjs`?1dTP?fQLpajih4annV1%(]>jQUN4DTF:8_VO&njLA9Y59ON*?,6"4jfahOg\T;'j#S"7SCmgahtJh'3<_D>^Id.B'<ON",1]MFX.Vdjarm,N"_fO-*l>>a/c%`giZu,Tci)c_McA9Ak.u`9HeBM,2R5:S$p5@b<%7h^%1X4:,A2;`dSG`g!>l_De'.9G5'2_DdJ]he,(U(&O;S8]iu@.:;G\Rq-o1%N,OmL9esFS`]$f8G@d5NB1n4;.H?oc$(ip-)hFlIOmXeWT-`G8Kp#$Mp[M1r:\b/,,J><ck3jUE`Z$R?Va$@a0E/OKQsAZ3Llf`<%(Vf4!h0U8.Kl*F:h_DQOXDU918A8JWV.-CR[oJ;BR4YhHgHSb/.)NCZT18a)YQOjucZ"s9A^]VA=X+OMd?LV`"RuTYddLFS1[]tE%dBmN0]k\SEN10c?L>X(Wm%g0M:?Ch^Z$2fhi#_P1:WM61N(D5aYlV+jV6rBc?*.l)<HXO^1t:cn'DLNuKNHe8ZmPn#QX`#;!/]Of%rr/KYltQWbi4R`ZgZl!r*Xn>U]).I?M+!=mPL34!O&SAW\Ces)r_IHS7bGuVi;`XO@s.W)=*oe/09"<fpg^+/F.gRc`E39aRtLlV%p\-gG%0-mj4<6D)GS9DW:BENPGP"WsUbN.;@_5ZbJO^1lH98jY.K<8E/H4*RS(]Mll$*&d7(\Y-l2BY=8[pS`Qf@"DmMMr7(b^<[%o?k;a3)*ku8]c?X13[)>M7XmK6[%8f97]A.rjt1q$&NTKhVQ/E`@#3;-!3H"\8ffRhM+9"$";\AOAWJr`nkEYb-T!?DP*m(Yak=F%q+T>em?`Pc_O$3TI-8"Bl7r%(nLaF$qp+tiN4JD903VlR4+A\D)gD<BWiMPtcACj,F4^5-lHk`5BcP/qk[-9*+(-]"4Tms1+FM&p%/h`95p$>1gOIu3+V9([@IG@J]-J.OCZ[$13gA*DePLgFk"nAMcP3IRJ!#I?W:2Lr][YGs4qKP3+Tu'X2mgT"<Dt\(*SmbfX/pSPX%@XQ%Cn2%i02S%gWHrXl@G%<GtGC1rkRS,jD8g3IQdr[^_*b/GL^ooE9pi!3l*0Q>o*hg_=>,q-@]UjIjP],>N_llVc8(+'_Y;LbC%'k60POo$EVrp/kA.D=,O?*d/7p$W]F50eV_X]FGbnOM70@&_ej+.2cFd;#nZ54<\1=/T1aq`r`ndn*\GU1ii,+_TOC3I=7VA,\"@%/GEI@9Q7:ihRY=DC9q3,nLYC6,O`DB.`8c_6@L4]qZu^>=g#LPJPPJRs7(C@4unreN(L2DRjpBXX#ULgmkji2?iQA7mP=EEZ!$\4%"q!3oW9*QjCnAERpmR@Wd[\dXok*\Zii%ROi5qbcT8e_B,Z88YNIhm'J'99$$3+8WohY?m%mIWmdgq>6%]R&FR]8[>oiYaljjK[7%0GMF$)1gtL7Y52KMs.PgGV.*fPLhIfc#7?+<0#oZSQ=[@/-$l44sU,#N%DlJbB0393'lN:[Y$hL">4ebVJ/J^6?#5,r'iLe-\p*0%B_*US"2\[W)MURp`0`@15%s\OYt)KuE0#S;K1LIpHnQ,S7kdY\a9!_2;e0),?U1f8\SS\-Bq1U"='&*[Jjqn4Wip1EO\3ksf2p<3%5r^\jO</62BhCQYOWT6^%K]/++Flk%CCl?b+(57=V6WhF!^,\a=P(oN"lW4l6YKNl%.$O>[d[[9a6"ZiBe#<&9d9dDCncl*];*u6%:B<BH%YsJ7Z>>"5N1&\.N+`*Fh>.l8-^,o*7L+A`j);"kUp;kaU/<qOdsdu#eY`2E=k']V"1p\j)+>V/<Q!1U8LiacQ@\l@`R%T-%:/f2@mP>>(0_Mp^`4f'02D.Adi^9&4L_ml?_bun@>"",GX>;.D!p9HLRA\Jd4Q&_c\3J355.&V1ZeHP+kV#=dr*L)`s-Hm`K-?fi%f*2-`Z;J7:gjC#hcD.[\L:V%B='GbH1R.bY_DFWr&&q$WrAP#Td4kq\Go&4erB&)ZbX[@L!DLhe(M^;jRJj#YUP]!Nm<=LVjp5qD%&Kt82n!a,1K+j5>ZfZZrALd_Sl:m-9Paj-,@@_C'E85Q7[rnn^BY`I:c>Buc2So_[[B3M_h%<TGpLj!uj4JB5/qlZ>+PjEN[&OGT%?UG>1R)8q3]7&"T`XSXZid44@7jY*5?r/fQ!urHUUG=3sAWI(ah9eqB[HtXpD;K*[3k?>eciKma#)j[,KD=K;\r4!tr2qo<CZGg_%1kj8_SiAX2J0;?5bIhil0Pga>3C@T5rXda#4IAoP4DK7!r9f!t87[VXB[mSZ!C(P;!OpZ1J_:gWJ8%'r)_Jr`9eQ$K&L0:slgak7%r@p:PhZ5L;MuuaC>^jGSFnkn])@QFos8*U,9/i+]Zmf*hMfP)5ktbjt!>;oLWjb6%8B:kZR\MpCcrc^AD@bok!#(r<.PRfu>&Vfi%8[AJZCbI;s*3o]0LV+F_rq[(I[AsKamBUFsoc+scCR,tl#uuprc2!j1@S>7R+@*>O<RK]G)T$#t&G1rrW,4OSnr%5\%lK5Y??Y)E%:"mM?^jjQQgd/!p1$j[(*l1bk2fS(%b!ZGOdEVatdL^^$@J%oKr'WD!8:E9+-^=hp7/<go?uGpn(?W3!k\a+b<!0M'Y4-#DINsI`%F6MrbS4:M<JuS\,bs$9IeNDbtqi,2)W#>r&R'&s6QDQOQ-Zn9<rho$F?pYBEW7^?0++/#5flY\Dag5q_M*TXcj`$caC$K;9JZ'JN%]%@3S.0-.E:-i:7[(l#raTsX)-0)hY:kD1["q_CPRPbAg#sAqg;g?/9NLjY8#S]V_6f%uU!t8IJBa5n??Wm`P#gk>(#Y5RPJIoh8%]H/\$A\q@VdcDq?.-L(Mbn4=ee*4,r$dJ):$;W;Yq'"d4kqqkFag=,k*s@fV]_o,q*!Se.m3*eVKh9+]j[1aT"gg39U@Sp.E3h/"%i"..aO<4K_,&Sr`A-JT1-@hU>Q/OS.^^,$-$qE^U'E%O]r6[JI\/kdj!#6QF&/Iu6/fR[l6n92h3l.YYpI#NdbT]SA#g#0oQ$/ON%@<j[Z0=Z'2^6mo0@XsAgVa;RJjItK5M?F:gN,T=_0VY*KU!#O5!H`SteDmK[JeVapLOp6".-I<I#Oph;']]h>md*=pJp\+5=/EGM%YiMmP%k.6W-3Q.E9=p.4q](e^$mYnCX*AeNpAtqOlFbRIO*kirD$h5(l;E+L,0)E6\[J*'r7ALt.ea>rjDp(X4e7F;oTED,W3Su0%CX9m'$irjB9BK(p\A0/B3`Bh*C(),m:H'B?DL_i&WN"Iij#Z#C\>d,P[bFuTE[oH-TomEGGCa0EW)dgY<u".iQ<>IAZ:':<.Wpn;%.N]`I.7RdG4<"-i6s#jn[U_i>Bc.jjNeYl=hjK`4WMd5SkkR87@2Z>rgp.nS3Grq$(]4dK`KCK0i(Vg@'=kKc.Qf#_Pg&u6jt(V<%3d#8<c"E"Ec;N8Fn[efa1*&R][`*k635,V^dcMJZe3s[A-$$[]+`1Q`K+C%i%qV3qks3sS!L"0LOVfbd4i&q%\/_>*-dTU7MjRf%%g4RNQj0H%n_#O193$et[!>I(V&""=@'@CJk0:3FX'+e7KEafhe08'mki;-j-LV_V,fQ1ITV@WB:(l[m84jsSS7o(VElfBTGIK^g&%=0p@r<t@eJN[YIJ=Pj\eNgQ4$0V$Jl-[N$5!>E'hXe6%E6#JAY:^CI<c^%k/`<=th/@b,uiQ"O89/G@>@[('r!@/Aq`5sNEoqXA\%ns>@Vd(pq3BUJf93d8rY[mpGp:ZN'`0WU`KU_!^[<md50q`!B6b]N5Y#0uT-54!Xg"`K'W__;&h&:\*c5%djmh:AN'.`o`\CpX*8%?+&CeIEnR37ofU*[C:p]=n+1[L]7.CghE5%IKtOXN%rQARl9W&`\A5]jO3qR<RI9n5a7*k)[OKpAfkG*L=6rlr^4m/S"(=;8h9]S%Mgc\;@#-'&6W`q*.Jh3]fW'rshcZZcH.>[E2B2+#ao4F`>\U7;RYcD5W*!;Er7CW$I->teIhS*nTV_&PO"p@Jn#Q_16a(r\>:bV/%)Y+kl4/X1"03X<Q:;]W4ORHt;H%Ac7S1p21+*nBGg#,]4*5M<FMN_R3bptn4N3$HS]FbS/S"+%]K]J:2L/IOu%Q-K.Ri63p[3$8$%dtWtB5c`Y[QMuj#N#5/eDkAb's4Hb%G<p95beh!hJ+-A)NC$"=eJa*.^Pdm<Rs<0,SGGSmkm@DD7ApUWmJOHCRZf.GB0dGNqlNN\%gF^nBJl3'6&PU<sSm"c_P:"+/J7+O=$lGo//sYhV-?Z2oD9^N/f6a#lTj$[(.b3)h*@#NVgcl^[:o\).9\$.?hRDV++UBqc6dod@%V_3D;d8&l;A[\n1VNMTl4Z\l!/+SX?ZCTu#7S1cIbL$BF5-d;/NlCT0,GZ2PRRc1%7A,qaQ;*:M`/B1Of:gof(<tp%,GGkG/kKq`%.BbYEX6oL$?NNW\buU4/^p>iXQNL#HZb((A("G:m=rjC*0f.TDLWrYgF&)cL1-=ZfZ(p$'1*Ec']7kEYX?M^NAlU]bXr`6*!gHP]%NFqPj3`NJ]l3>rGBnB0g/?Q$Wh_iRSY$!>UY\Od;:c7k\8-qn$rh1n1)2K3Z_sH$1hUJJ^4r`)@Oj?R+>PlIW4N6f(3ZWSki[qcH%l558f`0ZpHecD@'YtREc94VG[mBcu<AcJP9[-sIBka:;Cc4EC\_Rd,P?)u\V7DWH6pblU272,l"kc6ZW6WJ`tjH7M[Y3DV9RV)4%%aJ>D!BmTiYhDPB^%E?n:c,\eLIsq`5E2^0O4RL2S9q?"FZ/]W2!%K>i8"'T\1bC>]jjq4,3eYOna)1oXK/$d:,MVDspm,Zg]>4LM%]`o7p<R[XDphV"_+p$\X_Ks-TTbTS-[A44?8JQ$PX]BNh9b+B\EWGH+Zlu@7[&=)7q:ni>2<r+r\a,ft44J"kV\.k56gor*;59C=%+iQFo<3T\q$(UDJZ8p`2^HuiC0i[](S2q^!!E]^,bd!q4kPZ)T"BG.PGR,Lr/'7Rk=m"89UgZuZoS8u;2\8G\22lF&hZJYj!^bY1%K846Wl)b;kqqM$6e1@gI<a.BM91?,TF!])i>,leS]6h+P!a)XPieU@6m?s6qB&07L7c%EKZ4pRpq?m\)2rBS&%;X@2UE15.h<#Z1%p3Zr5LWp[%W?,IR^mqI_[DS#5lekFA?2PiN<DNrJ8']T!'!l-_Dj(K@#`JIC*KrtoD91d[Qd4rCIWnj/$6!A4HH:"Gce^7V?*2GT%Wn0mjh!FQODTgaO]W=4SVtN_]9<#J7Y,9r\`/C1\34#o5Z+Y.uDlt)8cQ-n+SZ7okQj7IN^j]GA&80^BIJpBU<1dK`MMhkm:1<nB%OqPkhT^Ak@lC,)+HVhl5)lY;*>?i^c?LJGer)3%kUK#n'5JP=TgoXA/[pna5prG!mk4m]mV=8`#;M"jgPt:%DNOdN4WX>"X3^*5m%KD\%&"t5Q?V.AoY[8>hioA7<tb`rO==-%Y*<Qmj*MRMu"+XKe]ng'iWC[>]WH_&-XeUo;$amf3:9t-a,$Pe#hR5::QbD"A^DFV3"%]fQAXc:XqRq5G0(C$FmPA@bU@([:9X[CumPPkXP#'t,mh5fR6pZEIDVWF`rj`TaJWgr1;s[oW6((Y8$_k?L;Wq`:;(^WK]53kZe#%h<9fTO^$5JmaZ>IEcZ-o>I*j;ENB(bSk'W;#PZP;he7^`#CGFJe]W`MCpQ1S=Bn'qbt*ikF^:.cm5gTAWk6L7gBuu#>qPEN0<9f6%1oEoH**ldro,2\O^!@\$Vj<[VS0=F[&kTt>RtKd&IWoYkWjni1D%I+qAja_1?Ph<HCNht=)pRHl'+h]."/</B-XMY-c)m7SH6`/B%0.o?GH<E>&R>73J6:P7M/PRhR>%AB\4X/ntTZZmZO$>46Ph)@#CKJ&0!_`_+_6Grc/r9*V]st=ES7UluHsLe_\QW?EXh>d(c+cfY%9Hr_p*'Id'oGWeFKW/58&Mq"k[5W@BYLdNt>^0O*e2.!Z5]Go#jM]3[Bd1*r;g@*=Q=$Y8p>em>0O&/":0)\NR3<c"rNt8J=B*8V%/q/qI3g-TACcVOgbo]V;dajGj?oM\kIU9*aINfY>ebR1DRFNgn632)@hCEGGf#n63Ed5!K=%F*K98'-G=B`q:b1Clkf+&EbT20!3%d9s#5l^_"S?naTe:IqV9HeYo&`n:nRk14;#Sjj(6M7\p)9)sNYCC7J8q/9t1gWcYARA,sEZ`X'$Mg0DLXO(_j"jO?=B^K?d8#2%\%#M[qP4]m+`DemNl-)?:ml,)khV"tHk%)DDbggMX=hihbd^JZTDCQ09L:a=P!4(jB8=*SODZ=k>]hgum'.F5*i@\FeY[bm5d9Qdq4%1U[^Pg!9%*_r7WbC!#4L9ii$?EKrc**(_E(Suh@gc$E]7lXHR%I!<HQcg:)p<39mcZOP:BZ[$As(>&:upY8?4n$gk+3I$uT=P1&(%CQ7]Vdp=2mYGY!;!8pt-DF_p:&'a:>bOVf>.a"[@CQ!<)hIB'V\7?YcV-.g")Au>I=FL')lV;sF`)):RT=p^U..#O9kH\_iCVbd!%,fSM:Ff1JUk'6.WAKdW#^H$3:/AM)SEN:Y8*p4'JQ'm`]?^NFpZZBK%Nc_mngTq&@OmI#J)7n6FVJPM-O&oJ1&?jOZ;P@F*`5:C/%p%`cOH]P'tpKJV`C'*mGVj+=?eNk^^LY=Ze3kbVDg'g/Padu5e5>*FoS1cKJebMQ"E&Qf\Wl:6^<Lf5t*bl$Qo%"TSa;<57:pY$.%[E^-k8L2^H%FhuN\"Z*.Tg#t<mrck;]l*VoM;*[Tp#&I'#FVEAI[m)R"W)uF(IM,0OMEi#Q9t$?"JlRB#G,M?i8R+cb.H[F<49FO%nPn[h)]:3qc#OFDI)AJ,kEq=oqO5GF1h(nie9_Qd>t8bt*mF`D/WYgf4q$j2KVM&o38(IRlWpCUVqha.`C2OTN.opXR$IF"2EX0W%R6deBs)_:+ld"==`B]P)\0SR;q,AQEpsYNqJ,ZHM*/(7?D;eVeB,70tkPamQm`cPYC-]eU>3RgsMFcNTI.Gjb$_'E=%C5gLiO(4^%PPXVoor]e'?/>Z9dLiL2q<kH0\u-;i:Dh.[Sjfo1326THiic!?@a7(gSp5[rKb#m1h!I!n$jeLkJli?l9R)/%55%12HXpOFO%;C=%q9n[BY@8U?*cG2)ngo.E8PVV]j/5/pb3-0U9"]!T)^lKUF$,HQGb$q0VnWphGK"LZ/7P=B]KEr#U8R%!m_k#>)N0<GA>b[GY16CF%e-5YQ4kR1NY7J<aC\`l1Rj^bJX@G@egnU/uCX2,72/D4n4T*l-,3aGeP3;?hbK:DqclkE[>V?iF6TNZnr$$K*ml$&]#FSP9CnnA6%,[5.MEAl]Kb9E_pj_rrX#?aWJ_#[ZjI4ISlWu#DOl$i*&Y\,OMFU`jF=;W54loaW$H?FQ"@!7Z[gMS*KQ4rp3Lq1r;nNQ>#j0YF:%`(1dZahDHk)GH;H*jkl4rNq!EGqjRM</]Z)"IN\sn,,9rIPfoF#@5#`!Rccl>\B,r/9eMY83TC;ZG6H12P)2YXC`[;QMm?.MdXkj%LYflH<)S:(+>No2QrJajV)tXf(UhoO8e3nH$>@m;\+'U[mdXQ]Aaq+>d5TWXS@&^q.?oS"J\EZVUeAOO5JX^k*R&u"Pad5K)[4&K%iZ77n+;1)<5W1@/iP`h='fal$0#N8?=VRUQS$npoJng4?VoK7CY^IbH+VQN71qV!S'(tc"4e8%VLR?uB;!@buQ&1(I8Y8`coo$e+%>-!kpm!Pp+1_;%6bYfpoOA+g&g?`$.]okup+&Mr7.Q0@'&jiAD?X*Ai\W`lT_-ZR%A.+QfS&USSgNROug!c_fb>Mc_k!&9gh41=<%[nc%<51m'Gr:Chm)nc"a*p<66-NA*N[Bd;^F+<XNejC?V0YO**4'_]h\8bF@F`mqR>JB7Vf_$]nJQDrH=)&1s"sIQ<@.f*.\,Ar?%Iq7\012?6MlF,-=Mjp'u2g9kZ['dJp1C]a^UE(EQ3.&AFH\HTF\(Ig@.E,YF6ukH@@5T<PFn3WFGKM?O<LDmK$:C'4`Q&`mfil(V%98@o?[_7*YH%H`CIp5Fo@aC61%U@$q_%e^h,2/WV@E%T7PC3%l).e)g^(k70@'I?k!V$!FU-QL!*Zsb((\Vq0**BE?b0J3K^p0B`%F"S=lbFUB?!cf6d`S9+jI/`r<fQQ&p/UN0`5rl6/9"27j%W5UIk`;F&!F37Ed]XUk0_3^jC&[85L6S+*ObI0"5H5H5%;!Xeo@,U-%nXFVD^GA5nm]nj\O\R\oQV1YeQHtk(Xr"mj%'Ae%/)&IRk,d:^8LA)Gc^:koIHBZZIOIC/:#5o5cVn'*EaMb:'*XH`/aWQg`$W<\%.D)PHoj"S/DY7uBNpZT^:>m5VJ+3@[>ogB!_dNOrPLd7<<r@8KGsiF&>ub9aqL#QZ8De(UP]BqW#Zic)aI++(jGV^.DF;1^$('9.%m-2C/F7u]J=Fr+(6-?kq29QM6>UQkL!@rW'JF`Ycq$[@V+^I0j6=):jIQ9&EcHP,ZlG0Tn+b*WEm%rhHOciWVI87M-4]eL^lX.qE%_NC!;/J!<qXBf(9&F2WSMcR7YR/=I;q8KeUR1DP"Su4j*8nU/XS6c[gR%'gon$^i<!Pgo(C9Vn4LTgCIMEZ61#f5=p[T'ci=bn7R%"=Gb'5+$QgK0V&ON#bo"O1TpC[BK1?=M7aqSlbUEP'P6$I1hq6\PRV)DV,><#k!tfD^7ap)4GioEqVg#-9*Oj/+psUd%5q%"<qdn%5(YsM<j/smDYDQHV->Kab,[CD*@Z`lV8HGH'_6skWB/jJ(?)]Cgjb->$bhuC2X:Uh7OiuA&q8X5fYCs7mKT\d0_W*!q9/09c3(fk%:9&bcqM?h*eQXW/YA_RndM],d02K9,^^Hg-m:F@-Y.l)@#/Ws?+\kdNO3h4O@8JqKC]gZ_(\i!nH5dL+g%.h::?"0T?-<C"%2`\c%rDq]U3>Q!<Va0Dk4q9&8Ykk2-8>T550_Wq9[TlR6"Vqu6&p\HdMW42\%Z711PdddHK@6MX;_QCf(onLa?o7;]%!S"(]mTh_]m!Y6%rV^ZFhXqO5A.%%P^#^/?>R[n0FI6$RiRUn`jHd3TFL&q;CM3I\g;-J^."BA2eS//@1Y#sRgfY["=.[*O.&p(Te%*KX//'=>CFM%1%al^u.XK!oK$!GkfmP8V_ZVtM$D&]I3O_sM;Hin/p<nok/(QZZ+Co=,kpeD<N%:O6.&<^Ob7S5STr"k@Jlg)Yn@CLDpK3:j4d.YL4%W>B1V'ar8Qd@T0bng%AnlP.c[[H4NUUXuuZ$C!isRec<dq<YS`D6mhh@&NfHYg/<[;SLjmK#VW1A,F7Sc/OERNWlH5Wo]M@YE_lI%kptN(FkIW&MmlLh+-Q9N*U(C`W_f=)c%u)-%2Pi5BV[EbE$Cg+p4B[BFn$H7h:'@2FlDJP*1.7Cc15psVSZU*B<q)OgWhCoYKNcl%Y'Re3T"gjLm-d)b_j]fW=#t/Ei_0)`]`iTI4sR40Nb8Uk%eit"e?]7WnuuBQRa]E.);_e!DQG2ii^g/mGiO%^H@6%W=TRl6H0\\<%4?:$o>:ZPG.W1-qgITUKI0WJI+'c0Z]drGMcVANY'l3R-_:P)(CnaS%^!-XjkItJ^%7M0DgqL;0s!:l&4O6.ZdRl$\LPSf7^dEf2%EMfn,T^d`J[J;Jt7qB-]:l*L;kbZUfo=lr-IC6,#,H+]D[V^ir/%LA`b2FNL0i!";.`u]@1#$,`mj5haJt3c]k6Hg,9DP^GlV_/j%/9i*mNq0kpMrh%9S38D#;m$-hk30N%X7abpRQ[]9cS%5Db$LgTc=P1cRuk=$X_kGJE^l7aN>P"*^!55W3W<Xe@V>Y2T8Q-P8H80-%M.H$+Q+kQ^DnAN4)auQe9WYa8,$itkgJ(8D(YfF4gT;)bY,FnC$"SYHXrf*h+J1WBHgWd;k0o5R6Jl,$.23SZbh#0efeWu#"[/h)%4BZH-_OAs4pst^@C`lc=nejtEp=D&FAS+`aQV0cESg+%pc@TB!$CU4#7U.TX2f`B5,ntN&Yf^7WcPe2&^mg*8&FnL3pr`Qkl$QQc%]=-3L\LDCCp*6YaZVm5q=9;hr?_BRi$_"sr@D<nk3X_p4'%figl"e'\TE#X9//6^=Jg"i=Q'_BCR8W#)n@Y!%nb'#L/+%V?bMDa'%/io$C=m7+gZLlmNkn+&8^Cs3H:Mq?@.mNHX\RYO),oB<_Xc)0t7O`mYVOtheD[UoGC0l<=/EiL:O)fNojp@KS:%uru]>kFWDPcpQ%N.oD&?l$K):Z==EXlj'#dXe?XAkt\MZc/A8XH^%mKkLDDX]Q>)X[%;uJ/llu'UM5p<Bh;8-K?5dhan:RQ\Wio35XK3,RjElcTh/)%R!UFA<\(Wk,FT`843OJefp(Tgfl.0j,k8+#)srtb$hN,"=9Z8_7@Uoi!T$hZ[52dA)`ug9a+\rFZAa'V%5C:e&WFH7,$f_OnuJOQ%=]\;B=D#_1[rV9gHY+<]Tb32B3%1noWpRWmpD0[o&:'_MO[iRg02?7"'_S#&/;;:'imuh(Bh#I)G;`<I3fE"&(Q`!$h.l(J%groO%l!,%/I(]EHKbZXCTt9T-Td4R3qBI5Gm":5n0=fQu(GWt>S"_0n>7m.^;_W`WV7Gu(l-!p`q*of;O2NXIQ"AjLMr46Yc1UscQ9m\%%m5:ce3",&QQ'JiO0'#l(@]ii#9L#3nG7O#<b97&Z#N/AK03bhqi7P2p^WN"uHEa!dT&.dYg5qN)-au_qg;1OTM"uYi;CQNJ*MotA%89[r#cN/.<`c#GHm1/.$Z:QOGd&(VbSM&4I6UB[2>JZ*4ZH^XnPL<CpJ]2YiP9EJh:9=BZk"Zkb&b.?aa^dE4Fq(h:k<AGHeI[k5%e3Mpa[<AFJJl%ol5%sbIT$gQDb,$NSl-Egaq<!tp:+bWa0?os^7<uVQ@*forQ^jc2R(PV*2i#\]I4NZOQCIg7Ok#,aA1^b3"ef3_%\6E=q32nOZa21LgXhhC5j4M4D)f7kqF6qB+(#"TKT7a"-eoH7q8##X@*:VXHs)5e:9,Kk0=28a.i8`Jt`s5Bs#,1r.r@sAD"qNSc%d7t%F`tQXtl\;k&X;W+$K`&bFo]jd%#<L[iphGu)g&+T?T#^%QoK<&5"/5/,jH)711K?q%n(+kCXk353Vbk9:d2N9agE@Q-Q4+s%%&e[>P`Fcp$<sYN]1M!c3)=21i1+TAQT`,)^GFdb90^4*DrIG(Di;mC.Xq)M)n*V4^8:8(Vi)(Ka?Z%!!AGnq.UG3tKaS4DT/@1JH%llW+t7c%2AQ(DQnodekDr)[2pl\Jk6$GYX6ea:_"Rai5<Ktg7g=G)i[?Z4NNG?psR3X7__bTBRM`r9jCIFb\=ds\V106W;2r=QW-%H]X%Rp%Rtte.Z,.'d2(Qf>W$uK'f<S?I/WC1';e:mQ1cPNWkD3=<+$0c^qs`idSX7B347n#^*9#XoU/p`nrA'?693=c)WGe&r@ZS%Q(kJT/mE(kjh@5tdnU^d2GAe+Nc,g?9leY4n>c_(5g+T1kgpg'8:@&pEISI@,2H3%IFk.bEsuV?nA<TBH-U7A67'fdH2.UZP(LuD%rM!.HEpjbIjpA/$S,2ZL26"%\*>,8/WPEOQa?NR;)`@M227W+"V(#e5)A7LR#Q&4YW"sV,$@IRt6j?F]L3lCVSa2u+Q7/-Ele9i2%!4#<U6rg"()Zd"(U&IH`Sq/EnkD2?;GH*;%^"k#S<e##`_iWQ?@%BB0SQY]bf@s9&q1e<V:<+-hWhm1PdHIoAK3nfKj(QOY].\9G%"V#dk5oNGRIasp+"$q3+V-1da%cfl^ESdZ;he"e61UIY0naKlIM+_6lb74dN4Y+7cD?+q7dMmtAold0c`ZJRhFnA]bl4Ws%WW!pR%1ntkVL-oF^S5ZQ+p60K4%)O+kUe>'ROOWqj=j,b+.h(uSaBaC3ebn36(j)RK)\rZH`=@M4_gDl&2Um"BbqdWM6P+XA<A&F]7gq/7%!DmX8r6f:YR]:6bMnoj*%+(g.H^UkFTH+MI1-`Q`TskN>C=m/cRL1j4+?T$TmsU,.lWqc$g2u4/AqmtkQ8OVB%?2=sri&4A:&jm&%AB1bM=2YTi+@7a'ATnBm3nj2*B-*m_Gpc$B$`7URGG[)Ca_il#,dGMb8ZZ01&C?l+=G1Sc-.u;uI*1i0mf#Z4a+ZV6=)_Xr;5#p_%dJJ_SGsHoW1SGUCo%hq@Y6`b\AqfIri55j3Z^CA'cJp'*PN^V3Xd[d8PC)$[CN-\DDO<:_0_6V>EK)FgDkCTDM7QLMSf^l>/+V+D%]>DuQIm6.c)]S#WWA'"_+7FeI*ldf1Ts'Xs;:D:2C>253M>(2lQc4i";)\a:^I0>BT2lD@ctLEgWYI0=5[DJ%Gs*!)b1!h'<a&!"%;VLW7JmjbL)gD[P1`4[3_ZlN@#/aIC0j8)r;amoT9O&q^#56IK(AY[f%EH88>>h1@c?lh.i`tY&BLE7G&E/1ZC:g4p%CJ&1Pe^C,%8f\(@26:m7(Fj9DgWTXs&Z"T#.c`e\^9CWiD-G$!W'dEe^cGRppR?."4)DL%YWqHe9r2K'^sGn^l'IcVhtuHbH>^Bl2>do]nam'1%+:@25At2&hA2a9jUquRY"pL8]DBs1J>$oe,N<]6p0H#LGJa]0J!fAYIW!($&5$1i^`W4^,YR`I=m=DfN(tKUg]7ck._[;bJ]Rb\2%0\.t/m=?S/0W[.-Xr2ts$qW_%1dVQ;VO%Cl\DFUA25=a5c/p-[Dh0/-;i?3G?nkMNh?;1k-.%-FBrfu272OJSni;`p!]\5@q#u9s%2Yh<&6`'g=3.M<LI&-YU?u?jV4Wk3P_$MRZ<?".-fh3F6ZsPY*!5lWK%1BEPN8saTS#Sjq']^0\6R),<5H*K\PUQm0^]N&bb"o$F%l/2"ih%-f1d(^I"0(sA7+d:L'71Z@H?m'i8:b:pjHt@A,jV)o&5@3aG:9<X;/dGdu#:_sc;!k8tB^Stii<HeF!n8t0PqiY>[FlV>%;Ll"Sp"mF>U$[<TgAmUu?iB9YALuH-7\NKa=D18M@G79093"qg!">4Qht,C=ZrQT)0`s_1g9^'OCtI:'6@dZ-$tCtk>bC6%ot&E8%Md"R\XZaH`[>8trD,]Nh-^_mB->+FLC$5YN9`QkOeH$ft#&"Mi*<XeP"1.V#)@YF,.ki^/SRsaF6,:i^ZY=U=AOJ.Mb.<,>/!WT;%g2")TSbBg-0`:#KBLq]j(aue9T-\GF/(bJ[LXG+9n0BT'?</h'B(9h[EV%03cmP,d4'ggX#H-E+r*YfE/DI^%?.jZoYOAED3dn?n%4_5G]cbu0Le;i(N>3r=1-B_=!CIe;%lH<IJC?b56HYS!Q2a<SWR/O"\Qe1i.`Jq?)RQF@(_g3iT\%+/i(_M5gph>B;H.q"@BZg,@%NIkd(3lT(UK<)lgmaSfE[.'APVDE't7sQS&Y8=B_g=]N(rOfT0E,qlkD@;peX.,'<cHS:[cgq[Z7\P)$[&>_f=fEiDjl]F18V[qH%89U1Wf.)8;AF)uA<n#0iV8q<Ge.PtH#Q!1Jkg,_HdPb;#CG!>KYMg%lT&k??n[]Fk&4,43ds7u!kY]O4j\iG/VNdQ'FD[>[A/tJk%=nh;r).o0rM]:DLZ[A6Z+1d*IgYC?E9HDHbD*[QZJkPr+gTjl7\(8I^aYB@FcVqZ6^lrXlp\a^-_,B?i&'qeWY"=%FjDC$-btRf"%ZsnI./7(b@HBank\S)ic;3SG$^5=pQrB@UVCn+,BbNMOnq<Q#MlLA<4UfQYm-+/h>RsOWQ9dK[Okn:\?en7m#k)6lU=8GU:F&/.F%\^O)AVb=.W6o'%h+.bpK8oN%C#CRtjgH4=(qm#n4]!&DdB[V/g.=OM1?e+Bk/h,Fod#g86<d!NIL,8)9gg$0onRZFh^ls@.<Joa,%*th02iNdLd:E,aEj\`Od4_GrdrOQ5tl8tu0WLqN4PCe_sVHo[[\(W?jmH@,;Up$s!p.X23gUL\g9Id\#P4N`TD*+1eIf<bqD7'sM%l#]K3B"j+m_l-/kdf*t+T+oj&]W+Oh(,l%`HLj[ob]5^idd8^RZNo4-7F\,@a0ne*bC0lVR9cCV^Q;$FpMZl>H`-&]F'D;)]aHue%mQ<C\D[S-8-C%cu^"G*A#J3J:cD3DBW@gdh+e??,Ss7"7d0GY0.;I:!Z9>l_h2r4cW\U0SHdZCkgZ^faIem8aWR%AaMtHh][gnuD%a]K@]qqTeU;JC2%EmjN]^>!k[o0]e\'K%?'$VXct0BoZ41kQ=)B?IX&L"4790>F[!qbDI*dN2V;dR5jBejK:KGr+&bdc09:Q>GY-%-bWe8IuTm2HXq-YFh2s^lbhY-Oa^-!(8E6?]$T>8P"/0-PCEIVrJ2girhYr^;qju/pRCf:IOZBQU*hNu0[nYIl#,+K0FP<]f$X&I%6YhCFmo#TCAYI2-8_%O%4)C*]X:CSpdA0DuP9-p*^3qS>UUtP]Zg1X.Xc"^lc&smIS$LBuBsN1H?,r/7\Jo->C`^mcimHR?RWR5T%'P;?tlI#0h-F\:&PNM7M"rE3$BenpbWjpPi$Kl/^N_SNIXQ9,nL/;)ZQ]LQ2Ur8m<H<n(KS6it`fmu`hVRe+F@WTRCcD2tgkq5S8%c1U'8R<8&[huHQ1j"\DYd%&]('73^bU/(8FUfb5``ND$JI@bUoVmop*(&aAhD]p"Q&@?o4/J*Y(^!G/s'=t\s>U3*l@Y*9VqI#4k%nPdfW*Wpo(8KXI>o([LKdk#oDgDB`Mc-qGH=)unkO(8*)OZor9T(VFJ8>#)&lon56QK[q`RAkX2dkFF?lS-lX\NjLqI7m'p?(7Rj%cBRBPmBokSo]='A]$%?r7H<k1kf`/N:"$ZJklH5*7EP7MH:2+s`I-99T4<'mo^.V0d'*0orG[1sd-'Z,6pJ?8Qhij6\"nGc=QTBB%hkD438#=P\7uKqlljJ65W[UD_@Lr?VX>7]SB"sZ.oWF]?qkqniI@aJ6k3.fTqf8brceQ2$cURXE^,F08C\DW;;mq*02)i9oKV,Pk%)l]Ctdk'RFl(+pco"<`NZ*lBp`p^SFT&u@Uc@Qp9W`EHMRI)5.In5%.0:a8UPQSJFEfLsj:j0Rcim32B^tN=^>8_c??Rftd2hg#7%9t>4I>Y@F'?-;?YeU0QIfj>/"Dbiq,@De6'!]//AF#ZhHCLB5Z17^Map14`qjrBpp^[<6#\-)>)?h6&'R>ejdR0Ob$0"0ljQ'7<?%[AMWfooitH6r9HgMT=)Nm\I]-b&kkk8bnkArf^*DC724r'1m[WSE][6'LH$FF4>Z&4q3m$HW^ZoA$t"C)1PO(rHj`KTh4>d'`G5H%PAV<_p.hN;POdmD&kRRVa9\2Uhaqh[he,i,#"ARdd?F,[G;spY:)dY]KC(`LNrJoNMPC->5:OqlRTA`=WI/f6h1&<:;tOX>,)Kcd%a*tCep8mQ'b*"PDroD/rb$[2>@3!A==<mD2#P$a7:C%rG(-!*l&ArXaOQr,mODE1ujo#5iNo5_5EB3?#r"cV\_(9jrm[SE>iWA$s%@V[Jnr*!p2+jL.c\;c\T';:2UnailU@7&H3$-=IlJX5oM%tPaL$0WSk;a@m##m5m=D2#G.Ac(HirgZ\D5Lf!a`9c!t>f?m)])koY%BQ'*5cQP8unjY@ur)c!:$$SqihGrkD$:"[a+U//HT$+c[Kd92EquW#9Uj!%gjam%iBrSU1IQ779!p)\^W^)s.M8=<3_k@TReWKKp%9_n=7.Z,:$hN,!N&ehO!&18P0>JJ2gb$H+L8QO;?n0C?^/b6*J+3H,?Kr^+V198/DX=eW)j]/GfM0lV6Dr7o+99q547$@F?(0tRM%Ddm[70]/#M#L3hne(C+q8k8F-=dS*k$CdWofjf>GQ<Ksg4R-AM6unOB-mCFT"%.;]LJ6%l/=+G->'[GbpVk0="Dg1!iU@>D9d=ma%]YEg]b+R^Rek2+:7$+k!llX.g/WoBD/k"Fab[Al?&+(W*96LsmH+]-N7A-87nu8'(<(.2lf-7?)hl[.sP_`SH0%n')_S^q_QLjMB%freF?-tBJXL!6/sb[Z,UNGbr+0/ARSG`k`UPfUZjmCn5G*@g!0_g9A1HM"AWIZ$L5Ph(OtI__k7MFb>]f(-(%#I3.EP%TtVIDeH(%Yn*D\4slW_N:^7LoYWtd'V]qc"6^-I^sGnN\J.L>B,1Nl(AhQ1fCS7=5"$Ha7R^bbl4T,2Q\>CiZQsIp2;#qY2Ea>Z##nm;q`1Op%Qn]R8qQ%6aAQ?!9L)j4ZorW'elBf&P(t"Nh>qf.1WJF^"e1bL:=&OZJ6CBeU`TD'']kF4SBWb]5(Ii+NJ?SS]08B&uI_L4J(g+uj%M>;cS3$b:=@Ju9.;]d[lb[@gOWa/('L"Bns_86[n3*lW$feZ`Ymb@CVj4KI'DA4;\/#h8f`j%.S2Ccb;b*H7eYrBC>-*D(PqJ0F_%e/]S,Yq`ML@;MQ[_N'(A5TB*`GL6?3c9OH,%'Usd"X*#Gq@@<%%b_*>+!jdUn$A2'4,G6WATe%2\%"4Vm7RlNc=8nY)508HIEfV7%bOcX>[J5P'ih/'N$4K?+U'j5?rGA.u<I9Zq,2&G)Y'c.N;>*J+J@CHZ%.U3jP9kLpN8-V?(b*4i%J[U(Je_+?nL"SW2*s%A6b>?9%MYZJ6+KrC_@7N<;)i@T#-$puA!=5<Pl;>+J5@X\tjaZ*GDZC!jB.qP!d0I%;bk,>+6FY20VJ#_B;S/>HfZZ\M[Ia^fCVR*&C`0G-%fdA/&N+`%e>@1f0,Y)@q5S]>h(*4caN+1@o.NW&"=M`IH(CR3e@kXqCI?Lt2eKsY,b4KeG$H^(e6=Xq!T%@20`?)Qc"M`'?6G]lm%_!mL<o#N?*gi&KM)LL9%AbiP`Bo+eQ%do8GNW,L>#1<B4R,ucoD1]?IC7kbm\4RQ@VS,aWU;sG6"T8^;N%eEEUee[9YH)!Y?]o&r%.h1H6H?82dmL#f$c&:X^(\?IhUB?/5hDK!6O&Ro.oH'VOpb7>YJDH?,5<$*5h4WdY#8K1-7)H))YT*KtIG)88TDoola-,63mrj18%X3j3n?TFYaqn2tqM<&&9&'GI_MZt:HA,AFgmM?93YbfOj+dAK1h0iO6T3)kK-g^&Op`VJP)pLj^\iH.'AhL;&$_R":Q>-i+3M:MC%Ws[JA^UQK?Uh]e&&_Ka6j6m3%X3b6\]lg!^`2L/^@"X^tQ;'h@_u+C(*j+.DWb[j_4hfn8/<#6VjIS=PBCV$Z'o6:ICRjK'fHapN%5!2sD2k4P3Hj]^aI_Ib;]Is6X%YJ\.@'HfHl^-E:_CN"X'5rr80.UhECn,pP6mr$UAC2NB&a$\V)RQWb#ifODcH))<iqhZD/K.e/%#V/E&i!3CA(b3CsOV8>%mNB>R,?_D;8.!hC\_ktdZk:(B#B[`ToKut')`g_6)_uXPHp2g5NqjNP9r;i,O"t]rESZnST#t*PJh7Jd%&otDjd>s5.UP*@u`50!aJo[H:mR(:,(2"fMS@Qe[UYWY2cS6ZNlV$-V]"[a%2f`?2iC5^;f?@R@4oGq'Aj"o,^1e&%VIP;-Gh'Zd%Reg3TU#YbSmJDnVp6FJo^O$*8N8c/5"*`UWNYD0F;'OG>FV"1][;+S8"tI<-i-;^I]=jn!I1RX$)3S"[N:6W.:W3#%rD,"id<KJG%#_NSFn"Y8=T,K7!lke^Zi0lFM_Op=,lLa$WnR=2tms?/S#/oJ=T-2#'oIn\tcb^,5L["+6#Q)@D$c>XkO7!G^pqi:13c!R=%9HFP%AeBG$!TjEF458$SLE)oVO(%Z<67]&7kpU.T,!mIMmCklln;EEHDk.s\2R7N#`=)#*^oG6o>8u^l3-Z__EQb@q/MH-PR8LSoJW0&D%@-P9&EOpTI"XG9k[iDPW;+V[q]=qG9E_B[c-fWX>q^-#9KA9Aoj;Q[ULpLmQo]NAa\dQn1.9EGX;pV@sj@4,"9VJ/5!UDMhmL:(N%L_.V1OKc9bl.Jp#N:&KX!D1#AFgef4ohkET46l=;5>+g"L)u;l..o5$G:T#d/mU?-TN]"$lXEJIOlG`/!Ie6jj7m3?\5XOX1UTu_%UjUkl=t4H\'_*,aM<(:SLMh+i)g$WiL48G/]&4a3hDaYM[l=614*:Lp\i3oqU.M)5YCLs2'P6'!A^(]-19*<lM?>>a1Cai^3U`S]%m9cq0R8mC:XNfW#FFW+BgCR=qjU`:Ij3%?9FB,a,BJjng8%VaIH'uPpe^3umT_#2f8#`3J?U<;A>&^DY])EFdI^S)^20AdIkj$]M%(U'Ou?U:Tff]Y27r@@*IalB=nlX)rU@i;G(Y+Ca1VsLPX$b5ET+MFq%"kMQ8?#&<^Pthc\gj\b)^N-J["RGHHr!Omi^0.XT^LdUE%n)J1Njc]@un\&)/]9k3):Tgk%]um3.e#[/%oddoFRuc/Q`n.,n6$ZQq`n+NQd\(W`nbCg$=!LE8qu10$g8.9(O+TPrICf'KXsX`a%1cL)hg##'fdtljJl27<_ri%#T=YrYRfbc"nkA*[0grTIE);<igD+!WXFYg8SD:hgL0(qJdh1kV?G7J<"e]^W(<:&0u'r7b7P_nXf%%!!LI"J"8S6E<Zbf(+Cfh53Nc<BQrFZ'ifs0^"'N,`R^U5>Jna)S?Ve92)tInb"D@*6N7*+/J/]l)hKfH8s48N^IKk$["DM(8bZ<%T%u+fBj0thc)XHP<!S_]%8nR.W8lVs+0+=r:E<e:oBKN"2s39)HC(KLodk]/=/?/_^i/nhJUd=!oILMT5?l/e-jRJ3*FID,EPLXa%LcW7.&*>!H?q*QQ`Wd.02!l)rj;5L>k!KZ"+A0F'NV/<<>[YPUPhum.A'l]aeK)C3&QqbK@eJ3#lBt,Qlup"e\$KPBg?d)Ljn_N+%*XuL_"rVdCh;LW`r+3L0Z.C94[Xk]-[PFNTUXG^6#3lpjB.I&=DkbgunnHGS)Pq>bQ7Ld,:'MHUoiNA5KAGsON:\jBHIgemh6-Fa%5B&Y%q\OSS`WoMcFW><_1`$QKDAuDBmV(FhlBfXXZ[U>/(&RFkb?;;'pM-epH=RO]QD8LL\&GGHoaN=2)^'9L=%'H/&7&B[qgQ$;%Nj#nf7&(bUo@/#sG0<7QGjP=`iS6MC.`^gO*+=DA]<WRf%'GPiFf@b3mFnP54>M>rKT(`Wn5DQ49SqHQXAd#^AD4,\])VNU=h@0.%,tXkVA1AW^^,N>f-G"5Gk"7QocBg3oc%^S_HXqHVqoAG#p;k>%igJZV*R2dS)L>rji@2#?D,cQ)MU8*+MUW#YAF;>Ea@nFkcg0t\%BiLV_F;W6I:us]cZQtjjP\!p+24tGeOg9ALB7e&U22TqW$s:H>[R!F/<OB'$2(0J^J/`[Hb+.jae(\PLZVC6/ritl2HG<nR_P$HS%Ub4L&(*$FX2d"-r1oRHj;ErlZj0J6\O5$d.Jqu?I]j.4Q:@>N>gJ[]47UBkkUC++^1O,<nK7a[NY(s(4@]gnmh">W]if>stLE"0A%j/If4,e`o/\Dc3,?OtaN6ZnW>3)<?D.cSHR%lY%3F=d*(IBoQ:W]>f[36bIe=fO3RH8s0#Dm+s9G<K2l.aBd#_tCLXHA-LM?Mkj3%AN^O5!P.9NF!@H[YaKC^+=C&*1Lo)71>gCr7'*u"!F@,6mPr]&[aL9U4FDgKmF7-YJ\C=1LLE7hf@[DE]*S`*^^lZC4Y_K!jhNgt%GSW_qH*2Q7DS09@5Co9Tf3fQcN<BUSr0EtY%73d'Ssk&oDu7ft/B<(6-=?Z)\=Bq82SR`o[:*`<HSHQu@(%is>GcuEb'&NpL0[T[%(Lu-Q07'4D^!X35VHL[tJ-6pHL,Rp*X\m*iO];P<cj"WRMU[\c:O<-[2k@aNj/be"3R3N3QfG&9IJ\3s'rg0Ai`I[.V4FkjUnXF-%.oOd;3%@g']f$]3\h1+hBDn-4O?T>:NKT7c2s,pHkhLp]:Ib%nWJ'f!iC;,VkuJ/ST41MMHKp-!C:4YmJf[E2>dZ)!1#.8S'^ih]%j\Vdm]eP>_=UM&E&Hg0#7kTK?L?a6fZ_X:CG&Z/60N!JqKL)r]Vg<s5?pse\Y-]hIgC>f_@6c]@Z+jQH5XRVpdBBmZqV;<sR([[)%iPE?aT%3$Q@VZOll%dOl;80snY?0QGi8Wn-0!ujNf/^^kK'o7`=t/f^M!WONHaRY:T3fX^CX72OVC*2O`V5R;pMY_K$gUSq:+j33%IthaVT23`q?VU(>@m%:[\Tn.&&hL`mOkIY9f'a]0Q^u0rIU/Jp@X1/i>-ZiBV8/_b>2@lr[4B#j>?C.0DDMN!T)RqR@2I8(m8rY_%^Y&.Q_<.<\;3-d8QWY*S]>AI#?a8?rdefeD>:4dZ8#+B,pj1P_h4/lEk7Y0M\"@sgD7_Fg`m<Ir4Y,l^YB.0[cMd!-!k-^af^2>Y%p<i_bI.+Lj=4g7I=F+u6l_>R!HupmKhY04J0D@*nr934rbNWoJl!<LS@5kT>pM/H_@_48`oDH^1igkR6o\?4b8+iD/?;F<Z\i&06%`KTof5C=SkN4DhS9E1C6](5R39\Y-PcZ_K2jgIO/I=1^t4]/rLUO&W^*kfVZ:J]#0GHXU,H`V+/Kkg%DF4In0BAad^S\_LI^:r!4%P,ifk]IhT]>W9cI>IoPq\B!3u7]D-D4M>[a#N%L=bNnJ8Q!*u!EeD&E6X1heF*rW/I2d:]8<`Rd_c"*c$#5ZN7[d*KJ=@CEn!Du(%:AhQJ4S_1ehA=P((>mcEl+39!6i(40<7>ur"1ig;7]N?O<_G@g+(j/?\o'^JM<T"]drh^f_gWJA2-i/dR2C9.>u.Zs=KC\t-'A[h%&CRYKDGZAQGcL#>`G)p(?:UulX08MRde/WZ>dTs&HgGn1eTAK?7`JS*f+@+[`+h=dn\2*$o;pOu<RZ(PN$`:7_JrQ(FmG2,XWCCu%?+4"K/iVpO=A@CarCTc)YuT7qCW]+ka&l'fXd6+_c,b^kF;LLQiMu,Hbh/;_l+5En%67o-Wp.+Fde0QD)PNV&S*&C1><R9i>rR=5%^GfR@eTBWA-+#2C>"r(:i9DHNon(_9h:B,LAE:VXFT)WXcq9r%jau$)h<i@VdrE3=3c?cG<O-fpf0ub)\dc`u+R5efU/N9TJ;ir(%5OBlUR9:W1@e;/^F+*h4QNgh,Xmr->:BRF^?+UroI<>Y!M_X$h\(p)R\o-4jZ[!I6Z`V9DoI0FI(N*V8HnuN<k4#%5B]kg9h:LM=%D:_JYI^dK0\q7A+QTDE6d&AAH\P\]`L"T;>oU2Va\V03]&OfcY+%pa7k[(kie<ta7mKDiq>?:]s]*m2k<W:uaq(N7XnqPcO9f2AW%O*o1mI2@Mg\nbD=2[8p@Ofl7dX#PH4FP"0!WQ-l?6[BG"Gg0MqO(.uTG=0q2F^B.@JHXisU:UdYHcWbUh8Oh?S?)NsXL%\CIlqE#%=I8>L7]tj`h`hpPb_-s<8CoHfE6):"XSKq=jP93lqqI^A1@Tn,hFS\]X3u5Oh15.+Ak?O#S#d2LpUjq8(''bnkqnW%M,ue&Hs:Ec%GRn'NN=3ApA>`'jj8L+i+gRf?o8b7<MREI/o9daGP=2>RQ&fD\Ks6i2_V/So)n%QHOk2Cq$gh24#BmHu-LBY_i<GXGZa&B>JdlU*%D_J3jIPfMN=Sr&1?nA:&iRdh!7T]S4dI0+P\tu[B7`*A2]6[66ZX96FiU2'[(KqGgXYYV+KnA1T^Ep4ClYimMF6$eq.D+WQ_/OUG%2]1tk'f'$5n%\W\PlBOOno9*mFeWWIDcZ$Tm>R&<T^?"N[d'=[Jp.!d$k8Q(.N>0V+i=Qt?I?GI\"V0['J`q/"+Pk@m^gtN^)2,7%H;0CfhWdBcgbmR#8%mm,X*j8[a5)iB2a)&g]?j8t6e<"E\1)@GD:j$L?!i!Y#5'.aDRc2"h,o#4m=fGfCPll@p%IjqKj?rX%]9LR%=u7n6%B$ekNB[&Do>94#C:IKrHWE<O25n2*=S_0\gIK)j@QTR^=oEEEfZn/a[;:P0jlhE+0DjbGh8WSX9RV7XE_W=pnpDIT]o8pH%\H__2]DW8EY(!M@pV-=RL-l_2]jde:k:+uqN2^0Hg-KZ?S]0o1C:HoH?Q5dK[[Z[?GGR.iUVX*L:rN!`[ek=9b4d:^%JY+YZH&AT%IAYOBQZ8[-f]H1q:A$2K)HJRTd!0?\=+iUElo*@kII[BdgMb4R[`3HleN;*[&d<,3n9le'7Y.H%R'Eo%pNUX\"^q5Y<]AB6ell4/%;mYFWH*?'`^BLuG/;Z=6NU=;Iku'b4NlErZea?^<*rP="4hCbWV^EkSm)m8R/^h74m%M#Z3W?QP3If\mLU+WOf(QMGS`38PFB@4/%bl1Ql9fk?EVba=RJs5NpYYCPO7JD,<Ro<C8f#+&KIq\L-_NV1Y1geu*S=?_M@I%sG?<JTJ\mORVpTSPM[+5/(Ie^#-8$@[AhB2If%kbk#KBbSsnq85;?]Wp$\dnVQG4mH#XQZ"PW]lIA<[&kBeegnTfmn30upm11?d9s9d*qoABHMP_4A$b([UD))nCS-3rWQio%pID\.%5.p+Td;)6.g"4AfeR"!^lM&\sCHXn.Ek8kFg$POJdouWmqq^9'g8Z2/mdp@u0#[,1lVGPqT%cIoroHe?*`&Z"s6ag<H8MkFjK%B(%HVC/%k3ZoQdTL-LbT(hO<Ar0!H66#G6.[5r;D%DknXqi,A%@8#*OaO24^p8sAZ3oYF>]VugF[#344Q/"ZSTti97C$Qc2MrM9f:c"%2Ks&*RopYVP2<8N]EG(RK^:p!_k^<BW(NQFBjM6MQ.@HQZONhA&O-_mV:@B2#NHbjPMW\3:A!tgqk\Sgh10=MM'4q1)t7I\rGn[Z%Xn:>:cJ7'`C#&q$P;duN_j&g;%nGC$#J7Ha2MuRV2Id\E?h@-JBc=J;(e^*+Dt3D^riqH&i&7;6d-]\Jj')%D]nR"kooAaI!ZV3m%frPC^EP:!IX(A&EQ<#71=?U@Dm#:<OR(rU?gf2.<g`2rGHk9"0=bm9)n/nPLGf$I*lXi\l/"*J&;#&=%UQtMs]IH/:5OI(FZo]+O%kTbsO1U+Gb1q+Mm^JQ.W'hS>1eR*A:U6$ojD`^0QWNeK$J9+Ptb:"rh=1@kB3G>(FqjLE<_fOI.5]?VT_MR+6pD]H>%_VD1A,U`8%pAE!-"r?J\AqlKRGGR08XCo4]H,%ucN=F/&I:d;'/^H+,2D32cBrkt.nffm@V]`+:>dtR.]jMR_;sgf<=5'lYJG!4$]*>JIWl>TM%JFu+uXoW@N+*kpW^nru><q>uAJU01.gl6VciaP8S!VR(I*Ar@qmmnI$"ZZ9jl&i##<#&f%q<Y$\lrR]IF#o&i;6RTkgp@EmBanHG%)u7m!pJG5[;SEOqa>W+UHp&uXa*K2l!3a8,0'/R9/i6&-PcmfArJ*#e;t&p=Dnp.7.A-4KrF[eF"-9-Ss4L'@L;1Lo,+%kCodZV5%7pRduV!b=t)2&I\hs0C^@Q"^4W:%.k%:.*+j'KJ.?pe5X?GE(!)ZqutFg'[NGtQ?Mp$5t-2[4(HhWm*]2H5ler>O3fNdS$;2*9W!%)-o5t6ML=.pV#*q@_.-5?Hu=7Hi8]"jLXQgIdJ+P^X]MN;rsbJqXkq6htnpZ\C[qaXaVMP!+PEilT_&!1#;.S-pr,>p\OQt#]!mq%Ln(e8p\OR?]hTMb00^BK?GHIE?(4$$iHtN<.7tViqMg"j<P-kdJ*PP%R-sVd>g5!`Hi<ful8RLHI(f"A)t#o(Mr*c$Dl*D5^E,qJ%6f74]4.T'[17ijkq?Ku!NfALk?f1Dgk)GG&9!%chIdM9](VSG(J"-`+r]'?=l^r.PZQaP5Hi87jJU,Xr&aLL6YlV^OU3YS4;87JV%Rd^2Pme&(JXm<*<(VGfI8/.,Vp[O5LpYalm2c;NRDGS`n/O\ABgU=r3If0pabPM0X)d_l;^]&I!e\+)?h<S..>]hWWp+(ldQQLA,%lShq+NT4?[rjV``k<?UG8K(=lj1@"4:1_,!iEeb#8p=Kc3:qsNHi4.T`Re>2>i8r'I`3(@s/K?bqRq>`frMd9Dq(eoAnm>BY8le5%^]%u.='7c9]meLJGH8ToaF/HR=5ik_O)J!9<nja*UYWuBZjO9<c;g3Xr@V7^DeftU^=TQs%6JJ#j&a6>YFd=Wl[Gn,b-B@_p$876%6k+;Jp\OPAg[0rZXlcV[Xa\OnQLu,2^XqqkG3)QpqXp#&HE5qjZ3T"Xhs/gJ2Lj\4rVGF:2_j,R26=sR/m&\>ogHO0]mfouoc'Qb%2(sdQH`Ne%;&nh,^C06Z(V&)#k=RL[e$uu4^qG1knh!AHf<>55!:OUunSiU$WM9d%pYfN+KoV+Qd]mS1R,IT(oqci`Y0d"Nq#6-E%os."eF*RWTVp0uCMt;1qg@hr<lMN;b$<SWOQ9]kgqR'qu;js_!&A:;34#pGmqX+")g!+lE@K,hc\[FW.c::],[6=Qfn]-j8l*p7c%-fG?"]XGTRFg?/Uqs+*=jhJe4bo9IQk+@/#nN5CUpq@GYHsaN-Cu0ZI/s:_UpU?]$lUe>um+d$a51hmpr$?U[oB9uZlp4SRcgQ=0%&aZ*<r>`HUc@,sNp2?K,0,J!>"KrVbB7kC5;icP/rE#VDpJ7Qji'[/%>4CLeb`e6SPDuE&e$m)1S=GAL?;+%bSA3B_:9S51Tb9IN%6Z)"o`G_BW+)O4n52UhZme)pg\Z=2_*ad$-r4Fiapt=63X'^?M:JDQs%qdNp4Ij,)(KV\!I"/PQF3YL%:7a-:M'%3)P-FRp@X<';%oD/"Bi6'FpTg&J3<JK.K@=@D).EY5+-5Z.;`SM>kp)_'9GM4C%;^F6.p#LEMdrG@Gpi(;(p>k;nid<W7Nfh>fYNBamf5:h_GOF>p%2Er;?$aq*>4?gHkT,sYGFjb_Wq<u?$Xo..I?to62Ut-eT#rZ+#ms3/bYk7-mThX4?DkGaKI33'].t=TY[-I94c[Dq&]fJ0#o3jbl%\9.*A.W3icYH6n[P7+_+DhE4OErO216^6Cj`#i#,(K[A-P7%n-D,8IU]dtE,pc#ZE]m1+@D<<!#YCpt4iJi]Y[;R.R6B(7/m2J-N%-X<1d%J(^/T:Yuf(VY9"QChL]V-+lkrKq?imH@/^Hkli@XX3rRTf?P3qL17KDf!bbFe,/.rLN,#fq,[+lSFIoFj^3"'AFj%$CkrQ%rqK\#9?H!tp%\:,l0A560Acrf#BsNl^7Tgp5?nJCI;n#T5<$?k0R^YqZ[MRc\?Il>0JQl4Bu0huDYU4/6d,MIQWp**56Tgb(9cNl%lMg9LLCnFk9RS1G@sL'&4he>]3\2@[o`+FDH2uZ^e_?7B!H01k\'plR82uOTb3n>9Yk7_a>WLU6<"ZD3O#Il.=YA$WQ@3k1dKH9u%(MUIEbM/(gBcfQCJnK@[#I"':)tFGDS>F8EU88+@IRNbpF.)sL2_X3poC@I`ENlgZZT'[FIeJEkap2)Eo_%5?d`7hYYCH@jD0PU6%7f9s\A64`#p$.BP\9>2>bt^R8aVc%5ZVJ6?dFimBP9SnQR,5K(mHFBBh,!a58f?TgcuJVt;lttGrV?GuA[K.3EB+1EjXXtth%'aO%(,8r"1;2?oq/po',(dt`YCc7OkO,GLoHmQ9GNiMm//NNTDu&X-jF6q>ZO+7b5G#1"73:O\l`2?/mZ0;Xqe89*De*.L56l4pmO[,l%r:gtk*Bc+RPL4aF#kR#kheA+IIcdg/8*l#qT>&*\nj%&sLRk0KX2)9&TC1[1'pUffJ,_Xr/oYS"p!OU[\r*3-\:*l)QQ>RjUH.aj%3SpCQEO%!gJ=)AO7$E-q6n9oL5'".E1G&ln)84Vmkk#)mWjd9*!2W7H[:Ii)hopue\[C?r+0n?M'VVY:TFee7++X8FC\@7/F/cc-%7O4,V9$L@Tg__Roa"oCg>/@,)RHo$aQEP?H1Z?@Qop^tbS,4$`bYq[>jh"/OEc?N)6QH&-$eFe&r#L=.Q61hBEpp'.YD]l4CG$;1%A6FTt<_X;C&OMC*IoK\O\\?Sn7&jgr0.1[6.ugUY^MnQC@f,C!1H5,+FKa@:75Xs7NfU;,ImRi4]=-BsHdD'&[UTh#mi>kC^8qM4%f8`REF:bA+[:A[#YF\7b)sM2qH[?BCj#n''hZ&$d\iR=18JZMml):]PPT3f&&$lZ&<qp>c4FD3+?$c#9p8r:BkKc1@p+E@ejjdTL%Fa7=Nc\".qZGZYmMtm=^/@sqd(-SnqriNjNO2lX\DV/2GJ!uO_5.Y;h9GZBimJDB4`Wn?YV/OPH.lbpcIeH"sd99eVb?0Q!kZ+t'%no<?a^R;^cbLb?YBbR`&EccHaacj00mBNnl;bP&"$gY++q^:ft36Ak]&Nk(SBb/AWY4=(^qh`dS:S6/,0!&Zr.+J0"+2<,hhtJs0%dO*:P:<Ot*f>']!5WlO+MRQZJK29t2ek]%YrLU&[hJ#d@>Z>d0#)&Bnp7f^(<>^SW4'1!='8Q6BU!^ZH-*Ml=o@6lDR5:)LciJ%O%btoAfbO'1Doiq:$E.+.ST;0*plY(Vm9A^fhRZFW,]_R-<3*LUtn:#N$PY1UQlHZ^3e=LU83.=K=RJJi@FLesmgc)dBSmjrQ&uf.E%r_^19IT-4W[b+=R@<Q8EbtgR57i.D*&7poO===]$*o`qnp7mD(*oPtEC;Vj,MRPTUY9n`PD5]I9EbA1qJ8*3j4n*AYZ\c/u594mF%3XP\T!<I#)EXH.M;]rcQV>st3h5!f_mDtcMl'mkYga'g2eKhNX9!=8V^/I:ErZAo1,g9!7-Xj9M"T-RRgniC40M2*))6>*)5$:Us%A:479C(ieHXUCH"n''WAVdTC-C[1f"Rf]1)O+.gA`H$R&5Bcm5f$34IYQl]3-Fu)X<m+aeMd63Mgup[/:<a="LPb8U-EbZGN&HX&%emdC"Z8:'Z)"cE:>E']9EhPI^)hk20(=%,>?t-_39\>j"q[_`Ic%f:$d@6b:mX)+8TQM8E_l8;p)7"hBWNGPLo-H$8gmaMkDf*M&%meiW`:BEe]Hu_8s\Gi0H:N@^%;l'.bG\eaF[5H<ja8.^!IleL4a0'i])3)[g?aDn?XDnn8o*YX<`,D<;LQ]^OZhDK\C+A2l=R+Ri%BM&`&f\2`3]NtCk5^dH\38)p2L](9JW@[oH^Lc<Qf_Q3kh!t@?nE5**RaMJZfY2BQW<$(@om7*WHZAWYHc'bEh,1/h)8"8PfNri<%#5$kbGq&A\jR)`D[<pA<ia@7^ZnpXubPZb<#Ob(Kg5GBIp_+-FWjY)b9XjcUn4L,K&k<oohJ0GmV4Fjq-]r6i?0f2CRn:f@Q+JRG%YM5+UqnG>J?*u;;,b-T5p-MK-WPU'kaN+%il`W7^mbR^.0R5i:/cU%T`ThWRoS$=6:Tm+8`9H?pC[5!A7$W#_.Cs_>4[iguW7Un+%e@f#]@4olmDUhnI&[F4C&u0qn-+N^0<C!#:`,ACCmpUfM@&l&;A:3tfo4;a9lC;3cNHtHF!NDF.73lN_q&e9Ips^)0/\\MPeZqIf%ci1R9kr[gdf!WY,J6dG9n#,Wl@iqb?OjZ3dIgt0bc=Xa%XZSgpPWh+=Z:r#o\aql9B%t_(4Nb!c+'3@%='EAnCIQe*d*pI:'6EQl%X&BGoV=l("]oiW__sa_9YM?YZoYgq/j!LYXr`!_&SKfLtFV`/&L_TW%ka@VL\ilf0.:'m82lE"VI\+:hg^iQc@@2$XiYR+#]$T9F%=(!T-KU]j5kK]*9p;d$R?3Q[D*^^M/_=R#jS1:H2c+DH"L!lT@VgZS!?e\o\U=E1a<QVC,hOIs03tKQTh#3!`TP*]lJQG'BbV('`%?AYQ*mq2-GpZ_U58ZnEkZ`gO$GA#B]]=@.nWVSc\Sp]0#5/4k@/Irr!aFZUfHV5^J(mmk?9t7U>H/!.')`uKn;A;iTRbSA`n#d@,%ppYG2?3L"h^Abj[L,1HI2r<>QT0@*9?ZnV:IJIh\)Rsi1!VBXhpJ7h'e!4\P$K&)rZc'1C&"``ZA?5("aM](*7"!dZVmitVD<qL3%mETGG6Ta:YnQ[8Z`DW_WYZKEI#OibKKZElTjFZ'43&uIp4AuAcq<KQX[Lh;AL0l%>ja7/4Z?P8OIPihh^tI>'o<5@RWe8K<I+e8)%XFKj?ddS:Ooh+Q8=+9DeFs$)%ri;N#IH>RWFK."DG'q#'F0E=QgJ&6&`0%/MUn?;Nl/eGhH9#J`j)h+En'BW`c`bAW$=S[YPurZU%&=6^W"7nUE>C5r[DO]8.4.Vq"s15EpHuIlUHbANu^RG'$GAgi0^5F/iHqtX(iG*HH.1b`OH,@l`^7VdtJ&3qO4^XO!M_L_)%4i\;%U+&\uZU5(I=IQMl\0g<J=.4'j"ICNA3l'@r-=Z,rf$4^Z'Ml1hHhA%.?;>E5b\RTdITq9.$G3k1Uu8RD5WX3M^G7l4C#6V=Sa[Oi%Z[Vo9L4!_dPWpGBdHZ^h'LFb>fBIAS+b7%7p4c\+=4]ktbq;\XpHNjWX@<DTgSkIXWU'0!k@WFq\FJg<9^h"D7*kL.FS3WC:&.Do%dNQK%#[gH#[XhSR;1Qd"=:t7I0"CX8>Ris$I:):b_KPs\+ku<`[/0IAXh"dB#juQ3h(\.jUIUVa7"g\:>j^9q9SBfTfD6\-p?'7Q%O]9pMms71.ph]'VjODoK<6ki!>6B"V2.JFuXN2"!;Y=Y^m4('lS<HRNjn+\;la'ul#M:jN,`M64D`Q<8*F&eC(@ftJl"Y.[dd?Cc%)63K/&;"rZP?DJ:!'jF!b-D'8H@9@[@T?!m+ln\2iH1>L'@Zn+OG`_"r7MNCmsJ8u<Zc3D`&5?^)os*]/,Mr3n]2g"Pkn"FG5264%W!u21qOr`Op>GJK3mm&lhn9o`\b`Er4/l8qf&]W,ctbE6a`OANM%KNh*j'm<nlUS%9<I#,f2h%B?mQN8i>[>=MhT@%eH]H!5_lnq%3kdCo>Jf&%d-Y2cLPKf"X`37f[7s0m@qNHf=Uje+rt5N+B6VtFK:Sp`db@PE\pC]m^[uC%m^i4urr%AfRpEVpGg4HEMg$V6g,,Xm%o<M'Y[\;,4kTXW1#G5V"mb*utl&TVoHqh'4FD/k>r>E4]S33`=7=0oL/jV(XE7t3E:X%P)HhjH4+ut)tB$mr_o$=Ku)_Z,"qocUt%T7*>:GlR"7FI6ErO%P]#&DGDfjN?M#.Z[MQB!PHVmIP^(]4tf$GfsiH];j#_'EPH9qXW`cW<Q'BUY7A9Mht\$3kLs/Q\e5<qC^AJ%Wa`t!o;8$.q)n2aHQT/o(?RP^]\:r3g:\*+G=fuUA=_6dHff7aa&@>M4KJi7ZTq/Y`8e_B>+Xer'--t\0%S&1ri33beKA%d]<W`i%7kKKWgI%&bl28\^*1pU)r51Q(WU'.mLS(*XDjb3XXd=4IV(FWLS(dQ'q#*@:?f:\C06Qn;/(*Y(rGD/biJ5HbWr$a57kCCV<KT<a%*Xbme[=%",=:4b[-mPsoDGk2"0[E_[J_`af#Ko(uc,G'T3Op[OcVq_ALWn2=jL&#S-&C!-WH`#bp>^:0i7AEQ9'-KQUR_,adTA\m%`bn)q$9Qb1\O+72frIj4=i('EO"914le8p"62.Rt\J9L`g"uuAK]2iilaOt;RVQ3/6-#I8A@-6BpP5648T!jNi\^7HSS,+h;7CRC%[T;+OBHZ4[VL+31;$>[6f/ko,msKBLDI\*+IVF.<H?D=GqBUL!pA.Gg#C@CCn*E1Off,+QfNWj0rd$0qHZ;!kJVKf]LTq=(<_)DX%,O73FAGp=6cDIL\f_^#V>1I4UGAgbo>MZu=j4EZ;_2Bf`"t(SiGp(9%lcm-+o0kck&q"qHc'Yp%#G/Q+bUf^`,qah(dg88;]sJU#%m-A;Jm9*]$kn^FMc%aiKCoqAtqUa(PS`WoE8d&&8U6Z.^`pWV4g[hC41o1^phcP$dG78P*@E+XNB=Cr1fm*;!P\ma=p<(EEm#o&.%+(.WV02t!B2?0)@<[HMb<;WHIfer)Rhq,`!rBJ<QauZlCf'd.SmaA\To^22:>qS5Z"sRL"qJghbhT&^9_j)+OQWa2ZXh/i2W`<-l%O?Z#DXjH-LJ%-)j]S".s0LL2*<$pKY+6Gs<cXq7QZj<pSU/'O9K0H`V,,a_.Fm<Jblt]J6*ktm6KD`,U^lCX6LJR(k_hG:X>?L&n%G00J1Y&e^XgWp\W;qbEe9s$*QI<k"9q%2AmB8[[kE2LjmS#t")N7`HW>fk[u7[e'.?-T_grCkn^ak:Ss%e,Nmj*5ST%mA8r8#g4n%:T!R>mAEdrp@6EM2#CAs=]g1EEcQWpmr^b%!R'seg3s,5mqt)-Yl-3"hR;AkQ6C<r#2+`el7Z3[s":%[-FUlC"(P]EH/kt$2>+bO%b2hU?[OWP1oqAKLIo@6BQUfCITl5FP%mI2ah[olRZ`SOZ9rQC[H%#WtRntamm`'%F>$^gaj[ihBDtD.2oZGLF?MWctcCp%$VR)DO%\%\GXPWZJ@i@ZpK%d!'?\tJWsZPc8Qp(JaF_eD&IB0X+nmM.Tls(n@*$dBBP48TBV'`0rdjUK]PcKF9=$[L]37,Z/mhQ4.g_/`L>%/TC/IkhKpRE0nh>7os=FAZBiMMF.Up_@&3M<&)!3gMQ#*S_ZBucgc=ZNP'<?B#AA*BBf>;D]AN9m-.79r]%Io*AhN?OVblg[7>!V%f"Z-ahaVKfG\5\_I>d".+S0<UhUmEqX91gi*o:&&XLDprJ3\6CX(?9,B](Ct<^3\@Q$$5XGX!;4:p3uF.Csirr-ib\iV$:WQ_`5#%PZGf24"-<%,0Lf6rnLJ*A`^ooI'frR[9D.r,?VFF@'-:?K8@O-kQ3\7K83JQaSF7!3.;7&1H4R_NNV,_F.IY"D[Tp@N>ooalX=ns%`l:1#PKd,!If%=UE8g72I4dT@O]R\=,&DN&j-KVSZYA9g$[6OVJ%?rGh!6!";&$qF2/O9'@:NkSZY_XcT2t.']C>"-K43B);o#C(%W[/`h6&QiR\uPGj)/G)DI/-eYBB`So7V$R@7P)S94;UW9<AU\PdVl0).mH.CCN&*1kWJW?Q.j;\>c0cA7/PZ;Kj"+ECsCG^9WO&^%W6oO5$>6;s>&KO4d.A(kGkV`fQF4Zq-t2e"HZ=,+e;sOM,>n3+@s^5*X\,6gX6%J1DU!NXpipB;(B;1MJ[NJ^:U55W/+/t?9@Y,;%,JL7j5IArY^`qLD<E1:2qd82`>OX+sp8`,TTC0-A'6>qW[rf@1RWk[ecfG[56Y8[%Q[k<Y-[sUs_3]Gkm#qT)=ua0X>q[F'$P.]e%j6:OQ(6TZ//8=M$iQ>G"gQU!uo44347UCKV>RRP4bV$mh0:jineNYRnDt#`?9GX,UcHk(.\^e`UT6JlThjo/Gf8+4cI'8rWgRC,P%6_eC<@X>CnTBt>_S%Y#U4hbsDp$Qu%AbFaPQ#@VF5<[#;pcS1/=Ut-'gNHlrp7nnr.eY2tI3gCZem<+9Lfo55L>8,^95XjEPdV+Z%+Y!8!=B9Jg0.B)7j/8jR.Foh6lD4":CYRkG_bD]-l`pNYF\r&OHG'mmn!iXfCZ$UeIp2kl`U8O(h\.#g$M2O:8QB=YI#S_$n3^4o%%:<V@oe43_)%Bq_`4\BGQ-o(Y7ZdO2X,L*Zhss/V7.I*9%C8]#:X=M3SNJt/p>t&49+)Cl-C.^$L>hR(:VShaNfK\QrSOsShhUC8%8&*>%?,*bRqJ>Qeh)nh)3rJs@kgG(6$YH5!2d\e_UL&8TDNXV<`R^+;b>3&)>lPf1/[l[TfD[o4$SuW=\(;\0VI?U?J`6?>Eb>2j%!Pe&:c?a%VFa1g&(X-/k5<?>r^+oXqk@NB`VjjX[n9dn$nVrlZNh5*63rO)?Bm]OGrUnd30:q!+3X^Bu7Fk*H)Gh(%ZT_1)1;8q0%ScusUD`sDLi;$[__8=Ai8qO*9c!_,T*g>G@p7F>n]fOI$#:4id=VBMr+BU5=0pMn9/-qP_X@M[G[JA[e]:IKfo6kD*e`(N&@^e\^%#%bR`dj#Y12^ebt<T8gg^^\G:ALsSl!]LZHHIqm^Ktn.XB]>SA<X@L=Lh?YEBSF52NbJ*INDp2=i.uPi"="T^[tT7A^m128U:Q9u%5;E34f$a<gZ>;-QRS&l\Q&<[AMH6=Y9#["iN_79[/'m>mK1_WCqf\Z5DrU*RmeaPSZD;NMUSQ>.?M8.i?^lCZ24;;#bsr^Q?(,-Q%l'aT826hRPgYXLNZYQDt8PZOELB^SLi2>sfr7!319;Ji@@Tg3aiRqQTO=)MiBM)>^5?ac:bV>4o[G(,@?Z#!C>jh86\7?N=^sW;!%3h\^-STq.N0=[OQVI3jOAP`VL&t%<h-NQ0"n%2.&me/"Or]=)qV2V6WEf#^Qra)f_N)RNr]Dk`PCV;>lK1Tb$pSp:AcNhu@lpu]Y%]lB`t90fhkea?Is1bmgfM7l-Kn=mf[m+%#+I<^7i^B%W,^.fT;Njbdm^7L\'nq*q4phc3=iecokA]3$8q]=Ldku9i13c.^44*SYZ%@V+rqmogC>-O9B3Vp\S&GP'm*au-GJ>W!+05M/'!@<K78q01.hpgE^Lp<to@H[Iq"O$3@t163HHNS'#YP9]\OMdI_#f\Z(j6uQ]?%#:CgYojO!7rJ'jMnPo5CYoi/(XiB4EDnG:nFdn6%9cOQhq/D5!2fWppg1i=X]uErn`gS^6hN&$u[RU&8-@VMH3/j'CDEC5PQfc1F%T=SDP8j3"Cji`;MV`B002)0CD`ReaO*tAd,T)mf*gi"MLNrG'e#?Hh3*Kd<2I[lEJ/J!<$%2<r5c_6!+kFS8mTe1_453`)nG^6=_%lda02/uf-?fugrsmcto,QdU3K\?b?]ZgZq>j0rdG?b<_4e2%pWSP/tLWS3W67ib0)p88f$k(tNL=#YgLC^??AY-hq%\'!<gWk_lH%o&@udb+fs&GTO?*FmD'=l3=ES<qG)^bF:*P%qU-??eOuIH;t3;eY8=1hNt]hc[-]ln&nq)Q02nS(X3>)B?AsdZF'91+lQtg]"tgu%%D?5bUZ_1$4<8(cdI[/$U,,]nkH#EnGc.CP2,0B]r%rrt+3Hg?:5RWt8t1f@T)WQY#h5-jXE>BIh;qhcqjtZ.`o2oPrRoM4?dm7i%GCJ\@F3f!2DH\d--hM_=NiO*Kl[A6ddSMN=CN#s(ibm*h/+UU3fBiL/e`X!J?E,ODcC;@mjknb/=(OASGuOsEr7*s_nRICtXTS.P%WJ4g"mTQ75T0?#`:^:7e)IiW:l$^E@2t-;b]<DNI'(rB+L\Ac+MoaIRU!3_&5F%()MnWQla%,/Mei]#_O"[d0+2(F^CiYnTQ!6uO%2"2-RqPQgq>$=)PhkhH%/Nr9pcIq#O6u)&_:#];F%I$m&rL:ok/jcnX;!hV8k=)&U)jo?hiNYgQ'tcl:FgH;,$u%dO,Ec,DpL\+<%LY0]8fUMLc!Huooh,N)\0i7:rLrs%?YC62NqPiUch[/N>U9qQTqJ_ki.:^-7%'p9FB)Q%O$VJkZ41sf9Jo^_fQ7$PU9AL&ppD^k2%q(\b'l"QhR4$#J'K*RS6GE0CbqmH%chkQBln<3c0OT4=tXLJt5r/sVaq'?&ak?qbRcX$rk0CA\+R!ufWH?-InmI9Jsmp@/4rk3Co%UfS(MG42S@\pd5CI4rq'\25GD$/WkSnu#Un[baXfhbOBA<onh7rm/Nnr&;9q0#'N3rroMeAKQ@p"L^hkeA(Rt4o+'KOT*S&psOdf%Dr(Ya5,!P*'6+RQXh_mFV'HCP`['fF@h=Q!*^uEY0PSM2.5&S*'XWbQ`0]I-D5D6B>l&Yr`%3D_'&tN8jgiaZ:KbP9_`S9['Z@,P%O>df9[_a5J/fi*86"lmS2Sr.D;,JU@1c4c'PIH]#b!=*Q8X`97N+ljCQKkNJ<Fgfr)Plq/JPUqSoM@^`(L\gOR8Dsu1cEdW4HP=r%IFD^YP6LMZQF9JKj0><n8#]CL_LN>g<h:,uAsToX37%D4'XrrJ<+6GOqO$6>12.q*;JdsDOcaR:Xk\*N7'//)&P,9k,foJ+0Q0Bg%JuO]?FpeD8D*F)eKgpMn_lH'R87Y/!R@$)E0MWKNCr1e+aiCqG;(F<HZTN,n+tBt3W@Vd:$^8bA14rZgTTuDL8buYe>gkZqNgPLu%%:s\XC7M`<1s#=>+N(^BA>0?>86T/ZkPApkAF`\3Zm(XtqUJDe,R)rDEl87g-;0qBnn0L]S7`F)_Ij`(/o$e:cM4E`8K&nC&7q;>%bXgBDjPrgra@HY5><AT$:42KDQY$:Q>Z&GGQ^456SUC>-jjMAD40+.BR@jIBqhRbUc,<@tBbHi/5e=c`?t=87,\2u&'S<6W!hGKO%jheZX.`c/B0pjN:6X@2ig67d%Ds']ddh'^Vau!Y2b`GugDb6CM[>U?PEks\gc-df_1!1gf43"B6q[K>`aY>_0-XiA]^)ElBIM@2h%Z:IQS$-*cc?Pu0Y5=oKkZ=36;SBGdXjH##!Dk,K^o2_.^i"fbZ+9Ha7dTRV*jJjV#d97aO&$^D5PfA:FBG.`4'`A_T&Yd$3g5=NP%T%\Sq;IS"D>g&0!c!9C4V?B&=i],E4'd+frb\t:R'@mQN7"uft*Tb.Wlu/tP)rhG9mUI-Jr.&pOkE=>7\&gt><g4EseQ;sCad(2h%3$`]\/K(36FMZ3*P-S7BiZp'ApSnP]cUhBK7+QpSjj11d+N[_qN\qG`OFWT/g!R(=.1HLgp]aH[+Oc<$Inn++H!sjOc@fun@W.[Z%+Jf>NA^edK4'&W4/WX`i-CI`Y*JBi<bRg7E6uB*nNE;#tN)fia7g9O5\Zf(a,n,IC!a0?)&3(4Dhp\+d=11n$.(9Je&=2:DLM<b1%-u]TFonl/lEWSeM@rCY!$A@M>0X[DVB`V@iD^p5OKuslKae"C<O<e=FHrSB&RFi&p]+DMWa<ANd7[[F`$h=E7@?qc..rWT0Jg_>-%a<1T1#]TR\dRT"ML*K6b6RL()=>'LbVnu=eQ8FOFIT2],h1R28AET'f@*FI$1E%!cHn#705dD,YmB(b.At$ZffWM%SV5c[28E.A(%7OaKe?PIL>0dS#9A\<CaG-!MIqaBL,\;\\17aKOS2MLj)Ue$k>SB.$b]!JS3&/Y1FQ?1tDcBEouV/`@cia<9pdS+=69'M&$on!+%%Ul`VXP_pYVpo5=C!R;47+Nb%=5u,u>V[V]BM^&Wq\1Z%1jhPn.SEj6F-V03X%q-#L'*=c-_N?2,Fp]ogS=.fA%P^5o($8)]P@Tb%%H)@K3P_/k?aQ`t+IR7b=:DG5!h-li:&=cmtk5l/LQ)-7'cqr`E;[%;p/CWGA??KOF"%r%ogRl)FAhFS(qq?8Ykke^.PV.m(]G*\-%8()>)q9H=M7itMhJO*<DP"8RQ)&uUB/p8(?LBo7qf[*kkq+%hF;l!Ydl$NKm!]ps+$MI=D*JURAgL%l`oXY`'_.;=jU!W.qZ/JRs%OO/A0dXqY?%#Z>UOo5hm+;s8R=V9>W\gOV[-UcXQ!>GlDo8jrN--6NO<p2a/RjjaDg.#c22gOt6"6SZ<l"pjbQTHlnd#A_J8I\h"%.%jt,A1+gIbc[FA3AV+EdbkCkAY^GWa?`MY6[?VR$G.Wa`@r.sH]c/WF]r403"1c699IC03=/pO:j6i/2$+T:7^Cc7R7bICHC.^.%$`[PhA=V*_Dn-UndTVfFTg"cRAAZ-)UOsH(F=m`+[_r34.>Ai#XN8!4Cs!mq_$_]f1(U)nB=$s4,aG]-pJ<>,io-A;Z8E:Q.oHt8%=J7"&V+h%30etDV5=O)AKOM*+1S!ob)C["l<;.$"4r6QUV-*h1+/^0)5n83g21pc#B-^@-`E.%?Z7F@06tJK22BG5GM[1nDC(%>S%W[isT,6sih<I0aW`M(I$1^8!)1"ArPYJMto;CZjIl@i>1qe?/GJF4kuahCB2!G\sGYJt`1^k@QHVClmE87Em&W+1TM3=<U%0Srd%%";=V!91NMcWXKVOS/-?Lc7q\U%i/!%BqhIn>s_)E#pLj!,)]H@aDeRS,D.RG:t(Sf;!*Z_Psr'?KT`6R!%6-"ALHb5SR*;bmYUVI%KPQr_MpW6U7Y0trjjecVZjV:Xpc[$4:\%2%2Tc,5LFeBTb/-QC2M>:.V%%g7F&4jf75L(d7g9ChQmAo/n:qicqI0k32'cNIi<Yt`%)RL]Zj?Rd-)^RI*7;.KB;oMdn=\cu'`CLV'O]`)K6o[7=F5,OIT'9kn$.hRB(TCd!Ohmlj]>)Y@h/MWJp[Om5kJ'2d3rSpFcdATL%hk,qAI66US%WF*=FYJV007-Ol0>iWT-%t'oo!9`<&Z7#*;_EX0M+r^RjJ!q[UnAOG3[RG$9GSF*k?,k`U]c4**G0ID"1!*/K,U4b%<;eKa'((PZ-XB?&+ZGq/eA0%b;ZdH7,#_AHZbNa@$>#"j/A$j!D&-%dPo3=1CgJMuC2ZJVQoM#?+i]BS4(oK-KIE<jFb[gaYUPL[%Bsp@N!`_X"J#hOt>/:Wj57>"(j9rQ[!PBN(VUIqe0Otj["!a'e#f["#NbDgW5*fU-6E;`Pd&s3JXN-o'0(P6LM;Z168]1ih(jBCT%<EE^q:1XV]4]6E+cPVbB_r3/ek/8'T8kTCKKE0^12iee40jQWAOP-Hnh,3l&03%k4,Rgb%V?q+#d9[/_0>l_Y`#]`[<Q`KRPtd0.%KRccpm;NEU%!ESKWJlS*OE)cC&<_.+r1hRQUh*BD$=+Qca^H'=69da2"p$tPc^le)<!m-X!?N^@AHmRH4WpUS\\*>LoK+jum838q%`4G-OqAeRhk?\gr9VfgG<C+T[Ch7!!3H"%(g/B&jEga^5;:&uK@?b?gRg:7Z2:@@FD?:kOctt1Qi-^=f4%^+RTaL6F[135\m1A/h%cJq2AI1nnEMtn<jO%ig,hNDDt5ghUj9O_&4+bX)J@;p+;p9BZ2qc'T_G&Lpt_,s:J^e$uJ_"@9h'SLX&b?M>]0emfM&Z(UD3^!g0%(^hAqZDY#73\@56Yg*X/9&+g2Ht'`Mo*&lB!rJJp8moU_:Vf.BSB7A"cqIsE*`YeU0rI%X)VOU\8Mhll$mePGRa7uEbC7M7Wp2:1%@<j5<^[Y=/JYfa_b,V^9HXNBaf[7)'@?r3=4>M_a4Aqq;N^]0X0E?+*nuH4`aMR-<)nu]Q#^m%m.K!H;7Mp\&@H)uTltlB__FRGD%YXfrqK>g.hSq5I&D<fK:T;#1%3%PQioVO];Zi^%kAm\O?!C*A,<IHi\&B"O+AY<t!0#BWc0bMmgi5#JoJ<<66Y-p:]%SV6_=jpT(%VLASN!*YG0%Of8,GU?LT0EXJ8pa-CtB7,L(+6JtP>=luR=>E<edBbQR;.TbrO=&9.2Z]dC<]Mj*iHgeW?KEk.X<eu.>btdC3*1tW%>cPRcc6U6R5iYVb?isbhH?fk]\KVhX(Jg83A7dTsNP[IX*PnuY!][l)GJpJd8,J#YK+T(iMpHH!IP6Dl:BCLE`!dFWQ6kVi'Llh*%1K`_-."-ig+J_e%KY4Nt_$LREe-IL$YD+#%1)Gf$GR7WX"ZKZnj[1GX;%S@8mlY;=,S@\.H&*LdL9oU0E6nfGSiS3mM[#%m>sP\0%.:"T`[EB_e7=&.$1fXQ+lOSF[Z*(fb31[CkP4Z+=3?,h>4?9Lp2%r!'a%T,HfZ)V63"`*N)-M4uWl5IOD?e#8^`OV-_^(X-)!&c3%aC_Wo][_g7,Z]]7.XrdP_FL3&]*X'Ki"/#;d!E]BlW:>%MjSm[,Z]7(ocPeF)mBt`g?]-2/t2.^@W4=2YQ-Z2gfb:VN)R=_7";+-%)d]WjiX4/a6kfadTj&4.[WJGV;.R44'&8?)hCrSdL%cc>Bqe\UH07XhN?Q;MRH^YDCt/krq"bP=JHSSN\XEg>(\!?>FE0h6-q.`$%dnf*Tr,&`)Tr:#t2,V`19b=GL/Lpr8W5=QAM=$fNQl$t-H)`A%,0qSU$M6NV>tA#aMqfq)IA`$Q.aJCPLpe_cJfIk_NZ;b)hb?2N%8M,QEX@F=o]$tTagbL]K"rV\F`H(H%NR`Um'!tcF7g-;8&aCWu`%;gTJ.@b]FcPQ?p&h_W<+7)6`/Tj-.j-$&'?8s0LolRq2Uo*e%s&,Fr3"o\JOO`@/3dtQ2E&)<nO\bSq)O7%#LoG=+82NjML'4W:$S`"T2!As7\!<JL.82!J%MJ2SG`!mdcrcT6",3F9Z'4_dWQG[K%^\g&?OU7:a+upq):=GS&#2<0!G>9&fn5![hal%-9j,\a83ohIeIYR/7-O6@P81utN7BqXs`nFL9$nN5]:/_`q)k@p8YTQ<a0I%8-%\:[m`_n[a&6BhS?d8K:JL9[Aol=frg4Z\Z5=_bj_dL>-Z1li;[_m\8;QoENF'c&&m0d)@gg:af+C2^rmShNioBJ!42"Q2.8"*Z.5%DlK8f@Y*fG7@0jS,=RRKcl@Xu*Bnh36j#t:U(bFiLKDIiFTEL;qD+`fZHnn?5RpMA'Y<dKOK"D3MNZ%`U)GT;7q=KBZ</\o'2`\F%-4",N?]D]C;GUJlM@$_%9[1_ZL)CE9K'gadXqIo<j0KPqC/G/G?)T5c&o'olgt:[K5?XfUM_lNm+GBnGd?$3o,P6Pa9qJ@o:ZjMR%+A$C?J0>VF7K[`)YqcU$fK9QBcAF4]h9]9C80(rSE_t-p)P)Tk/]nbQeD+U(Te]K<VZbEK6M7U:Yd/5`+;dG[7gDihgJ@]us*M!D%<PUeT(cH66HdQG)#A#5<-c4O3PL9`C/rXOd98'*a]85R9mZrAA'Lj7LP)X9YK@h"qc%75&FCJ](#TJ"PP;';Ip;1i@RTLXUh8\MT%7(I",MC]4)X\cf))"?)""pC#0'BJl;!hD!c-B.Ha<KU#gpB',*RW!d3!&k=\fnZ#H'8T7*7&]"3C(Q1*QKEQN=0FTBp]UEnHq^g<%ZH>9c*sK\e&o6"3'I*%O0rG-$I%DBAoop[6lOBa?2u8oG4Eq`mpGeuXOe8^sQ^qnDGNV<.q&cH$5"0H[fcJRig9IMb&CHSj\]Mh'%BWBhu-)@LJd]AF.UH;Mc=GERh'.gJ\=H=@f\aY[!gutu%_c5;cbhCK@#V2(>)5Yn38D,39PX/ZL'9AiRKEn`H&5^,eH6Q?:e2K`(%=Ft(smO9?CgqZBBeVD_@!uWIYUb'7OSMAh-MqBA(aAJLY%q&.eYYOPclALGn>L;O?]c%s>KTU^9CSV1f*\t"JK0]X"\ge'IS<NG4%n8O0[J8%LrR1QusDH#le(LegteR+`[SJbVI*LTGiRdU8cD/</Rr/:1mDTb:D:P8jpV@)V,[UqHEnc9*R1iPW'qMKnJU`W%$VauqP%:SWM'<?qdUDB)e9E:%P<:CFd9bQ4K5JCYC*$[@KN6d-d:0/=u.0?WK&UYZ3$L#G)ANle<>H!hZ(VVq0+oi/=O@m)El5[D!DR7>2"%V+JUf6`MAY#eu?JC`6NDWn@X'9b?i2a:bm?^ltL\`g=8UrAZ\bP56AdiWBKB)M4WOm=)="$GWMd)UKRj,HE'?W3q2mXNW+s94m4a%aB0Zcj-6<*X<J)k+.CHO.P]_P#uWMeSPX9,;osXKVT>j)S2,?k+&2@^"h_1+IMY#97=Wah,(>6jU+[_2JrTso,e-%h+!cVoC?n@6%\KXkfP`B&%V:7\rH3anpDB&Fa,20h!N/C_C1X_tM5sA-K;B+M)a!/GqUXFKh^fZ*s&LKePXbJr;&"i&\2RB/:];*!FLKNKjM;lt-%m%mc:-dE<SdUWq\NYpGR#lYq3MS[,,dPNg(5n%$i\K':sd<J'h?Y%0"gg\0r$LPZ_2BRYP\!$BERSGu3rT=aIK-rgeU9RJ9o.4r`%QR.BTOJK!U/JM)pBMBWc033@g+I81VSB.?2LeL@F4V%$JT+haaN](B8(?*=Y0K##l$6iNY]on1.!b_OIEZ^6eLcooV/Aeb<dHIsZ%S)/5-$\4Q[Xej)Mq00\'VTLeYqJqsDE2f]sg22DNRNpKWNYu<,T#46UM7+3(be'lGa@^SR>`s]oXTYG9SCe6Sj_Z?M5b/>=\<+f@%=Ue.8I,MHJ)T"c;P5L"*-6.i7"EBDD8n8iR2bG:(/r?\JStL@i2;:,.6?[6JffMuHG$\oHKTp%+"fios#7uZX;(;ZYJr0[O^h1J`%`2Ic6PcZ*_eQ=b_rMh.aC:Y.#-G66sRr%2o<Kd8uQGfeA[]QS0mGl,1BQk>!K*`cc`$HNTOZkW_7<c+_<,T8\h<R/YgAL3[2_qHB%A<lp3/;`kt@YJu?`)ML^;T>Lg+jgn%Ta=o,N^PlH1HiR(//"3h0n&m^`MEHV_B\oj0*9DDkYCaT0+&MDq/p/Bjq!8Wd+G$7Zin"E%g<7_#:V8jjO$-VS<)2mB=Jr.,-[Ku;,Gj[q3LoSp[;NHLG-qrl7,-0%c")Y&*@ij%7Kj#1;+OTc*f3'@1K]$&(gFn],)2OP7&PXV%aq@hOBqh;WQq9?!A:nK_(@=7$CPWZMb/&Qb[)#QLUjYP@hkr/:rh$X>kU=pB&F0@R0cBp<!e9<G@e1?EZ:K9++<bGh7i%R\O/rc1%*mAh&Z\T2V$gONeUN_J,4u#OB^<ifeSt[T'V9%J_KZL\Q8[e>E5"tu:BV?,N8-`aU<CO2`mGW^o9N?;g+qV9Q^^5><huhJZi]+-C%#s=Pa;@rM/mMncVU1134cHMlC6q\aQlV&iaKJ&bZF4:@YZ6<uYWpl<;G"l#Ob3/q`WQg2.e]UJu2V#'uUdW1lIFSsOVET%nFZ/&&%nsQXC@-L'7bc1<-6S:+1@r=e`%,ja#=[bu^#tU\U.V%jfgLSrf+d3;l`*tcP,mh\X0f#[F$VWp),?>Nk6mdD(N,l#<'slF^9W'qA%n;3"5);,oQW$$fFpQsNU*Q_&P_F/J6\P.-h[RR[@,GeRTA2fVsg&kCsJk/cD.8H:9eM2NC8H)e(RS%Fp7BL2me<sc/Oj%Xe]OHr_%1It)reD%/]qLY>q/B`?H[3Wd9Bq3bG9C9h6\Q#u"idWa9c^uC\hG%k@OuIpbJQ?NBAtOb-.ei``PZ9FPo/=R:a1>t@PPF_i+p-b<%63#S("D1\[O+k%!#W=Z##V)"&Z.A_eBl5]RR-',HnL!D*+sdo53$mfc43SSLU`GMLE,$6@8?$2>PFuA'MJ9.I(I!VMW(:`2p-otM%T/3nf`-(%1`5tjgF%r.\d?j*aocsM]Q2saHl<%Z?PVHlUHVP&4=DMJp4t4knC?o/)@Wa5G/o2gIgcSEr4nb3X,R@E)Dlq&Ni#YHW%?#P$G.7%h5HV*d'g61[$.U*L?Y6miOc1"^;P"Uu2@P\JFInmWAcH<io&c?J*BTm3/bd/Te1i;%668=uR`*F3k.#F(`Z!]&?S0CX3%lUpfg1]7!K%B'kmAW:7/l3BDZ6f=bT[1Oc^HkNs+'K-'(H4CDc(0Dlno+tE&8F&NWq485TplNoR)r%i+]$/`6aX7:j8S7?OGgl"I%WrLZ_]fDk.X2s$Bddho/FMOJ5a%9R-<6Xo%8)gIaSB-14ZUJNRXn"<MOh=Om`,_>'JeB?:0"2@n>q@0j9#KItU+!H"?T!6D'(@m&%cj\i(W(>>gK6/Rq7S1hSnFBcSQI^K7=!8bh8l\"j)bh(l7tlop<$^q5,n[gHb^i9"/FE,Mcp$$<"f`&Xl?e11M`l380hf/Tko\9:%gkt/g6V.]&4c`'/1<U=3.rhR!=V>)dh%$TZ6h)c9FheYoLf]`:YEm+i-W$/0,.JOYqcMTu!hi`(]'LQ#Q)I]+e]=G4E(dHL+V)%)%8tmu6Ts0_:]+TN0JlMH<9s-`[9533n\k=T:E=/=B$8q*`Jd'maMJ@`sCZ6;js%`@-7*Vg*qQeXgW^4*ic9Im8.,WDC$i2h,QT"c^%oY$Et;^7T$RV3TZ"c4!U,=ocD9Lki#ho<n<k?J1hoaLg]iR-T-M:D/iCjLfE-`Tse\db^Cde\$9/hqK_b2SQc%Ld3GECJ+%&'0ii%)R/'",g?7hm=&U#L11$8'M(R^9l)4C-^YgA407&Fc$H2fP[@&UEP!8#:6\/+e?CbDM].o?(4&[E6P`./m\uM<`1Jo]<E59JV"INj%ou(aZh$I]LI[Wg0UUY=^LR2'AE(=)r"9LIYR"u1a.3MPUpna&QENHd/2JGb<nV@e"HAj>`jm-3/hWpdK]GuG7Q``sdQ2k>'..^(>%qV0'NUV"9)*W9@@4bh;\pW:2<pDXe5j(dFO1rctU0t(Wt[KTck!36lYXBLjdb[='r)>K=j1NtCgbW:Ie*6P4J5^B8D4uk5)rK#aY%,Z;d;(^A&^b#,)<c`ghl=$]`WS(SL,,!$^dX%?oq/$.DO,bm5d"pMPZKB6KS`&eFNJf3Sa)F,VnHm)IeM0pJq6<-A_8%r!K@"9Z0%L8M*("m.hoguVPcM+;e("bNs]:!@\^Ho!F_9[:RGbDYj:6Wkk,ZcU>[>csgX+OCc=[V#9(5rDV,aiL&Ms"U`3iU.=VX=&`giXdq%%+h8,f?A84!=GA)[5dTPa*!%6+BM6%X3?TPCQ"XW2eAq"2j;*AhYM`oY<]?_]/CY;1U#@Lq&^*Gt@gjP5*T<J"e+Nj4q-e4Zjijqs%Je+l9%71.?6fX\u(aai#;/[4^g>1,snV-Y2V?GBL%F,f&$Sb^LLkmaX;fM*!R4]pgGuGD\U=t<$`roNgh)'Fi7=hS"_^5rO03B><%7!9'^;\=<nC,D:g0tH*or2o)53=6VBLdaO2aep4GJWD6rALdEa&LO^_Ct0faN*0$_FTSLZjSC2,GE:s9nFQ.K"A14'8sZf\+/rst%G4O!KY[j$/DQXsL-o&p'Ytp#Z)'joGLjPM45Fp,>D%sO$<6FRH+BMjh^_[?LiL>PdFWf*b(K1X^*#\6l6HsTcP#qr;oeqW-6%n8u%fV;!177R]j8jQMb8-k)AbW84=KD]TpqtWffBu#k+^5Irp,Wr.n!L5th4-sFglU6s;ql85V,=O4rr"_J,<5rC$PF,LL=DQ,i"M[d'%L@/&p@A;-2qsgH6L/Ae&L7(jNFTY&UO@Z`<+IAqd#*&ahmj$"nCZQe:ll"o<G4$;J9eb!t1gL7Ta;C,'YE<pq(_ormM5JX3nhl(f%*X%j2A?Zmub#45b6'<TDLc%#&.$1+`J?c*6EL4Hh6Iq<>qANstV%?)>"_[<X8&@1qJAg$8$-C:1M"jA@,tEDK=>i$?"3Y#LJ50tB%?CFY)lbl=-9G-2A0s;/8BquJa640^4j1NO-eqp\0+MGPJ6hEZSSBrUF5%IKp#Z$A?&j$)X^_PZ%EMSe0OQhT-!'U`c54h5F\-(Rb%86/5UMF#?*8q,,(*MeG,:`2*&AZWrlK2=QX:iZalJs^2M4XQiu6PIBj8TG!8!"meYJ[CEXAQU&8M]!;GVsFT0EcX@.C?>WU9JhC@%j;(1@]qt4MHjUK];5aaXL<!L<l^NG@_t+8?:ng'%e0th>NA<JLe\3u`Q3+PU<>aaY4HM#uD-TW_s,<q912;AjPef^8o7T-FO2`(a%1t8XQL_2D_'KiQe"t%KC),^o_<n!iilc/YrMel@^)^.^$ZpFNm>QHsB;E06t<0@AF8Z31icjO#ELqjm"ABG`$.?4E$mYDrNCZ$X[%h__J`N%jbb[u*SJ0qp;4oY6,\!PT`(#%j(Un7,a=ZC7K7asffGA\u]-'?6adSfdGh)JSmh-JbKk&5Nt)rBc*k(LLRX)^POAK^AdQ%F#rf*'\Hmt3A\6+aNm.4"BZkW9O`Z"EJS3mV<+C5#?d@IA[n9'#[(n_6=Er9X7Ff&>`HZeR%N_aTdLon+],foPZTHA\-H1)Q5d(U%K.Q0Q,q^%kKJQh%K@U+cbV6B/-J.<4GqmfR@`U;3,^qN#MJ_CrQ_\Dr<=aZ4'N$\RX<<iFm);!eMQ,*_:a.9`FuqChAKiYQWC*^i%L36If\e#O/"!D6NE.uWCYS<UA44:qT@mmAZ[>u$1,Vk'S,9fh^E+D'R^_L$f":$Or!9I.:raT%T-5>,n&/%fE9k5Df$p9b*(Q+l.%6%0T+"q^T)(8K5=M04H'W6\lcPJIVDSrb:RY]VMe6kWX3R=e)OphH&"-T%'pHA?/B&E>d7fo\0<b@?f*UY&2?64:1X>*ZU^eS9Vn%K"b#K,o/[rU^Bnt$8c*I>'gF<L\P*M$%:?uVQ_;V%16(4Ksn`sE.Y$o9XpQP;U@d2jTJ!U3K!Ap'qcC-G<1&5CLmk.M$.dkSeYHB%+X3RjV*OS0X,1GP6g(`M3iH9,J_MGr(=VBu?Tm=EclUm>`ia,#/CS+m6H-u3)uF'!Xn%1ggs#GXll6W6M1(:bA.PN]KWH>V,#-Jg%M-7.F#,@P2&J2T1Q@_S..sqY:E$8/F5Q]8$U!3U@Zcn>`<b)25aMc$<-+4(.,.E3#+##+XNjUKpji^3#15SKbpfn)"M?mS0<4Ir?%o3Va'TIqmV,%D'6qBNF''P$n_0g-,03S4le\72!sjF%@AG!!)2&@HG]Ai^6^&.&F(X0S0`.=;V-91DbQ'[<?X.K.<g?.6">:p+4_%`*.FZ-q'XO7cg_5CoNgg\Xs0cbD[/[d+dIj6`=-5MQu>=;HAuIa8j&7$AbsPcGgVt^e@hs)'USkZ/\\*TO:"hQtn&0!D3<WI8si7%F3%KB%Z!d#&)]kj>]lPU'Z4'S.[l'r#a>l`2NJ+u0cV!k:t1n>9^$\7JnLp.-_`I`b+rJE)0^[P#$u';>^dmKfDlV&W^T6p3Z^+f%5fhmtW9FT9LqX8Z/92CYl.WAO9K(:ib#pmV1DG"FM*;.R*h=O[KPSkZOS!3QL\7<-0"8!a9G8-tH5>"D&n7k<G#MKK:6M"=!*Mnk%d=:dK>0)9"C0ABqT8_Pnp`"Z)c)cmp#31"ICKU_"Pr:+Z$&KVRhfdn#Cksh*<H-cNDEs6bj=n"]+mInu6`CNC;0^A/:4r-a_9oWf%>TRk8MEk09DNG,-#FI<5=()DGM_`24IY`f8'AsKGH48V!cEo6(Y,@_e^c`O6AcXV-KgZf2<6fbaTSfMcZo*#o,aZpaX?E$2+9qbD%N.OX(3+DHG+CH3'n37=b6(=1O*"PFs2/.YTC.E>EWUp.DW!T/)+A^K<TZY<37)n/R>4hH`ihXcJ8q\AtB.\dMOuh?d:]YfuBsEG.%8@-H!Zk-Ejppc*!jq)TgqI@PA>,\8p(ck$Q.M+KqeIC0Y/=MFr&.7jaS!q3R'/(j%S!iqm7(Hn>dp\mVE`?`MSCTc#(aFQi.P*#+%<5r_uig7/Nk^f\3os&[n2;D&FF#'ln?9fQ#U-6l?;\H`9&X-U%\[BM6&X$OR1ifdSn7P.jP+fc++KmI5+ukpkbCC8J\h<<oL1u<,%iMaiIhF=Y4"9VmABl#js'XJ'X&Hnf8Bf#$'./W"AU9Y:51I@WmobproL+2MH%>7h&4G3;?&cRUs=1GN7=%T`EAE$T-@9<UWmQ/7X%:eY!S1l5K+kW:^=&XjB9\b2ZDe93H<D#5(Sc8n60H"$>!-?L2dE1VU<B0on-WW,LPi$`QhBf<8O%akKQV^VN.Z=X#nYSB0O3Jod?%$RL>j)]Cm;5tkc,`5$&@mOZgYE"SU]$uj(D@C@bt"B_/pJ15^m0oEcB3@MBs=tCg,eVpc;<^KG9",a]sjTV>!'3tcBdH3!@V6_mQ%G;%4h8EH`V9/<B#$1!+3I3t7.VmoNJ<1$(cMW9?O#ummSI]P5)$U7FX0b:$<Zf)c;l5f/K'o"VDY/rKdKs_q;Z7\]OIftTt`1]pW%ZZKV(kokXm%/AAiJlZlo1\XmZ!F,)o.PN7eTT+NZEHRot7<Aq?4i#G#'rXIFOiD-3clJCP-S)EmmG-j%n0uocE$Dl9!N$$Uarj+c%kp.Pe%3(sW,j[/aI`V2M](+QPWAfJR!@`+m1`l-Kd;(]i2$sC$bi[+QEN8n8k9F$P-A$D50O0'iDEe,V=DUXS#P''QG;-2$;hUA`%S,d"SkE^en>js.99)C(g(;\lZ#2gk2e;I&:"Q7S=nir.=!FM)&kM\tRh<%J6i.U>4./RU[g]<+(NLAR(<An=FE>gl^=%LXui0Btp%dhcR?WAYDh4f:9b\J_b`P,EhineehIYm'2WCPb['(r4Kffe'Nl*/=NFNIV='ZRU_pP6N@+-<#&;!V6BYL:m'/IMDK;p%H6<-dbd,%dThAGJHLS#Muj<rj?]<#,DF6,ku5r%N2h-tQ_=]>NCpjQ`,\S7Kl4M:KI'5i]!F8rf8:3]8k;7cZr1m7&lf6GoWn)mZc2,@Sl6#g%.6J"LFKFd-2KjeEGH!_?i;\M-ENDRYYV6F89/<TiJ0YQ!SFI$Om-sOA5bJPjIrikBU:$L'*'5j_2/oe"d/fA/<(*spnPB<gf&_uR%2C*#f6lU(e@kr0B=BB1).4c(]bM;qXO9(HiUBmJR'W`"aq@jiEI)$XcGdPiuW'0e4^]`65Q!/"Z#l&ogB4Z/hW[_e/Zbe0/qFMIE%BRDp=^bk>/3.LtY81p).8S"WVTdK%r8`<Xe7+8+[@/gE(^kQ;5;I`AlbY_(f_.k^S7#*J];@(p6Juq9=NA(X85"!Yma'Ya#N[HSE%@h:'F7s'_cOj'CfR8^siS!2.5"Cq*:]I;FI\hNc7!i+&OKMfF#D$HIKOiJ5?$\q<h@iMZt*Z-m2$iA2qkqq%noT4:djaRZRJek0%%HQ^?_:"I?Qj=)jb@VA+<K?_\<JT?3Sj-"@rL+9pI*Rs"$%a#ea;dmo[@e)5DcC4E^3+&'l#eYqDm"uK7/h;hMRCkfS0+CND)Bs]0%:CdOd=$k7eckuE8A%MN9(:MlVP>(_06%I^%7jL@IO+;#Jm#^Lq7uZ5$Luu^sl_%+QlC(%;5_5jJ&$nr.!1X`Xf&rpXI3'OYdS.;@%S_Z,&^SPi2!dX)'Jf9P08Mf3qpe7G>er3\"&:+=6;YUo]9Ekg,\msodrib?`cnT*+gg"t`\m>_DH?^Z.VB2Xe_#HfK_Ch`n.LRgA%\dE&n@SXNdZXIZpTiAHCa&`iRNNkDe+F9g8St+bkB5!epE.:9FOP5B4C45V\B$Yi=&@nuR-$Y)05gWd?'p6opc:\CNW7NpqN0d%'%q'Q(3YkE<^@/3`G80^V()0GrC&iEH97;;k::_-(""j16&=,G?MUtjD<eac^>Au3(uCiLJ0<j[U=\]HMo3YT0JE^92q->"qt+ikZ+%e+^[qWDT5566W>$<r[,H2eAd%]=,>q3oa(&B&t<ZfQfld%;g+pnUPRrV/d!TrK^8=:Mh[EO&W.IGa1c5Yr>TE5_uILe#m-o?GQ"p%!KL+tFq!dDMA!!_V?VA*0IV&9e6rG!/,ESO-;g"_RS6_#,@ZZ6Jn?j9%Go`fW`'V>'L4Bn*[ehnYWTIKjo9f2?GX8V\qLb9ANNp:%D\3"cAgrdJKOX05:$`H^V-$/)PR<c2L<pN$Ht"g^1lHog(,LeW94F_C^7#hgUBF;WT%:u[YOSZ>f"bBEoG0]ukOFIF53&q)@Kfhg%d[mLJLMG.3rOg].JF^N56tF9iD$+'u,G__^;dVosiL1j%p4gjm7XWlH,[.aP,0<W/3OopqX7:_!*cMJ0K=XbGIhfbNq'28Z0N?rl%YtY=NqGIs:5Wjc0m[8k5eIF*=_NM#A]ACX$1H;50.Y0u)o9/a,I[;Fgs.$2D",TT;4t0?:,I19?9J)P;>@V+NI-pR`iiALe!Dsdb%`!D/;K].VBX<?VDD-&J3;.YUe65TnlSmc5Y&fp9rqm%Ca!l+75l:lhSad`N+Agp<!dj9']cfI%h#9Zs$kC4k,@\=LSNkWa'TF<Kd%Tf4N3hJ>WcF.C_Ni]WU[N%/<lOmAekbFF!]['3BS)qjd?&C^a,0/C'a/1OAR_-!MZ![&LT"ZnaLXqQULeLe*$118CQpj87D_56rq%it=\Rb_GCFk%s'd&&A<2>g:rSd\+!U?=&pBWc''BPU;i<lB>+77^Ghl9.]JCWjQ(F)#UR@d\/"td4arQ(Y]o\YI0PSJ$gP&]dm<f%`m?nMU0-IZo*u3WOj;<`T?(tZTaMU9+kN"A?JaqtU5*.Xb>0qXr6JB]6J#nk-R'b8q;&h5AtD"&N\U><7fpZ5,?\/Bs1\5t/"[t,%Mb<U0KL`*951R$"DRA-=$[(dE'57GTa"t>r!sri0@^VVL[M@Yrs2Q05#_Mp!=n<KtnX;h;KS11X4dAFMf,[fWY6,2OmCibM\'>RH%;RufpoeiP6",U_"BrF*#2LcLs"BJ%17.IblW%&I/=G9C$1%G""%cg/=HDYE)hK+8%I3>diqHj\O0^M.-5js5!@J]md[Dub>/P?1?%.l*g3WD,a'bkc?mae;0<)8Y=#"7'qsVho#b@8T"j)_GO2LeOl0Gbe.<H&!%S0sH0q)Eq\@A<8g$*7SmRVE5Dl1Uit"l8^9f3$a+2%\Y:)j$rlp@:3a.m)Rc<[s'kO!oB=jg[3(L#-,HmLQns>Q8d6p])bf?Y2;PG[`?+K5`5Hr`&ZoOH":j3@YU!NW_uhrT,<&F.6I:a(%IPb5<_A*EuF#Qui.TF'kYEC<'"g0!Q5]nQWm8J%qJ%!4F`7/Pj\]?*#]=mQNK-T&,V>46Jo+_kg;JI3/e@1bp;Ub(jrPb+RYg))u%j#TUY!5Z0=pr:FPae0,oW8oe-'^53;LD+eSl^CC3,h4#dApo05HV?l5Rt0a]hG]`bd8ZbgH:8/kf<nD]-SI-mipn!nk:VD=6`=1e%;"L]JX_;*7X!?mdZ)e5[>,Zsl,bI.JU.+\'4jQ!?7F/cR-]fn$Z3Lh's#FSM'==&OVFL-klA.t^@^(aMAIan_LA%n'$ZbL/N)_h0%(aLmE7W1V_FMD<+[IAEdF.NObj@U&]@_j"-r2%MOm1K-<QBRRZQ*?S5/ZmCc55>6Eclae:3..56&p$[nU$XO4>o[k)-Q9tnD5Z(Z%@fVQF?HL@u=\k-iZqa-N2ZfJV?TeY\dXkXpTU+*B'0\/!3tQW.AU7rO3?[3j$$bi>`a+%L./M7ms*<:h:C9^T>t+CHjc8H)6pihE%WqRRdei6Uu\t`SC/_-LI.an.?9^FG`;rUH5GMZB=d^!>=*#7sFeLQe>Yj=o(75_'iH`l_>4YuiDN8eIhIj<X*Knd<AR2^;*H9CKP%156kD.+FW:,P':7:aIFG#a*foS`gGs'LB!ETT.%fQXLe9U<A3"dEJ_Y4kDZ0NB9t65oJiKQ796[8Er798@VPR[C)&1d>j8p?rDbE%$gk9C=L&>&&I%qDfcU'LSOb>AF$srlTJ@]EYr7`)&aZ05c9eSGBbaX8=-S4,_i,N0O2X!^&W0ZR#%L7(TH1;km>RhdBs#GC,AWX.%5Q_ICObTR)QrK?cCA&!oiF@n98E<W'#Joj@Tsq)m<Aml0D#$q8SNqU2:ff$%>k]358ZO%-P5j'iB[kq4XYKF@)FDJ@.gDq5j=0VQ%Yt5^kW+E$7'oJH]>ENY@.Z(E:q8#T/\HsdgFd$B\P[_P"G4V"qBl*lnDCs3c.K9&mXl9Lp`iB6F3o<-B2I8YkEhl0k*?E!%$?Ve`%6\[7]fFU/m$AC2cBqC!T$^qLWQ0:dL-;_VCgeQ'eTPbk>NZIKt:T0.Fcu7XG^-$sV5&tN^pRIQCQ/D@\_P78QPkq@9X2S+,DP*@)%^4L>P<PDE!04TJKV:F?mgo1nAC;T",m@;UW*o)@97%@8Q6d8fBAmk::U88m]/bndf8&G'@'`(Z,&K6-THXE^n)cY!a<Ngc[Qg)p!%L)63e>u<B-;AgEm6u72E!83_pA3'IAFth=^g[e+O:".g+p9l#PCa;9D=#Dm!UY!(NH$T%/h[0+c?&[3fi$m!;TWJBI*sAC&e3BAe%m4RaudJFMKi_Q31<"pW=Xic*dXWN1H.hi3(TcXEQX9\h.PVQaH6pErL+%XsOKmjSg\EUh_OcOrV@LAU$6pG(+W^o/B"-KU_ii7:f%#==C9Et8-k%M=Vsn'dsP#RRJS/;\Q6#P)K.fBSUa#P(`e.@_^\JIE]&A(s@8&7V?"rAsQQ)1fc_/C=u]'^KU.*r:F!;hYc3d1?!l%a'>>\YVfa]je3d#-Ul5\@>fRWUd-SW.+&Q9#jqd@q>lq6<LG00!CoBtrY#2q5+:]kLE?AE&2R%EFRTNTa:#Jo$N34<M3UCBqLK3!%Kfps6%nNFp<h^]*<T`t$kQ`j-/D3^RIN[Ik[61QZ57g_gf=-+j#Fpl8Mp`7:5is:h=*KLMd"PK?KRU^S7a,DAcjtesd_9q`#Kfqd%<&sFM+XK/R&,\\KR:[;$kQh"c/+Q=)"7@17rSXFmONgn`;kb@QGu`76kQcKm8r/7O+A3@$fl?3\6:s-7:r4<m+VL+A#$g+/OJ]YB%i?&=SeD.MG!'s/<VVQIs#XUr#'tt[nJ.NsM3+OM@"$duc+V,(`+\$VVrF7,R!]uQ\)7Kc7OEN1X]SD'RETu>'(^T2??5upR+=MT7%Xu%f>Dd()Z&ct?i#R9E+!Wr1g1[-&*n4cV3FV"gFMKCM;(^O@L9a7[Q&7i<Y>?pPL&@d]+GZ\DtFQ(%j<LV(Ean3#8%g,+RM3bQ6%(^So;]^2T85S.(&=T5HW&;4_J\4R/4b%-+\Pop>Hn@T(R"$n&lfbt>'5s?3cql0cbOGB>3W^%,KQs%FO-j]0p$>P?J+=+j7_?3)c%1F./J>Ljn6PD6&K,mo6c&j::u'EfSZ1b(d&KG)o<3"Ua&A>0qLC.f*@+Zbh<JKP6?K"!fQ"?&_0k(+W\&]G)SM1NI6&S]"u5S+Q;%U4j,/5T5iB8dkiGT9>kc5[`ojrP?B:?pC%:<+6uSs!ko+#QjnL$eIKP"<iAnMPL;>&5oS9f-L]SO<R+)oKWu+50,Q0V$')Gk5qd7%/O9sC.Kf8`$3I,qH1`Hj!`tf3BI*ueR8VFh8e;+\1f$DmJ\[8\A:P9pJYs+Kd.T.)KP7`5X2I9];5QJ?5S3])irC,+!f<oDLnZGU%./qJ-V7GSrGOEoZ('Xj9L)2t!(^Mn[W&635$3NRp0R(;m('?inOeUl^+:,1Sm9/jB&;1`G(3U"9TWdA?0b4CQLl"8U*!h.X;?cbF%5nM+0e.FeS"<ePLX]pB"O@3H'$%froR=O:J+:'^Q-uOln^^`0fWC0%6;'q_ZlCf=+0iZ1f$%j@ra@VlV?'9ir(K5<+E=hnFeo@!8%#RFI57FC':W+:ILoPb@P`Bl(D*=`-NB3pWuiZO>Y$<i.9+HmA8%T24.n2]>S=5k?E@>Q_u+Q1&>\[iLcJe4%Qa&4(=K-2EIIpW7#%+QZ?OH1m=2K]m04*"kSsiX%t;)i')3;P)sSO+b<Ok]74?+Z?jI*k;.p&qZ2V$m]bV8-hP@Zn!F:Jrime)c@k'OCC)e&d]^NoT2"s%QUhB-Ol&eW"Hok?;^*BH#]l[B6Jr[0C2cED,jA@.J.RANCL0=6KHMP0aAjE-OJL=;6:)fWQ_p!<#b2J12K21m,`1r!HmAhiB$MrF%$\TXe`$XV-+9[i_eid)"#TSLu^,mG?4r:JGa8mH'&Zc3!J.Qh1#eai$&@fji(ZLMfa:/=/=;;GMM7a7i6p_G_VK`e$&ctXX*;>O+%aM+`bF[-3n7>3=XAg&lV;VSC*&4g?F>R?)!=)m%hM1a/dbP]t3&4D#WQaqE%#XT4@+]+KB6(fYm&De$)5tJ.ZXMR8r'ge_X&dO!!%\X&XD*!BFS1lsg>"<h@aem%,VLermZ[YVge+Gj^ALP%i9X3aHYKG`@2HK7%*";NYmgTPQ-.%b0fPW/poZ&6'05p/bk^r",XTH$n`%lu3O2#qUB/K-6E.9&U*]J]*)`3>_nd0B4,h%"`pdZq(;MbU[M05m`/d,\Q7>0F0uJl;UlZ+HW=,TgD$V,-LF90G(`K=SV2j+E1-@%OmXn78>6p:"$s/n&T+Ca#89_IGg&/^"AY,kKe!i?GqN'9>G<7%`*+Z%"bB&FYAu<&S0^&X*"E%:L3MBu3!fF7X\0%STY/381C&QZ%ANu+c#(c(]R_TZH&dEnTKc>(e#XV/UM@0q!J\BT9Q%M@6;P_I'#D4-eUI-YB&;5`,V+CiC^k"9&VF!RFURrYs%L%D1^LF0''Eg=k%jeW\!!dd9/k7Rqa#JkL.LP!lar;XY_#W+ZBaa#9?oNTb,/l<2D#NRak%L%E<JHDcL-jW/`eYcTF+OH2ViNt16&85<!_H;MD5^+dJ%I4\k=VuqqAO]=(@e,^<4[=U];h5hob%L7P1"!bIs6/\fV:YN]PTOk8I%u5d&qi'<.iZR_>"*s"e+J>)rmrU("&8:J$4EN7_6@fpZ%St-2mJQaQ<$O;8KJgP%h&-Q1T=rU=i+HVs%Z-7bAn5[_4<tGKQgcCK2$3H30Xbq6T#^e7WPuPUCY^,*?m_L$m$<Ma[#D59I?Vt_^%$j*R#e6t!Ik=]l_b`jde,dBVCKL'!]RQXol+OG-7iX,fSqrXQjoO8$Yf$$[c5S2!mh")!XJa8O4q8$J^d,.4QnLtO<[pbAu`'>G@%(<Aru0bCp4R/\3366$!AR)K7E#_EUD)aANh#eU\5pI:Aq#eU\5AS`Cr!cLKg9ku$`!cJ)t/2g<A"<iGErcpI/H8.+iQQ6P;8He4a%0F7"]Y:K3P&;6FO!%hUj`8EAq'5q:j8CB<'`'L&abHe/]#=1nc[IP=LK%dnpNRZVI?6S$%e.N%<1MKR=o%#R$W")bA"%(ogP.6*0%cq@oU,,nr]38:/(VM.=oMlOQP(^,kVC:Ss_T`%TM_Lk-N';+ukK0c0662fP`H#j3":6YK-#XZc%5TL77XaUETEA.Zg%P9H>?k@FQ%WC:2f#d9;)T_"sG6-q?c71`F[rg>9;;\T@0D9QM=TciP8R<)N)+E4:op"#fZkR>EO#_GrnZaU0kTL9hr%Kq?B"n59Q+:)72bPsI-%!Z,/`oG%]7VbSfQLP!>#/%gs25nK2ZAj$h2Bb*dhBiq&OcrF[&WpW&%\kYU7"+bnq)saaG#Wri\X(+b$1?)8@k!]H*TLV89<u;58%S>pGj0G*GC$<W?q@3>gf0oHA>JR5Vh8MTD9J%4[.ZD`@?cs[Q>^d0)^-L"hh+V71B00f\l^eLUJ('fCU-R#<`$%Y>Sr<=;G!^2,d%gF49Wpmdf@%K`?IP5]Ae+A`g&';:"C+AnCS#D&Pa`@._t&/a\4<.YGXJ[$Y1'NH>"cudjY*!1]r#SjJH6pP.i8pq/:j$Aoi:ht(O%#ZN\sbbG5)?iZ$9%u5Y-mWKFj,le"A3t+_^#RCk,6nJ=V#RD^;.5V*]JAB0(9<Aa:<')EVPQa<[9K&XNVuf4\+or)m!!56V)Nk1f%T]W9J@"j+r%@8D<M1D7&?Gn$hMh"(k;f?KN&.nUChM55X+E3?=h@niZ&3,>&$&t!r^^,MVh[T[<kl?V:jU`!iaq3`!YFNFbkc$*]%>_5@Kf_\,X"9P2n,HHJ_T^cGJ)@M,CKeNI1&.#WuF0ufV#R%`*'_oj;+HWBG]Yd"]GW)bXW%\d)6`@7u0b>0X<n($&J\YYT?'$*3%!e^6%-b7,[i&9Z0<[@s%O;s?MKn1A=#TS5D"[V'faoE1[6$#j:'!2:&d'+4)<%S:Uj%9ZHkqEZJ4Q+XM%g.C!nVG.5%Kh:@Cl/f0%JY;Q32"qRnkXEre!XF9AK3d<*%K_2F!\<5&#_^?i:dQ;o\[6mplQ?bM/F!0q"9SP5f"*FV&EjU&Q,d>VW,%CNG7F^@]i%Fbq%sD0%2oWF<_I4RKUsd4j+OHg[:fA)5!e!$?%oJ+5^fb<%;i-&jP+MIa#(jF/.-MWV!khhg^`3U]4Y3k=E)mAMI?UgZLOh^V.,Z*t0bB]g%U<0q\#(dCrla(OI#i(aM2Qq`uTHdQAY/3FHd0`s5J\WoQ\AG_n5iB@h%Z#mkTI^L']u304'&aQ)^Zs*]=-)]-dSIZ&fJ`jo_#.*$%&,):4YlOkFN%aOKI3l6LNlEcbA[Dm"I/Bo<,'0lfIr@\qd/[A^)BtC<f3o\@AS+=U#6K+-8_HWGQk:%),maX\,0PN>&0qO_(agA#%-UFC6jIB`7K*9$&lH*:b"G'-Y5XHhaE9R\j[6]D[bPKJH"bFKtOb:r2i9l5u.p3DhTT1;EJd$_1lSEZr5p5sfqV>OF+DgA";mIOY%1$\cY=:e_^5ZF\g+Ae_=Y,#So^bN9NHEn[O(40'I/-nunZcFL%K$,##[#tRn'*SVp"i8J8jCHAa^a$MH,R]3PHZn>mK&C,>HX*j!%&>beB:g`fr+:j-O`(kqMP\/u5S2:M)Bom(F1^HkOnnt!&!@K833C/;Uo)i5)8V?M%$\(ef"BU\dj,F:p?GhP47TU"gP7.5>#GE'"%#9eCUlJnX'C`!HR(E*EmM7q!27RoBVEj_>S$UQ]T$\E:dAPBBP?ug6TB0kJ3S:p,X#b3aM-:*7A&r-q;EKD:W;^Xl07["ta!68!C%I%&YuW0AcI+#Sm#Q0X`,^i^9CC2>.$r-0=jQg=pJ(e7sAJd'!R<!"`7\fj\GOp0f^RU`gB2R=O9c*bbR('I;`Ds8eYN-D&J3X^Ni%P#T?K=:ea.1_^p0[58YPC7MR`<'p+clIsU44bPnSK(ZrkH^tA7<+_uS_1f90%9-7N,cJ_+g?WqjH@u(D7YALV6s.00G=E0F\Q^l?%V`&%7]6:[_%F<phFLke(^=*^:>6f@k7spi9N?'_DqMq1@K7bbX]F!KQN/\"7(m>+('6Sqeh#J)u7U\SjkpCpYY?P9Bg0"uEXhHoZ%j5p%hN:kq*&HR.:AmB`i.Qe!L:BT[sHrfriS."979C+:c=t^NrN0%l(+B2:75q'b-><fT>m0G^,If"km_AFO3e>?Vm'kFTm'N:nq%W5da]+M?VfT*/R8KQ&YBa(:F7E4L)$DY;\dn0#5'2>Ik5(qWq&#GE&g#Jml2G=-P(#Wlb0LFIHZ*"X:<h0BS,16/6RK>8(j&5_CQ%W2@Re:lNMKhuk7COi_P"6<m.43tDCl]]jlF3"h2TTpRkO68\rZ!]_K?)]B:i-6/[FKO=r)[/70V(VEP+:MiK*e[1Rgf8N"K^tgo$%cF6JKl_ARg.7=GHk;5R>+`K@V>U9tK2)Wa+0a83k*UU9d'.AW@h-['.*3@a4;&,Ub\I=6gKKuGUG.UKFDJV]HDbRC4eiTU%[GGlj%L@qX+fdTUJJ.2ag&L$Y'J:?3KX/8@>E&UtY?$A(+2)u.k'?Y%t'`r5<2-7KZZpW`\&?;^L+l&'F$pOehP?\B3I(sm"hH,[E_92qG%X_DlM!A[8"KOVM%OCenR"ODG+3B7T7U=?[aG\P$KosuA+Q/k91VY\e!-5V9S)g+j9)kOh;8Xs$#$&:[n1.ILBV?!Q9+V=+t`aPi`%/nuugi>9-LGTS/(bB7kkOcg-HRZ\)Qg4B`aJ2O/7NT>Wa)#%Ni.:`]:XJ"LJP9CWM,=Auq>_Xe.YXJO7jU&*Ulr48'aa'Jeb<jXg%0HjD*@m]['a8*.Tb`QhWD9Rm<l<IVt';k4,82U(AVP+7_R^);)Y<'.r%DBT@$).'3@mVldD;%(o&rXr<P6mqOb)Y59m;rM:DXt%@%L'&L^b]7>_E9g1`:RB\@(N)nPYJ9)ge*(+u!$.AHV2XH`5`YJ1+[YD$:3ch]i7(Wi/R)M[(Gg["D7e,1K`lsNnJSh.GiW:O,=@"%%l+Hh._BgOG7YHejW=o>4@sm'C)SCRL(3j_rO):h#s0PLS4lC[:N3R25m-W=`&5'Pm$3^BNoFRCLp^ePS4jm)V5VnK[Wn3e=Js[5X%ePs8m)>bD?W/5NJrI(;%lZm&H'rIJg6V$o!H[W$T5i5:Rh@iRU[ko@Z0dZof\QS1GG\6UmP]/VM?A/*q!DXp?5r$oFG%:"`(iMse%6hu>3&+)O;?DmSd'#^WT,)o'ocERpMM/G-*g7T>.ILmrmc'I%maaBL%59TV3o//2T!`785o$p^S5E1(6TYYtk\(?-+b3+>[&$Eo(%oEW=!NOnH5/?B4XW6l\$>@!P[I:=nEBrl*)lDCKNaUM3IG$*<fIt3Y472[DOhM"t&/gMoBaoG4D-Pjt<>#?!jN/[gg+,BUE55J:>%Hmsh8Oh+J1e/8gf!Z8r=V(a#kA*_N*9&U\p!E""1h1YkQ.TV>8?:Vu[:alsUX`5JFaJ.Inb_H+UimXhECqn<nI>T6@i'=6,`dpsF%aal]D,t;J7K&&kg[u%:>fQ+ap(nER%/-p-'qeF6)n4(%aID7uqBb4tBG(f?#^F*&=Bb5))][^*q$lU0;28\Nk9_SZgF/\(!:Ts;d%=V/T>?iM&Y18kbe=\bsa^V3o!M4R<gl64YDYTXFlI4KU"N$!q>(s'XCC;55@<dssr9YbV<Sp9PnBqp<2jf.j#"<E!f@5mm-oO#@E%]05gg^])J;rr&bpr:cPm]\_RJJ,A9(:]Kq%n,DhIhu1%Q^Amhp++EtK5Hhh_MU;C^a05=5^O#Y0SH&W`>6!Zs9M9AJb1Jf;7HN"u%C-jau7ZT1[ptfOe8BN@7@aQh0*]/'^@]<2kqH(!]!De)V5IEn0.T7Uf#a)l)a9E<aB/rFZ/C"O8KF"1U3X;#%KBIge'S:E1/+tPS%*Db;:n#@Ecj.CA'Qa?@HO)B4F_$?5iIu(p)P\!:X"EjZ1\$M[<n?e'4585st8RuCcCZ7Rc^J$qp-LrB]Q9;Oe;B9hW-;F.T&"W8d%lWn>0?$KUq4#us+.e%XHF:>W,LfP3r=FgdC%a6r1T]7[aWl!W)"8MJ?@MZn#Y"q%PX<COM,p!)bi'S%^m/Y74U^FSdibh$m^H3s>%f1"cl17d"m:a;)V#_I;-8O#'dn>%mCh(GKZr@.<05n)0PkBs"P&+cJ$g9h0$PpJ_/+*8)E%gAQMmO8F>R;`5:TFSAmgtLC.T>p%i%`(=Aq0+*sKHgreE%A@%S'Zh1e,/i/%=@Lga[4DCFP_i7l*_]gRcKXIf@AU---He*:Rr\0k81gE-H8oqml;MKD:9J!_)O$PZa]`(e%/@C<mOr774:k.'urlZ1u7WC!DXT$iQ5acV)=C\q6Wj=e5O=iO(O.`0E$'j(s[WhD_HP6e'UEuZ=%ACrW,NV:Xr&R<:i(27kLIT*p%m2b^!U$_F_KF](H]uM>G(ni:2R@psP.e()*-)mI+B+/!n6,6pXELiee]"(]sIYXNF*6"S0l"`2e6e<%KF`r"MNC<\>31Dct6$\u(%?\b?r<M=ICI)+lZP4tjM@ZjXcQ6^CehjU(`dh)D50YQr_!iOLfUON7"$TY$6ZHY\7)ouR7HmEGM,A-SR:kcP91rIJa4U;C^UfMjf%1DAXa[:6'T`PJPh#SNa'VQC$?p/#R5nInqRkrql;.7UY9H=^6t:`[sd.Q,Tb2</(@R^2pUoGF60(O*tY4C0(d$_ctchK7'+`WAi-%!Um'%RSd;:%*L:,eED3@#%R^D9tn3'nGYs\SEg63VlE3S<Q#^a\.F&bC(2Vsl=d\@q=PG/-J*o"A<(>[m^20fTO<i-hRkaAXXIZm%qcjA-)3U">6LTa^W!W].9)Ce3[BK$rI#XITP/',c3-8ZKd'S5#U6?[)X/=Aia;4.4Oq'XD33I;+Hd?pY<:)$19ocqJ24-b-ctWu*%d";S4I]%RJ<WcpR9i*3nPfBJgFjjfWdU#@Df06Kn`nI_#YP`tF"Oh.GU/>bj/st21,5.aZ(FV6FFc!4/AXedYV7-#ifWNng<?%cd%cH!:o.YSmCnVsRq*`LWg*#/@T=Ra/3/E.k?"2Mj7?V^D@7kflSi=fo%SBd5E^!4W:74uDQ@@(&"SgRWi\elV)Xl-AM<pr?5o!iuO%'ELNE3pg91Ao(/T8h8qC$VO*Y?>U2jn`i*HIjQ)cC\Y)'aOJFd2hTXl1m_XXe@>_Z@V?%/F%q&/(o\<2>A\6omh![&_R-%8:tEM;%E70or&/HY215*O,a[W-M,jN]HDTX+B,K>]u-\>LZd=ru/WASW7;?W=ijQd>LV.^L,GqM(j?>=`=i=e&K,N>"%H*Cd;VDK>eL;Hq/%9rsj,c(FIT;5[+]W.WMLD37cf\Z_^[rns;2KkebFU^lFHRSM@4k.qRfpNY6c59Z'jJj+s?o`?EmS(4L&%i*WV9""EH1A#=,34nq3%SC/Jn6?3/PE\HT[MD9-d&-d^n>&$<eqrq5l\1rjohu!4S-!+SGW_(5q7965aC>!d,3`_:F==On,3d:atB2I#;<CX"@*na!c[$K)Y%,C.&AU/FW>/YA%[>aEJKGC;;@,o5+ug=,/-;ol!lL@b6/r,.K?p4Uiu]cU=gnX@;&,OQtQOJf,IdFO:G9*SF/cp/a$,o6hbFSTHG%ZjK&OS>4np?t;,SPb5(pr$Z"c[<[)t:4?3nf<Aj>6]aSc7Y+(1i3fSl'i:]TLVBlI]/Nr;c_tu"8o\q]RBn\o-;N^s/2o)ToE9,p%@+<UNW&6>l)HAU4FuYI@0P,$#hI7'e_]$>QpG";.Q)qTm::pQGO-#nl-F.T/"YPk\*\5AafB[:KJIf<t`QBbu'X+CM2lDDGc^mNe%^':&uW#('8eM;\W-gr*(C(4VuQp3UWY5q#ck_$b6F3QA:Fj.Z<CQ.SIqJAPpl_(Q-#/IqHo.7^&O(s5F;hY]$$09@(2CI:d3r>V&%MermE\C7k2f3Yi%CPjS^qo(o&JB@,uCj5eC?7AA([$Xnn+Xf,FRhd-VHQQ14TJDKN*II"?ZjbER^L`s96,Yt*,O"HGZJsQ#BIp*6%M(GugQF7F^9iS$jKB@"Ol&I_agWTW*qAs;-d03"+iH!VIFhX_bl4f#UOZm_/Wn9soQ=q7B2JR$OGtrt?cHQMg6<I</?8U=<)&H[p%A"(1tY(=_J/8+s@M\Q/@AaPp>Gpc*uTF0X8fqQtFmRFW.74A=$b^46IFJrRI]Zgc4QEkgphL+inQI(GFC,J"!.lFlf#NL=Xa#o#L%:\&BJ"-?\=NuFk7ej(In)Xfm6o)ns'ldW!\^(s[9(e6Ahbo.*#h(j3mOmeuLje"Ys)%gVS.:rRYI=[TkBQ:E+&SEmE(7_oHed/Ao%&qk=6e>FWY/t9,W69MU"1Ybr9ZNbmO"=>DtR4LYOHULaj8G7:L,ho/tAZ<o:0E)hf4`Hpuet>SA^:-.Ue[G19R21)88I9&q$B@9V%#M"3Z7(r=\RcpOmmNu`1S7_^oUqa<P<$],2`'S/1W#f$NfFVCn9[f`;*Krs1*CmLhQsAY/Wd-!0&q5ClXf*T8$9\r*e/"q6UQ?Eu%S)-558n7s3)16)eg<*?UDQ@?*`AafuPS,9+\?)`dS:XqVrP`$t,)4/0.>SOMHs,29)4lRGoffW/@WTa:aX7IVW<dR"OIFTUXs:)?%H<+L(b2:B@(\ADLP)cqb2kf+b(bE81lUunn[j\C7^cIi.r<[\>Zs8I@k*W&/78eo9:sHPH^FcH>Q02AU7?^5)/\^7V?h:Kp\3Ypr%TDsPY>O4P#T'SK.ka4:;7ine[iDBFTN"I]h.V)*b=cmM8s,4rAJieW\=CN>TTg>]=6N(j02IDKUlrQhZA\WF[`a$MN:c)n-X_u\u%3^:lADo^aSq9.?A&2V]8;pJsC*+7L/<7at5jQ\mj*:8DW<DKCn?nd(D1^FJ_dYBD6R4c\F%UP2][iG`,F*Le^#O+ZsVY'5D"9;O\%=dMP;*$Q2.MJWidErMP<+^>()H]0BfIsjJ2fRq^XW"7dAo3\^)9Yo#$?$)IYHns`F:R8Wa(]3JBZ&YOa)FW7'O12Pg'T$<Cj>:_5%S6ZRa+p"Hd4p+'XgcTIqeIYHea5c)fHLKbE]/\%4_b8sllK).8od'aEOP/IG-osD1nCgd;HQH'T_#Z0kEFa0eer$)Zr]EOAk_!U0%Z1^scTi%-aNLXKcq0C]J'e-K[V`k=2I10On5".ZGcAQ1SJh#Ukh9i_t8QH9o)HLDN1XUP4:T#HE@a/[Mo.N-lJhc/WcT+.,akM>7%COp$Ua";eLBg:8do<`R[.TukCTkX<Z$\$s>$j:T1PTH#aj366-j&R!\LL:joQ]JDSEJc`Qn1$jWZlD_nM6,l%;6*&0LE*$<?pf-W%#VEO1<DXdNMK=_Q9rOOfgrRG'-W@lb\5okoe\k0(@hD4+>R+kVU@(4el/69,F<Ou<VVVaU+M>(-CQkCPi6+"L`u.(7-Dfuk=0:Em%8Mtpdc59_Y:;SQ>5:ZN065e*70kSSqf(_3LR\fV0LA;nWK#\S+$PH2C)3oW-ej<Sf"ND$T^:&Y='sD`la'o0jVMN(E]'eb+^47[W%bPDh/rK(."pX(ob@+^-WK`6'7#6MHZ44(nf<\G;&7+cSu7I!kJ,OV?NC4B:[0HDQ-Kgq"4(7sj[qj_.j]:Jj<.-ns[MS<@N3.[1"%#h]O(Y2r4D+tAEhLZTEgKNY7C.I7H9;2lD1%UtJDa61rJK?5)uV"9FI-jYC=MPE"+=*j!hRNm]sUJMtUC<D'TFh2UZ<1[oq`Rnca%1ZJ,7n$ZDc<2c]H"mY0'l2Un</:=&<]'saOS?ULLWoMkPQ-UW>G+EtM\XfEbW5d5/Crs2`=!(E7W>NOeHgBG((KRN.e(OW`%($cM%9BiE3.*iLq;QTC<O0Q_8?Vh"R$-/R!jgkTh68<L4l_3[!l`i)\.=E7ehhkrq,9&@$,n/9c&Z@uNAT(^p\OtI[.T1Y)ilT\b$Pj!D%\:nu%'J@.p'uU*,-sqP7S-&sXd+:-A-L[i;[%-iBEB1mQ9@X"G=e_ApoqC'dnh[MsTi!(uEM5?>B16HW[;gtKW(bI9$IdKA;mUo`%%;Qg/*"NTN]5"tM;d71gUp2(^mln`)2iGS*.!K,^Q\_H^+ChOe?p1(#q</#_ILsUs`t)4+%$?!Dj.Pc3H?P#e:<FR-[=K"j"G:`3%?MbRgh5fu@\aq6]hsl8<Ynok`j2=gJK?0-6%DaiFiV1e:WonRSr]WB72(6/EcXu<=/;H)MHl7rfLgEoa>,3==,,.s)ogE0l"0Gal%`T[YKJock_"Zr0&Znj2ME.:7YMT&+Hp,U!1K8,VH)iOdkO6"NB%XfOkLKf+JkRhn<9Ir:mD(Lgpd0Lp%T],6VSu@`N^oF0*UMGMJ%`'lXC\>[Kc;]>fSc=_%/BpTGkkiS=id<,hsfN@;k#:Ec=RVY`.BXj3`4^9XT.3hPE.F)$a=)Z2a^e2n7"skj43Xr9bUC^t$A("2\%0o\_WZ<sH<(ag.FE:KOmC%=ZF=s(d@97lZT7:J<Un<@6QlS+_6FTfi\iXF7q($Q`o5";lo1#R5<7!ho0SC!R,/%I-YVT?4P<['au%-*l8HBd$qDq]+UlYD2Y@"&FNtk?=T;>]kSmhR6/9G'^F1A*)']:798M[#NjkEK89.ihEEqAeG7;n8a>F,FG-8),pka>4aVf1\*@;%4l2Ag;pSs_:q@7EDHuRcmW#-mTEUHgAN5+<'!otV,W%W*\I(;PA"+K0GZ.9l##1]k+/AJM<?sgLP5OE0*6P&cr,.>[aC=-a47Z"9%.b4!n^ZX2GQBVY-H;H?=WcS#Mkt1!Aj_lt#IDT=]&8?jhAmaF1,9VjYOZ@_i2.mFfIseo>>#Xt^B):KlZ`VgE2U>$aAd?/`a^HC5%:p]OA>iT.TodLB3S=6$@>$iV6Smq>SMi\MgU(@7WG`g7U:+,9@epf6ErDlY!kncOtX%"DW$+MB#6O=[Q8(OOt,WhHOT127X^$bA$%H([BFS8RA!S=?0.!%MQR'^Kg'c]"Z%[mUTGc8bL?<gWdKDJ"C/R4.'TULk@0/EP@F;lclk&K$qFW68:0HRh8gFXFM%#S0g'1EUM\%.*,;KNjcP)2$LnRFI:a;gSIaL:Sih/JTOm4Skl,k@k.h@]!Q8`\H#5oU6;GmIDT&WkX09(q9j07]beWW4cDtq>4*.eNV08ZqWKsk%K%fn/-&RK#h3t<,[2Jkr[Cc*MGlCaeEf1l18M)eDa-?%n;<9Yb)Yi72aE;dWQ9YB<ef?uA(1/H@HefapN3G'u$b,B?W1h'2'^n>R%%?"D6lBYOc8^[:5F9\Ol1l_a_qYI?3DstD;QLLd=p>)WVjNg;U/Xl6,_seP=lg)](L@=:VPQ"3k.nU9%l[h#kp[e,<6TGf<@t!NA%c!:,gL$LVl.K>3s"jF8Gs!,jUe*2&2,?1;$-&J[\D3%r'Jd@UD4HT@_+H_9>bnR]8fBnmi#+sLX,#&!d.0K,f9`CT"[@0'XI^ra.%qM9l_NV%eqg_l"=Y$T8AjJ+MLY^3Y9aAM`jG2bJ1@g&5ZBa(H28L:dF^UBOWk;Y]?X%&@L13Jk!US(CV;+J(;VLk"DU-B/Y'?bMK%1*PF(Z2i-)Hfb/"Y1Vem\_Kft`66ud."ISG]ArNGJ9+2U>-J1\;s::+SLKaQBD%s;*Hi*dO?*0+nZ]5!O5R+XNdL,$U.U"XG6s].%ol..-c.,7q\f:,=WETi-V.!O?,[$,%mm5s[D;")J+*;(8<BQ$<i,[Z?_UUQ4lZa7MeW`+;nQ1rHhi3iUa:E46Yce#/kI^Ye/:bU#%.,IB_RGQ"pQb$_p>Rk@_U$pLN=u?VS0TK<1gl)hW,=%o=E%r?)k#(?9=^iFKMH?qfl49:,QInoqj]LN/bnrOGq!#S6W!3L9s4,/:%&*b/](B<$A[5q-?T11aQck\M)0X!E6)'7VDrR05VgR)9Z=dl0N1e]Vb38i?QVVFp7;),13;gi=8:6DjFF"-&sTCDcXc`60f%`CB0%j("_JCW]37nO%t-70?^s*$*7u\3DO&U?.q`*O?"IAIW$c1$';m"$VZZE-:IQe-tQiULmU3lH@j3+6.diASedc2r!\t`3[i2__R@9%<XW&BR7HI;hb6-WWYWa"_Q'3;.'neilm6jcd&VWbO'1Vg.^2\qa1gr`]+/W:c"5db<k-thRc[Z:duAKWIau&Y@H^Dt?LRWrO(Hi3%qS?$:_ms<"l*>iJ$_=N0>4,uP>AcC.P8,c'*:WQd;,7f=/89q^FldMUWkE=eRK)p17sob(hILrp12&s$9d[5!6SpSGC+-CK?f+lD%k5$N1,6Tg[2V+^.iij-058d$bBe(@ZpE<k!;f;'t_^WsekRc7("g2+-3pX\YaCN`<Uhj6\m$]ZDO!ha%?<cC![6D%XElbe^@ea`$%MhV@5eVp?Lj>6'/D@N#O+?hj?lu\]M31oa)Q7m\@Bq9S'&cemW'MYX-IWRBSfhUC6h/70/r+42Ij>e1OE>q8s1ZJ=teiTE\B@V+K%6Sg;k.DT^Vj-W??G.6>7mA\X*;##+AHP<F@fk6oYAnTZ*WB@R+3?aKOe_O2=:qko=\+UE\?`:L)@^HBfQ:<)HQWOtG@kX/E50\>`%\B/Fr&#V3m?KIkhM?Ka<Dn40$o(_$VrHis%g=g4""4U0)rqS(:7Y;%kB:ld5GtJ/I9Am_YP83S`cC<W[`?nsL'k:C@#rFF^h_^Xq%KAtj$)daHhQ)OSJ*Zt;Dj;e"Md;-Ym<u2Q>hWG==jE9$8DU8+SY1Q(`m^$chiNuC0C7%bS5ha;^pC;Y&>hre-S[<gTg"_Pok`[*"%i;dnF6E%9Xh=T)0ST+f!f<*i:"U)TSlS]dDjm%<a:CkE9q]tBd-uP$KRs+B!F[O[5j4=ilmA;2V'1DkiE=<=oh9BH728$443ka&=%:0m.nh(IHPimdb!O57<jCUl[EJ)0+$h_3<DI!'O#4$\%KV_<GGRdG^[jRD6!;BQ1JArmJ^kF41g'V!OMb""S/b+Ifa0EaV&pM_:3%JBC&H6f+:P8qe^N]S?fcHD?))`s>+C6f)lCr2<$?S*eE4Jr.-!V]T@++befQhM--ZOnWf0_ogetpFu9V3L%U3)"'p]2<6o($.NH!%j?7TK"T'//h@)t;ZiP`j2]_o$]g+sARrq5$'+K65FVL<(j?7]3f2e"-]F(1V%=&Io(\N+aGon#-,1C>KHTD-:_1oVc'9G:hd/3.&%X"!BBo\QB(ibE5THT9*CL>@scON2VEl,\4m@odXd"S*TIPpHlbcVG-5/BE/tUSo@Gj?7$F<hTr_4g\96r6kBdYLYDRFs-7IFL-5F%RWO>2j7=WbhO?q@9o"J9LPO'0h2oE]1]d@(;a=BOKQ.t>nD:NPYT\t)FJe&%8=5j/W2a.!PhhJrN31I<26_rj[E<2+n%$H^=UfXp%;C8eC,4@,R!^48u9&\G(>>qd#(d2:@HZ."7_rUuJDi"bI5o9#RF=n8q2XnD:>N?,Kn@cAT'G2ePH['8_#&W:F?3H#S"Q,tR6#*1R%n+igl68nh7JSaWO^u'J]Dejp]F/Qh"HP(nrBHj-foY((piK\-@H[b+_c%+[rY/?2kr&sFb"f-mfLCMCPo&/t2-FUeogU)@"#22k+%L$W"6*IeTB+Df10J'XXZrhSNAiPT1;(]:uBBGX3$!e8ORHVQi]'-F!W>B$GH^rH^AZ2sIRPbnAm!Urfqao^#mpa2G@TI'`t>e+$n%)Zh*Z<@oa:J8_`&Z@E7sB-0EDV]kQ'5"8PH,4O!*PZU6Rn58-'',#g+M)=Cj%`#P)]8g/'^kYE!W'pdW\J&L9*InZ_rui;SXu!VW%)Ct@Pn2@>'\\ml1jfGX?rgoGdk2[q$)^2*tc[rppq5CeKrgpT2I7aKgAcGL*^.H2dLmfT/6d#EujgB42fV]YghpMe:la]eIUf%,2%[8I(qc)*)pi/YUNI8LAg#^f9A0&,4pp^BGDJfTA[]d[f3J\PjIUN+ZMpQj2eJDW6^4]4<hdPh"dqi]!,!q<aX/ZJg?0lHM&8+9]R%i>Ep?rq26J<qq#r$6%=rJ%qrO#57qK^ILf0Bq<3"?`%Lm!l.=XJrMbkph6j^]FP"VJ#=dW%_tTSN=@$2pdcu7Y)r^3b;#q,T`ad]%,QQto!.5/2W!4[Opsq1H&FKPrbI/5kP6cQ:4j%b="?o/=!"(aghm/Q:"pr+9f9(b41&-PrSr:;<`8L5PT]6K6&(eR%]Yr`TePIBu%@.5=XpB$a"I%9'0r#s0.5)*Bg_;N5O:*@&Tn1F#^/p#(k^G,e=64A;ZVXG@Le77te"+uZQ&^5A(_FM?F<kX7)\&>itnO2=\<TAHr%T^]3+;U+PVI,9CS&r")*'AjYm7,_L=d>LIaiEs%HYE1I9bHc-O8/+5l[`=EF?UT3X::`^L@tCg9;>=6u$f4_TfViZs&3`%^Amp5Z%Yo)HT5kpZtMhV=eIp#*_-;jP?>j'O3pt27[9b]d.0M<NG;"tkYH.,Ub1u/1j]Ku=Z@1<[N!9%F]XK$pBH#jtX"Q=D:lDb0-VnI)=%3XFXAU>_O`I!V"AY=.?ukMAsk!jYE3C&C+coZu@3#Dp=<19(PkU[T.h!ph6>hi2Xpa_U'-%EGS4#Tk"9ec=\#1DMPh#64?QpuWFk%/k=eRpb4U(PF!,6S:%VnM8=smP02F;_<5n?mOp<iAf*u4p.Y:dIINAqA+61-ZiWp/n51omZD(ds0gTqb0_cIk`&.re6<J%A%>4+,%@j>O:0_h_-bdrPF`rq$2_r,$.Po6\@I+BU]+9R8B,Lk6M_+,i3os@*UZ&rWm#ejX]R`5QJpEL-si,i\`3(Y0m.GB'eOfLk=&Xu^a%Cd[,j@D6pg53cM7ZOZmrUEB1!Nk]5XYR(R6*WoSI*Io4j&n+?Sn9IYbW'oRm-;=Au^pi)>EWgs/a5WQ0L;:iA-+\WbdjRCc"U:S_%(aMf)1&*k.kIZE*HdJ]Z2B_duL\jjQ_5DcgS'iGSf\iDp#l\DGqGG%i%`.<k8Ho>$^FLUR#ej=4cl<K#5"r'4JP:Jj^cS[ed1H)h%?n8pP5iA..PlOE!n@=[HX:p02)mCG3!oGX@,]Z\W`odm3)'eX/G'kM'#mbR+9a!Z=[FMPg7c7KD((JrO^c+!\VH+o13E!XPRg=DB%Ue"^_,Od;?+FIK^n8Zb3+\rA-^)>:o%`.=u9%YFEpfPV<,R0mu+i`+gpmctn/gLXno+AiKM8A?nMLZ=lNslQ!98ULJTZ-13&:Cj8%n1$I%*tRqR5m$QO4+Wn)i,ehWkgok1fPm8lJC!]Re.[AY_3S^!#^jf:_%I@lI'/(j4<aLT)gk_Bi,dZoj\$j%hs,O)I3\rfj6d\=%s+'$38m=JP5k$Kn+Is'kDT&6H6h#*MLSY%@rCXmVQ!3$B&R3ig^h6V#Mq8ZYe0/%9mDRlq6TI7C&q<\&KTo6kmhp(*OLuk<rm`Rp%G51qe$/YdYLtVqL8,tijpCt[q!roR-N`:*+raf=#L*Qn/_:-T,&H"R3pm5RaT%,OiQV#s/Ho;Bs(B%`0n9H5_6&4B*[KM?j"<SA'%a/];oO(Gd;@q+pf9G6bh%/sg@JkJ0jpc_rc:1Y8qO6Sj5<=-O?kq$T^+FIM[OPen\pq43!4p$=3,?^ll+S[e](_6u[5/4CI&J0=R%AXEq:-TK?7Q4i9h_=uWN;cc6R3P>Zc^ENAC]]4i+#l\DhrG`.[k:dq?Mbr@NNpN>A_=tueVVM=A_oE%-PmDbeM>"E=^o*am6kb,I%>67Vr"MPs*Q_G_oknX9/M84>9/007ZK>*uZn86TsOoTmt6b-1un6\tDT/QhDIca&P&br^MK/O>:Ho^B!7,VF<n1-R%s14OFs&FMa%"?li5U)Ss)GFWY(pj4N`l3NOIHPU`/nH4:073)`S#/KsG^)[Z4DhUe5&bZq%QBiudC^kl4M93)tmtiVR>!+&m'jKBd(n'l?Ii55e%JD\gn"CDgkO+j?OLYjmT#T*dDSkp=U9>^-L)CsKq#/;O)7YEDQpKYX^38sV8qsEPU^[EB<*Ia%Y[jU//9`l`ipLH*@E-:e9\X@#K%!$NUG"Td57&q05=(^(lhI;aPrWtQ+n:P'+L-GfF9IZ#Hj3r#9\MG>*"Hg_NQO&,kk\&+I)Ne4tm]tppkk^-"QD)_+#2;R=M(A,<=%<7(mRpn#t[<GEP%DjqAu$,5R[E+9N.O!Dd*X.\p`_Pje26f6W#P9P:Hmk$H!UKg=H>;]+;Sj_Jb3h).YM8&0'8[W^54lLGLOm%.t%ggm)lI36-Wc38Vl:)6r=_XC($+j/0>Z@rHm`G\Q\*.JrhK\sNcJ):T^c_6AClL9.01`S@GQ>2b]Ua'p>n"$T2rnHu;*r*8BJ\SZN%N%,_YInp[p'N)p.PE87"1@b*41l_ft^IN3tS\O4R;8g:89`TX@ncUfR!.:,2L_m)ln=>_>E'Egd,ZQH%IrG+/ci-9[k_?i"m7Sob%nb4;E=X0Y.S[715K"e_n]1,f;ml;$p.no_$#B6lu%=[1Fl2eZ_,5f]=hnSTnT0)tb$bLWX4lI[APf2H@/u:nW`8<YfUN92imtoe\%q[WNe#$-`%h\-*EP,RF0M20=/"VZA]4&_=Vpj3EceVV%bHpe?D!:U:,YoX&KT6S<f&DU)ik=>)R'7Wfme)-"sVj[YGh2]6?Ar#DM%ipW:PHF&:^'-_!YFo8q,O'!S.IrFG<CNq]64VO6pKoWqBn@X.5L;13OXD-V]\W`pp"5ku`.?&!AI-MXVD);5V9)trT!l1^]JW*Y3%n@]j6beF/91YL+ali;Fb95$U^!']koRjA-.:1oFI#^gjJE/gb`i"KZ)Y*oWD7OG%4Nkd#+M6^/+n-Nkcdh763H:7cn+Rkpd=.#g/%nB%uB8Ho6GEAqXj9ps5NPYF[+LLe)!lTjAi&ML%1&boK'[uS85Z`*qC,4M_PY3DM`Hop(-g+/#q\!%::AK^IKI@+&`9IF-F!]6ug%T-0m(eEJb4pr#?s#ZUtYn+7p5Y76)E2rY*75k+0aX7RY\pog1Y>=.hkUjFP5Vjl>6RaE#AF':$t^DK$:5Pd>hZU5@HOSmSu;BYbe%ZLU5`)BBQ/\B/JX"Fd`rJaZf?hNnLq9]YjS!hVCrQrt!qSFue$!PioBIN&_gU<L'7)?@Mj"+\]2>_\R+]=]c6Uf@0dbVr;gmCL:$%VZOZ;`WY5kgOU&<,3qB0Ni6\'"MRZjc8YF^#01p,!rm-F"F`3\=jj3Kf5fRVpm><Sd1Q/3(ZhS4:>rficPlrC<B<L$nPiFSi"olI%n9KTh`7j-s4c"Fk5O3p%b;od@f+Ks9O8*Jo\Q;]3_cL?d"RFm<,/-7K61A$;LhYK,cDVd6GAF)Pe7S&cfC%5)iV?][#-Fp*4!_Pp%3jaE!ik)j?lu7[1GPk\a*1c8@^-Ab<3s*/8"+cMi6r.:XZ&hKA#^k3>1/$`/eHLj7JR=B/e^=D'NrQsu^KgS2,7:Gjp!MmK1&/CW%6\E@*<h\D1Q\,5jZ*.tZ]hHs6MHN(N_68T6/o8P^4$U2qm=^]t0A%;(6#L)-CDePOCC'iQC(U;XgbU$&?D8YM1I1t_+moC;[-0LB%]B-WSB=<E.G6)8aomt]L9nC-a`k^O0IckUm#T.sP\FqW$9oM57kR.Te:ZG"!0_h0Ka`06JIPitkIPh<6ht]0fq@[$$@St[6'F[/C%Yj$VejOd.Yi)`jpi)aE=n4CJnbL8`OR.,G0#i>oBBcfDBT=_X]2F7,We3Wl[(a+4o[M]Ph+FJ[g3QJ#/KL.R38uJpDHW9Q2JJ:Wd%IPj!uF#AtPmXC/8/2O5a]!B.%i1h/oY<-"&g1GCH&.O:gYO:SEH(u8s#lflEeg3j!p0#H5)G$H13@b@W,7\/biU`1eAmQEme^QkZ%G@Q<\'VVB\54S<Y$MEZfL/2=;2V77iHghK"?VLubIlGCHWu1UGX9!MD?[][JU>Ar\L[Pt0Rf#"RV#\(P%_nIt#\ccgn3-<tbCQk#%%rF:R?CAl@^$`s9-#iY0<$0hQJ]%5$UPu*u_XjZh9.m,]rG@?]DJ*29MSnnOoqfXt(<5>:Bka(NgfU_K!t:AYr*nqVr+ZW_4u$V@%#81LlH][@W5l@c[hgtRQeq!O>itUS^MI4+TGWcS1?Eq<8H&qPZDjMot3Z?Hh./[gr.")&<S8ZT$k`2")+RHg%auAMi?*4j4ljP^g%jCPo:maXMG=L[EoIG7hXh@:!K?[B5Wn-u[lp4DkQ6q))_iE&t2FM"fKY(1=_5*iUF'%460L%!T\Jf$)BC@BnRphtPukGQ.ug6-G/%6hYjGa/<nsM3A"X0=D(oVrIXpf=,U>SR+uJH+30990G<9T6Kf;\+Fp@5]7m"%J7<DCg)FSZ=3J6[$qsN]bpA$0%4qVJ8V1eSm/3f%dk:t%a9'0?@t7T;@rJQ2^G!#"^\:Mo%tNIq"Uu@"L_TVIbs5U5??ZTA.cL-P<5,j]gDlR[AW1SXhl"eH?5Q&1r\ekOBZ06&%B%:n%4Dc*d?VDIC?B&G9]%Yt4VoD*)'=#NF=Y:A9[A"b(`84QoH"\u\p>,eZEEmFSnFWQjleC_>mp1gE^tI.Li8bk.iP_G&>A=g.@j(4b%s0:7a)`uWBfmrfB:-<+bAQoki#@tFbC'-;&)[_Cc*o$)\T0Djl..!soT;Iqb]dIi:BNY/o9g8Po90hs(Z*)9m1,0^)1tG)_28do=%j99G!UYLn?]uN[TTo9VHTGZ3c<YD7S1Vf4+"d5imn#N^En+gt52>PYG:%P2$r^?_p)Q'4s*T8*[je\a@X"Co'O)hO\W[DOVf+dk*%<-&Oj]oMBFi<I%M`f@e]'*UM09SE,$lHUe\]AMfL5"59iipVf)j6s$'nFr_N@R0YLhd%j[S+K<`/beS6js7.^&GU-Or3VL"J)0I>%e*g(I&:>D.*?Sa?h\4;&&:Bt':Gr?i;648]jaXu^_`P]ar2G(\o:,Yl"TF1kIeSb-s(;5shu)uU&)Vg6o]+uj^]3u)huCk1=K\k"%s)\eMs)brc=P;$dn#MBhrqYAWE9YR<hd/MEn92VE=9&%[5Q&E;rl<2h^A-F>?J#1A_qMl=Y.jo"QCI[Bp"r"5a.':,Mnf/WpRhHa%a7'#hoC[.=s5S<15.u@<_[d*CJ,6Y??XA3]j/5-@q]C:bo^^'&qhP35jn_PTrek.]c2[XpGQ/1W:l02~>%AI9_PrivateDataEnd